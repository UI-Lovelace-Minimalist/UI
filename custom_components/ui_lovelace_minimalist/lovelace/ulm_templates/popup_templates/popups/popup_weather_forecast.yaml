---
popup_weather_forecast:
  variables:
    ulm_weather_popup_surpress_first_forecast: false
  show_icon: false
  show_name: false
  show_label: false
  show_units: false
  styles:
    grid:
      - grid-template-areas: "'header header' 'content1 content2' 'footer footer'"
      - grid-template-rows: "14vh 56vh 16vh"
      - grid-template-columns: "1fr 1fr"
      - column-gap: "30px"
    card:
      - background: "var(--primary-background-color)"
      - box-shadow: "none"
      - padding: "4%"
    custom_fields:
      header:
        - align-self: "absolute"
        - padding-bottom: "6%"
      content1:
        - align-self: "center"
        - padding-bottom: "6%"
        - padding-right: "3%"
      content2:
        - align-self: "center"
        - padding-top: "30px"
      buttons:
        - display: "none"
      footer:
        - align-self: "absolute"
        - margin-top: "25px"
        - padding-top: "6%"
  extra_styles: |
    @media (max-width: 800px) {
      #container {
        grid-template-areas: "header" "content1" "buttons" "footer" !important;
        grid-template-rows: 10vh 56vh 13vh 13vh !important;
        grid-template-columns: 1fr !important;
      }
      #buttons {
        display: block !important;
        align-self: start !important;
      }
      #content2 {
        display: none;
      }
    }
  custom_fields:
    header:
      card:
        type: "custom:button-card"
        template: "popup_header"
        entity: "[[[ return entity.entity_id ]]]"
        icon: |
          [[[
            var state = entity.state;
            var icon = {
              "clear-night": "mdi:weather-night",
              "cloudy": "mdi:weather-cloudy",
              "exceptional": "mdi:weather-sunny-alert",
              "fog": "mdi:weather-fog",
              "hail": "mdi:weather-hail",
              "lightning": "mdi:weather-lightning",
              "lightning-rainy": "mdi:weather-lightning-rainy",
              "partlycloudy": "mdi:weather-partly-cloudy",
              "pouring": "mdi:weather-pouring",
              "rainy": "mdi:weather-rainy",
              "snowy": "mdi:weather-snowy",
              "snowy-rainy": "mdi:weather-snowy-rainy",
              "sunny": "mdi:weather-sunny",
              "windy": "mdi:weather-windy",
              "default": "mdi:crosshairs-question"
              }
            return (icon[state] || icon["default"]);
          ]]]
    content1:
      card:
        type: "vertical-stack"
        cards:
          - type: "custom:button-card"
            entity: "[[[ return entity.entity_id ]]]"
            show_name: false
            show_icon: false
            styles:
              grid:
                - grid-template-areas: "'temp' 'tempminmax'"
                - grid-template-columns: "1fr"
                - grid-template-rows: "min-content min-content"
              card:
                - background: "none"
                - box-shadow: "none"
              custom_fields:
                temp:
                  - font-size: "60px"
            custom_fields:
              temp: "[[[ return entity.attributes.temperature + '°' ]]]"
              tempminmax: "[[[ return 'Max. ' + entity.attributes.forecast[0].temperature + '° Min. ' + entity.attributes.forecast[0].templow + '°' ]]]"
          - type: "vertical-stack"
            cards: >
              [[[
                let rows = [];

                function generate_weather_row(index) {
                  var row = {
                    'type': 'custom:button-card',
                    'template': 'popup_weather_row',
                    'entity': entity.entity_id,
                    'variables': {
                      'ulm_popup_weather_entity_idx': index
                    }
                  };
                  return row;
                }

                let surpress_first_forecast = ('ulm_weather_popup_surpress_first_forecast' in variables) ? variables.ulm_weather_popup_surpress_first_forecast : false;

                let index = 0;
                for (let forecast in entity.attributes.forecast) {

                  if ((index == 0) && surpress_first_forecast) {
                    index++;
                    continue;
                  }

                  rows.push(generate_weather_row(index));
                  index++;
                  if (rows.length >= 6) {
                    break;
                  }
                }
                return rows;
              ]]]
            # Code above create following cards
            # cards:
            #   - type: "custom:button-card"
            #     template: "popup_weather_row"
            #     entity: "[[[ return entity.entity_id ]]]"
            #     variables:
            #       ulm_popup_weather_entity_idx: 0
            #   - type: "custom:button-card"
            #     template: "popup_weather_row"
            #     entity: "[[[ return entity.entity_id ]]]"
            #     variables:
            #       ulm_popup_weather_entity_idx: 1
            #   - type: "custom:button-card"
            #     template: "popup_weather_row"
            #     entity: "[[[ return entity.entity_id ]]]"
            #     variables:
            #       ulm_popup_weather_entity_idx: 2
            #   - type: "custom:button-card"
            #     template: "popup_weather_row"
            #     entity: "[[[ return entity.entity_id ]]]"
            #     variables:
            #       ulm_popup_weather_entity_idx: 3
            #   - type: "custom:button-card"
            #     template: "popup_weather_row"
            #     entity: "[[[ return entity.entity_id ]]]"
            #     variables:
            #       ulm_popup_weather_entity_idx: 4
            #   - type: "custom:button-card"
            #     template: "popup_weather_row"
            #     entity: "[[[ return entity.entity_id ]]]"
            #     variables:
            #       ulm_popup_weather_entity_idx: 5
    buttons:
      card:
        type: "custom:button-card"
        template: "list_2_items"
        styles:
          card:
            - background: "none"
          grid:
            - align-items: "initial"
        custom_fields:
          item1:
            card:
              icon: "mdi:calendar-month"
              type: "custom:button-card"
              template:
                - "popup_button"
                - "popup_button_selected"
                - "popup_button_forecast"
          item2:
            card:
              icon: "mdi:radar"
              type: "custom:button-card"
              template:
                - "popup_button"
                - "popup_button_radar"
              tap_action:
                action: "fire-dom-event"
                browser_mod:
                  service: "browser_mod.popup"
                  data:
                    hide_header: true
                    style: |
                      --popup-background-color: var(--primary-background-color);
                      --popup-border-radius: 20px;
                      --popup-padding-x: 24px;
                      --popup-padding-y: 20px;
                      --popup-max-width: auto
                      --popup-min-width: 800px;
                    card_mod:
                      style:
                        ha-dialog$: |
                          @media (max-width: 800px){
                            div.mdc-dialog__container {
                              --mdc-dialog-min-width: 100vw;
                              --mdc-dialog-max-width: 100vw;
                              --mdc-dialog-min-height: 100%;
                              --ha-dialog-border-radius: 0px;
                            }
                          }
                    content:
                      type: "custom:button-card"
                      template: "popup_weather_radar"
                      entity: "[[[ return entity.entity_id ]]]"
    footer:
      card:
        type: "custom:button-card"
        template: "popup_list_items"
        custom_fields:
          item1:
            card:
              type: "custom:button-card"
              template: "popup_button_back"
    content2:
      card:
        type: "custom:weather-radar-card"
        zoom_level: 9
        data_source: "RainViewer-Meteored"
        show_marker: "true"
        card_mod:
          style: |
            ha-card {
              height: 350px !important;
              border-radius: 20px !important;
            }
