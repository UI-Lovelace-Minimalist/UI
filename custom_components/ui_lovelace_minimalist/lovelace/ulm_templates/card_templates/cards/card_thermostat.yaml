---
### Card Thermostat ###
card_thermostat:
  template:
    - "ulm_language_variables"
  variables:
    ulm_card_thermostat_name: "[[[ return entity.attributes.friendly_name ]]]"
    ulm_card_thermostat_icon: "[[[ return 'mdi:thermometer' ]]]"
    ulm_card_thermostat_enable_collapse: false
    ulm_card_thermostat_enable_controls: false
    ulm_card_thermostat_enable_hvac_modes: false
    ulm_card_thermostat_enable_background_color: false
    ulm_card_thermostat_enable_display_temperature: false
    ulm_card_thermostat_enable_horizontal: false
    ulm_card_thermostat_enable_popup: false
  show_icon: false
  show_name: false
  show_label: false
  hold_action:
    action: >
      [[[
          if (variables.ulm_card_thermostat_enable_popup){
            return 'fire-dom-event'
          }
          else{
            return 'more-info'
          }
      ]]]
    browser_mod:
      command: "popup"
      large: true
      hide_header: true
      card:
        type: "custom:button-card"
        template: "popup_thermostat_temperature"
        variables:
          ulm_popup_thermostat_entity: "[[[ return entity.entity_id ]]]"
  state:
    - operator: "template"
      value: >
        [[[
          return (entity.attributes.hvac_action == 'heating' && variables.ulm_card_thermostat_enable_background_color)
        ]]]
      styles:
        card:
          - background-color: "rgba(255,165,0,0.75)"
    - operator: "template"
      value: >
        [[[
          return (entity.attributes.hvac_action == 'cooling' && variables.ulm_card_thermostat_enable_background_color)
        ]]]
      styles:
        card:
          - background-color: "rgba(0,191,255,0.75)"
    - operator: "template"
      value: >
        [[[
          return entity.state != 'off'
        ]]]
      styles:
        card:
          - background-color: "rgba(var(--color-background-yellow),var(--opacity-bg))"
  styles:
    grid:
      - grid-template-areas: >
          [[[
                var areas = [];
                if (variables.ulm_card_thermostat_enable_horizontal) {
                  return "\"item1 item2\"";
                }
                if (variables.ulm_card_thermostat_enable_display_temperature) {
                    areas.push("item1 item4");
                } else {
                  areas.push("item1 item1");
                }
                if ( !(variables.ulm_card_thermostat_enable_collapse && entity.state == "off") &&  variables.ulm_card_thermostat_enable_controls) {
                    areas.push("item2 item2");
                }
                if ( !(variables.ulm_card_thermostat_enable_collapse && entity.state == "off") &&  variables.ulm_card_thermostat_enable_hvac_modes) {
                    areas.push("item3 item3");
                }
                return "\"" + areas.join("\" \"") + "\"";
          ]]]
      - grid-template-columns: >
          [[[
                if (variables.ulm_card_thermostat_enable_horizontal) {
                  return "1fr 1fr";
                } else {
                  return "2fr 1fr";
                }
          ]]]
      - grid-template-rows: >
          [[[
                var rows = [];
                rows.push("min-content");
                if (variables.ulm_card_thermostat_enable_horizontal) {
                  return "min-content";
                }
                if ( !(variables.ulm_card_thermostat_enable_collapse && entity.state == "off") &&  variables.ulm_card_thermostat_enable_controls) {
                    rows.push("min-content");
                }
                if ( !(variables.ulm_card_thermostat_enable_collapse && entity.state == "off") &&  variables.ulm_card_thermostat_enable_hvac_modes) {
                    rows.push("min-content");
                }
                return rows.join(" ");
          ]]]
      - row-gap: "12px"
    card:
      - border-radius: "var(--border-radius)"
      - box-shadow: "var(--box-shadow)"
      - padding: "12px"
    custom_fields:
      item2:
        - display: >
            [[[
                if ( !(variables.ulm_card_thermostat_enable_collapse && entity.state == "off") &&  variables.ulm_card_thermostat_enable_controls) {
                      return "block";
                  } else {
                      return "none";
                  }
            ]]]
      item3:
        - display: >
            [[[
                if (variables.ulm_card_thermostat_enable_horizontal) {
                  return "none";
                }
                if ( !(variables.ulm_card_thermostat_enable_collapse && entity.state == "off") &&  variables.ulm_card_thermostat_enable_hvac_modes) {
                  return "block";
                } else {
                  return "none";
                }
            ]]]
      item4:
        - display: >
            [[[
                if (variables.ulm_card_thermostat_enable_horizontal) {
                  return "none";
                }
                if (variables.ulm_card_thermostat_enable_display_temperature) {
                  return "block";
                } else {
                  return "none";
                }
            ]]]
  custom_fields:
    item1:
      card:
        type: "custom:button-card"
        template:
          - "icon_more_info"
        custom_fields:
          item1:
            card:
              type: "custom:button-card"
              entity: "[[[ return entity.entity_id ]]]"
              icon: "[[[ return variables.ulm_card_thermostat_icon ]]]"
              hold_action:
                action: >
                  [[[
                      if (variables.ulm_card_thermostat_enable_popup){
                        return 'fire-dom-event'
                      }
                      else{
                        return 'more-info'
                      }
                  ]]]
                browser_mod:
                  command: "popup"
                  large: true
                  hide_header: true
                  card:
                    type: "custom:button-card"
                    template: "popup_thermostat_temperature"
                    variables:
                      ulm_popup_thermostat_entity: "[[[ return entity.entity_id ]]]"
              state:
                - operator: "template"
                  value: >
                    [[[
                      return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating')
                    ]]]
                  styles:
                    icon:
                      - color: "rgba(var(--color-red),1)"
                    img_cell:
                      - background-color: "rgba(var(--color-red),0.2)"
          item2:
            card:
              type: "custom:button-card"
              entity: "[[[ return entity.entity_id ]]]"
              name: "[[[ return variables.ulm_card_thermostat_name ]]]"
              tap_action:
                action: "call-service"
                service: >
                  [[[
                        if (entity.state =='off'){
                            return "climate.turn_on";
                        } else {
                            return "climate.turn_off";
                        }
                  ]]]
                service_data:
                  entity_id: "[[[ return entity.entity_id ]]]"
              hold_action:
                action: >
                  [[[
                      if (variables.ulm_card_thermostat_enable_popup){
                        return 'fire-dom-event'
                      }
                      else{
                        return 'more-info'
                      }
                  ]]]
                browser_mod:
                  command: "popup"
                  large: true
                  hide_header: true
                  card:
                    type: "custom:button-card"
                    template: "popup_thermostat_temperature"
                    variables:
                      ulm_popup_thermostat_entity: "[[[ return entity.entity_id ]]]"
              label: >-
                [[[
                    var label = variables.ulm_off ;
                    if (entity.state =='off'){
                      label = variables.ulm_off ;
                    }else if (entity.state == 'auto'){
                      label = variables.ulm_auto ;
                    }else if (entity.state == 'heat'){
                      label = variables.ulm_heat ;
                    }else if (entity.state == 'cool'){
                      label = variables.ulm_cool ;
                    }else if (entity.state == 'dry'){
                      label = variables.ulm_dry ;
                    }else if (entity.state == 'fan_only'){
                      label = variables.ulm_fan_only ;
                    }else if (entity.state == 'heat_cool'){
                      label = variables.ulm_heat_cool ;
                    }else{
                      label = variables.ulm_idle;
                    }

                    if (entity.attributes.hvac_action == 'heating'){
                      var mode = variables.ulm_heating ;
                    }else if (entity.attributes.hvac_action == 'cooling'){
                      var mode = variables.ulm_cooling ;
                    }else if (entity.attributes.hvac_action == 'idle'){
                      var mode = variables.ulm_idle ;
                    }else{
                      var mode = variables.ulm_unavailable;
                    }

                    if(entity.attributes.temperature && !variables.ulm_card_thermostat_enable_display_temperature){
                      return (entity.attributes.current_temperature ) + '°' + ' • ' + label + (entity.state !='off' ? ' (' + mode + ')' : '');
                    }
                    return label;
                ]]]
    item2:
      card:
        type: "custom:button-card"
        template: "list_3_items"
        styles:
          card:
            - background: "none"
        custom_fields:
          item1:
            card:
              type: "custom:button-card"
              template: "widget_icon"
              entity: "[[[ return entity.entity_id ]]]"
              icon: "mdi:minus"
              tap_action:
                action: "call-service"
                service: "climate.set_temperature"
                service_data:
                  temperature: |
                    [[[
                      const step = entity.attributes.target_temp_step || 0.5
                      return (parseFloat(states[entity.entity_id].attributes.temperature) - step)
                    ]]]
                  entity_id: "[[[ return entity.entity_id ]]]"
              state:
                - operator: "template"
                  value: >
                    [[[
                      return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color
                    ]]]
                  styles:
                    card:
                      - background-color: "rgba(var(--color-theme),0.15)"
          item2:
            card:
              type: "custom:button-card"
              show_icon: false
              show_name: false
              show_label: true
              entity: "[[[ return entity.entity_id ]]]"
              label: |-
                [[[
                    var temperature = entity.attributes.temperature;
                    if (temperature == null) {
                      var temperature = '-';
                    }
                    return temperature + hass.config.unit_system.temperature;
                ]]]
              styles:
                card:
                  - background: "none"
                  - box-shadow: "none"
          item3:
            card:
              type: "custom:button-card"
              template: "widget_icon"
              entity: "[[[ return entity.entity_id ]]]"
              icon: "mdi:plus"
              tap_action:
                action: "call-service"
                service: "climate.set_temperature"
                service_data:
                  temperature: |
                    [[[
                      const step = entity.attributes.target_temp_step || 0.5
                      return (parseFloat(states[entity.entity_id].attributes.temperature) + step)
                    ]]]
                  entity_id: "[[[ return entity.entity_id ]]]"
              state:
                - operator: "template"
                  value: >
                    [[[
                      return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color
                    ]]]
                  styles:
                    card:
                      - background-color: "rgba(var(--color-theme),0.15)"
    item3:
      card:
        type: "custom:button-card"
        styles:
          grid:
            - grid-template-areas: >
                [[[
                      var areas = [];
                      if (states[entity.entity_id].attributes.hvac_modes.includes("auto")) {
                          areas.push("auto");
                      }
                      if (states[entity.entity_id].attributes.hvac_modes.includes("heat")) {
                          areas.push("heat");
                      }
                      if (states[entity.entity_id].attributes.hvac_modes.includes("cool")) {
                          areas.push("cool");
                      }
                      if (states[entity.entity_id].attributes.hvac_modes.includes("dry")) {
                          areas.push("dry");
                      }
                      if (states[entity.entity_id].attributes.hvac_modes.includes("fan_only")) {
                          areas.push("fan_only");
                      }
                      if (states[entity.entity_id].attributes.hvac_modes.includes("heat_cool")) {
                          areas.push("heat_cool");
                      }
                      return "\"" + areas.join(" ") + "\"";
                ]]]
            - grid-template-columns: >
                [[[
                      var columns = [];
                      if (states[entity.entity_id].attributes.hvac_modes.includes("auto")) {
                          columns.push("1fr");
                      }
                      if (states[entity.entity_id].attributes.hvac_modes.includes("heat")) {
                          columns.push("1fr");
                      }
                      if (states[entity.entity_id].attributes.hvac_modes.includes("cool")) {
                          columns.push("1fr");
                      }
                      if (states[entity.entity_id].attributes.hvac_modes.includes("dry")) {
                          columns.push("1fr");
                      }
                      if (states[entity.entity_id].attributes.hvac_modes.includes("fan_only")) {
                          columns.push("1fr");
                      }
                      if (states[entity.entity_id].attributes.hvac_modes.includes("heat_cool")) {
                          columns.push("1fr");
                      }
                      return columns.join(" ");
                ]]]
            - grid-template-rows: "min-content"
            - column-gap: "7px"
          card:
            - box-shadow: "none"
            - padding: "0px"
            - background: "none"
          custom_fields:
            auto:
              - display: >
                  [[[
                    if (states[entity.entity_id].attributes.hvac_modes.includes("auto")) {
                        return "block";
                    } else {
                        return "none";
                    }
                  ]]]
            heat:
              - display: >
                  [[[
                    if (states[entity.entity_id].attributes.hvac_modes.includes("heat")) {
                        return "block";
                    } else {
                        return "none";
                    }
                  ]]]
            cool:
              - display: >
                  [[[
                    if (states[entity.entity_id].attributes.hvac_modes.includes("cool")) {
                        return "block";
                    } else {
                        return "none";
                    }
                  ]]]
            dry:
              - display: >
                  [[[
                    if (states[entity.entity_id].attributes.hvac_modes.includes("dry")) {
                        return "block";
                    } else {
                        return "none";
                    }
                  ]]]
            fan_only:
              - display: >
                  [[[
                    if (states[entity.entity_id].attributes.hvac_modes.includes("fan_only")) {
                        return "block";
                    } else {
                        return "none";
                    }
                  ]]]
            heat_cool:
              - display: >
                  [[[
                    if (states[entity.entity_id].attributes.hvac_modes.includes("heat_cool")) {
                        return "block";
                    } else {
                        return "none";
                    }
                  ]]]
        custom_fields:
          auto:
            card:
              type: "custom:button-card"
              template: "widget_icon"
              icon: "mdi:autorenew"
              tap_action:
                action: "call-service"
                service: "climate.set_hvac_mode"
                service_data:
                  entity_id: "[[[ return entity.entity_id ]]]"
                  hvac_mode: "auto"
              state:
                - operator: "template"
                  value: >
                    [[[
                      return entity.state == "auto"
                    ]]]
                  styles:
                    card:
                      - background-color: "rgba(var(--color-green),0.5)"
                    icon:
                      - color: "rgba(var(--color-green),1)"
                - operator: "template"
                  value: >
                    [[[
                      return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color
                    ]]]
                  styles:
                    card:
                      - background-color: "rgba(var(--color-theme),0.15)"
          heat:
            card:
              type: "custom:button-card"
              template: "widget_icon"
              icon: "mdi:fire"
              tap_action:
                action: "call-service"
                service: "climate.set_hvac_mode"
                service_data:
                  entity_id: "[[[ return entity.entity_id ]]]"
                  hvac_mode: "heat"
              state:
                - operator: "template"
                  value: >
                    [[[
                      return entity.state == "heat"
                    ]]]
                  styles:
                    card:
                      - background-color: "rgba(var(--color-red),0.5)"
                    icon:
                      - color: "rgba(var(--color-red),1)"
                - operator: "template"
                  value: >
                    [[[
                      return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color
                    ]]]
                  styles:
                    card:
                      - background-color: "rgba(var(--color-theme),0.15)"
          cool:
            card:
              type: "custom:button-card"
              template: "widget_icon"
              icon: "mdi:snowflake"
              tap_action:
                action: "call-service"
                service: "climate.set_hvac_mode"
                service_data:
                  entity_id: "[[[ return entity.entity_id ]]]"
                  hvac_mode: "cool"
              state:
                - operator: "template"
                  value: >
                    [[[
                      return entity.state == "cool"
                    ]]]
                  styles:
                    card:
                      - background-color: "rgba(var(--color-blue),0.5)"
                    icon:
                      - color: "rgba(var(--color-blue),1)"
                - operator: "template"
                  value: >
                    [[[
                      return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color
                    ]]]
                  styles:
                    card:
                      - background-color: "rgba(var(--color-theme),0.15)"
          dry:
            card:
              type: "custom:button-card"
              template: "widget_icon"
              icon: "mdi:water"
              tap_action:
                action: "call-service"
                service: "climate.set_hvac_mode"
                service_data:
                  entity_id: "[[[ return entity.entity_id ]]]"
                  hvac_mode: "dry"
              state:
                - operator: "template"
                  value: >
                    [[[
                      return entity.state == "dry"
                    ]]]
                  styles:
                    card:
                      - background-color: "rgba(var(--color-yellow),0.5)"
                    icon:
                      - color: "rgba(var(--color-yellow),1)"
                - operator: "template"
                  value: >
                    [[[
                      return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color
                    ]]]
                  styles:
                    card:
                      - background-color: "rgba(var(--color-theme),0.15)"
          fan_only:
            card:
              type: "custom:button-card"
              template: "widget_icon"
              icon: "mdi:fan"
              tap_action:
                action: "call-service"
                service: "climate.set_hvac_mode"
                service_data:
                  entity_id: "[[[ return entity.entity_id ]]]"
                  hvac_mode: "fan_only"
              state:
                - operator: "template"
                  value: >
                    [[[
                      return entity.state == "fan_only"
                    ]]]
                  styles:
                    card:
                      - background-color: "rgba(var(--color-theme),0.5)"
                    icon:
                      - color: "rgba(var(--color-theme),1)"
                - operator: "template"
                  value: >
                    [[[
                      return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color
                    ]]]
                  styles:
                    card:
                      - background-color: "rgba(var(--color-theme),0.15)"
          heat_cool:
            card:
              type: "custom:button-card"
              template: "widget_icon"
              icon: "mdi:sun-snowflake"
              tap_action:
                action: "call-service"
                service: "climate.set_hvac_mode"
                service_data:
                  entity_id: "[[[ return entity.entity_id ]]]"
                  hvac_mode: "heat_cool"
              state:
                - operator: "template"
                  value: >
                    [[[
                      return entity.state == "heat_cool"
                    ]]]
                  styles:
                    card:
                      - background-color: "rgba(var(--color-purple),0.5)"
                    icon:
                      - color: "rgba(var(--color-purple),1)"
                - operator: "template"
                  value: >
                    [[[
                      return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') && variables.ulm_card_thermostat_enable_background_color
                    ]]]
                  styles:
                    card:
                      - background-color: "rgba(var(--color-theme),0.15)"
    item4:
      card:
        type: "custom:button-card"
        show_icon: false
        show_name: false
        show_label: true
        entity: "[[[ return entity.entity_id ]]]"
        label: |-
          [[[
              var temperature = entity.attributes.current_temperature;
              if (temperature == null) {
                var temperature = '-';
              }
              return temperature + hass.config.unit_system.temperature;
          ]]]
        styles:
          card:
            - background: "none"
            - box-shadow: "none"
