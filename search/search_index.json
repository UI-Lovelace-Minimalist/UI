{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the UI-Lovelace-Minimalist wiki!","text":""},{"location":"#welcome-to-the-ui-lovelace-minimalist-wiki","title":"Welcome to the UI-Lovelace-Minimalist wiki","text":"<p>Under construction!</p> <p>Hello dear UI Lovelace Minimalist fan. Nice that you found our new wiki. This is currently under construction! The contents are therefore to be enjoyed with caution and can still change at any time.</p> <p>This wiki is intended to help you install and use the wonderful \u201ctheme\u201d UI-Lovelace-Minimalist created by tben. Feel free to look around and get a deeper insight into the internal functions and tricks, this \u201ctheme\u201d is using. Use them to your own likings, and if you develop something, that others must see, feel free to post it to this wiki or in the thread at the Home Assistant forum, which you can find here.</p> <p> </p>"},{"location":"#youtube-video-on-how-to-setup-ui-minimalist","title":"Youtube video on how to setup UI Minimalist","text":""},{"location":"#what-is-ui-lovelace-minimalist","title":"What is \"Ui-Lovelace-Minimalist\"","text":"<p>We call it a \"theme\" (the quotation marks are on purpose), as it uses theme specific techniques, but it uses so much more, that one can\u2019t say it is only a theme. This \"theme\" is depending on two things, namely using a theme and make extensive use of the <code>template</code> function from the <code>custom_component</code> button-card made by RomRaider.</p>"},{"location":"#a-little-history","title":"A little history","text":"<p>This \"theme\" is based on the awesome work <code>7ahang</code> made on behance (see the links under credits), and was developed from tben for his own use of Home Assistant. But as this \u201ctheme\u201d is such a wonderful and nice look for Home Assistant, it quickly became clear, that some organizational work should be done, to give others the possibility to use it as well. And here we are!</p>"},{"location":"#contributions","title":"Contributions","text":"<p>This is a living project and all input is very welcome! If you configured and designed a card, that you would like to share, please feel free to do so! We are happy to include your contribution so others can use it as well!</p>"},{"location":"#credits","title":"Credits","text":"<ul> <li>This design was made by tben</li> <li>A lot of inspiration is taken from 7ahang\u2019s work found on Behance.</li> <li>Contributions from others in the HomeAssistant forum thread, you can find it here.</li> <li>The technical part is realised mostly by taking advantage of the great work RomRaider did with his button-card.</li> <li>Code refactor, cleanup and maintenance by schumijo and paddy0174 &amp; CM000n.</li> <li>dwainscheeren for his inspiration to deliver themes via HACS.</li> <li>Wiki by paddy0174.</li> <li>Special thanks to clemalex and schumijofor contributing their cards to the main repository.</li> <li>stokkie90 for implementing most of the HACS functionalities.</li> <li>And of course all the others who cannot be named here due to space limitations. \ud83d\ude09 Thank you for your contribution \u2764\ufe0f</li> </ul>"},{"location":"development/card_style_guide/","title":"Card Style Guide","text":""},{"location":"development/card_style_guide/#card-style-guide","title":"Card Style Guide","text":""},{"location":"development/card_style_guide/#this-theme-introduced","title":"This \"theme\" introduced","text":"<p>This \"theme\" provides you with four different elements, that combined give you a nice and functional layout. The basis for all these elements is <code>button-card</code> that allows for a great and individual styling. These elements, \"cards\", \"chips\", \"title\" and \"vertical buttons\", are fully customizable and can be enhanced to fit your needs. All this is only possible, because we are able to use the templating function from <code>button-card</code>.</p>"},{"location":"development/card_style_guide/#chips","title":"Chips","text":"<p>At the top of each page you can find the <code>chips</code>, which allow to quickly visualize important information.</p> <p></p>"},{"location":"development/card_style_guide/#title","title":"Title","text":"<p><code>Titles</code> are used to separate the different sections. Kind of a divider.</p> <p></p>"},{"location":"development/card_style_guide/#vertical-buttons","title":"Vertical buttons","text":"<p><code>Vertical buttons</code> show the information vertically aligned. These find their use eg. as navigation or scene buttons.</p> <p></p>"},{"location":"development/card_style_guide/#cards","title":"Cards","text":"<p><code>Cards</code> are the main part of this design and are widely used in very different designs and functions. With these <code>cards</code> you can set up nearly every entity in HA, showing from \"state-only\" over a \"full blown\" information graphic with various values to \"controlling\" your covers and climate entities.</p> <p></p>"},{"location":"development/card_style_guide/#anatomy-of-cards","title":"Anatomy of cards","text":"<ol> <li>Dot: Visible when the device is unavailable. Also used on the entity person</li> <li>Icon: Icon that represents the device</li> <li>Primary line: Main information</li> <li>Secondary line: Secondary information</li> <li>Optional part: Possibility to display buttons to launch actions related to the device. Or display a graph to view the history of a sensor or you let your fantasy take the ride...</li> </ol> <p>In the list above #5 enhances the normal <code>cards</code> with a \"second line\", that is used to display other information like a graph or the controls for your covers. For this readme the <code>cards</code> are divided into three groups:</p> <ul> <li>1-line cards: These are cards for <code>sensor</code> or <code>binary_sensors</code> like light or power outlets.</li> <li>2-line cards: These are cards with a second line for information or controls, eg. your <code>cover controls</code>.</li> <li>Custom cards: These are special cards, that you can install, only if needed. These cards are mostly developed and contributed to the repository. Eg. an <code>aircondition-card</code> that shows the state of your aircondition and buttons to control it.</li> </ul>"},{"location":"development/card_style_guide/#color-scheme","title":"Color Scheme","text":"Type Color Hex RGB \ud83d\udca1 Light  \u26a1 Electricity #FF9101 rgb(255,145,1) \ud83d\udd25 Heating #F54436 rgb(245,6,54) \u2611\ufe0f on/off  \ud83c\udfe0 Home #3D5AFE rgb(61,90,254) \ud83c\udf33 Exterior #01C852 rgb(1,200,82)"},{"location":"development/card_style_guide/#icons","title":"Icons","text":"<p>For the <code>chips</code>, this \u201ctheme\u201d uses the standard unicode emojis. The main reason is, they are multi-color whereas the <code>mdi-icons</code> that HomeAssistant uses are one color only.</p> <p>These emojis are only used on the <code>chips</code>, all other cards or buttons use the standard <code>mdi-icons</code>!</p> <p>Overview over standard unicode emojis:</p> <ul> <li>https://emojipedia.org or</li> <li>https://github.com/ikatyang/emoji-cheat-sheet</li> </ul> <p>Overview Home Assistant mdi-icons:</p> <ul> <li>https://materialdesignicons.com/</li> </ul> <p>Using emojis is easy:</p> <ul> <li>Go to one of the Github pages above</li> <li>Select the emoji you want and copy it (\u201cCTRL + C\u201d or right-click \u201ccopy\u201d / at emojipedia.org you already find a \u201ccopy\u201d button)</li> <li>Go to your view and paste the icon</li> </ul> <p>Note: There are a lot of emojis on these pages, so we suggest you use the built-in search at emojipedia or the browser integrated search by pressing \u201cCTRL + F\u201d and type in your query like \u201cheart\u201d.</p>"},{"location":"development/card_style_guide/#language-specific-buttons","title":"Language specific buttons","text":"<p>Sometimes the language specific strings from Home Assistant aren't available for your button, so we added the possibility to use language specific strings over the template system.</p>"},{"location":"development/card_style_guide/#custom-cards","title":"Custom cards","text":"<p>This \"theme\" is designed with an open structure in mind, that's why it is possible to add <code>custom-cards</code> without much hassle. A few <code>custom-cards</code> are readily available through the folder <code>custom-cards</code> in the repository. <code>Custom-cards</code> are <code>cards</code>, that don't fit everywhere and therefore are not part of the standard installation, but can be easily added, if needed. Take an air-condition card. Not everybody has an air-condition. So why include this <code>card</code> as a default? And that's why we did a structure and system for <code>custom-cards</code>. Easily added, but only when needed! And the best thing is: everybody can develop a cool <code>card</code> and can (not have to) share it afterwards with the community (hint, hint, the support thread is here).</p> <p>See a complete list of already included <code>custom-cards</code> in our wiki.</p> <p>Find information on how to develop a <code>custom-card</code> here.</p>"},{"location":"development/card_style_guide/#extend-with-your-own-code","title":"Extend with your own code","text":"<p>As we tried to be as modular as possible (and useful), it is easy to enhance or extend the code, we provide with your own definitions. That means for you, you can inherit every template to enhance it only with functions, you really want. No need to copy full blocks of code - just inherit and enhance only where changes are needed.</p> <p>We provided some instructions in our wiki, see this page.</p>"},{"location":"development/custom_cards/","title":"Custom-Cards","text":""},{"location":"development/custom_cards/#develop-a-custom-card","title":"Develop a custom-card","text":"<p>If you have configured something great for this theme, like a new card, you might want to share it with the community. To ease this process, here are some instructions on how to do that.</p>"},{"location":"development/custom_cards/#building-your-custom-card","title":"Building your custom-card","text":"<ul> <li>Create a new folder following the naming convention of this theme, preferably by using the username and describing your card, eg. custom_card_paddy_temperature.</li> <li>Create a new file <code>README.md</code> where you describe your card, note of specific requirements (like <code>custom_components</code> from HA or other <code>custom-cards</code>) and your name as the author.</li> <li>Create a new file in this folder, naming it the same like your folder, eg. <code>custom_card_paddy_temperature.yaml</code>.</li> <li>IMPORTANT!   Name the folder and file to your liking (preferably describing your chip/card), but you must add the prefix custom_ to both, the folder and the file name. Otherwise the file will not be correctly included!   Example: <code>custom_card_paddy_temperature/custom_card_paddy_temperature.yaml</code></li> <li>IMPORTANT! All files need to follow our community style-guidelines. Please read these guidelines carefully before adding a pull request.</li> <li>You can use and inherit all template definitions, that are available through the main button_card_templates.yaml of this theme. See the here for all definitions, including internal templates.</li> <li>If you need to use language specific strings, please see here.</li> <li>Please don\u2019t inherit from other custom-cards, as the user might not have installed that card! If you really need to inherit from other custom-cards, you should clearly state this in your readme file!</li> </ul>"},{"location":"development/custom_cards/#style-and-qualtiy-guidelines","title":"Style and Qualtiy guidelines","text":"<ul> <li> <p>Your card needs to satisfy some guidelines to assure your card is easy to read and looks like all the other cards in the repository.</p> </li> <li> <p>Each file needs to start only with <code>---</code> on the first line.</p> </li> <li>Each file needs to end with a empty code line.</li> <li>All strings need to be <code>\"double-quoted\"</code>.</li> <li>Only use <code>lowercase</code> in your code.</li> <li>No trailing white-space (No random space between and around the code).</li> <li>A line-length of 256.</li> <li> <p>IMPORTANT! Unix-style line endings. (It's recommended to use a code-editor like VSCode and set CRLF to LF)      </p> </li> <li> <p>More advanced users can make use of Pre-commit to apply most of the styles automatically.</p> </li> <li>Open your fork in a code-editor like VSCode.</li> <li>Install Pre-commit (Linux or Mac-system recommended).</li> <li>All the needed hooks are available within the repository.</li> <li>After your changes run <code>pre-commit run --all-files</code> in the terminal of your editor.</li> <li>You could test your card in a dev-environment with the use of Docker-desktop.</li> <li>Make sure you read https://github.com/UI-Lovelace-Minimalist/UI/blob/dev/.devcontainer/README.md</li> </ul>"},{"location":"development/custom_cards/#add-your-custom-card","title":"Add your custom-card","text":"<ul> <li>You can make a pull request on Github to add your custom-card.</li> <li>To make a pull request you need to fork the repository first.   </li> <li>Add your custom-card folder to your fork. This needs to be in the already existing folder: <code>custom_cards</code>.   </li> <li>All pull requests for <code>custom_cards</code> need to be directed to the <code>main</code> branch: <code>UI-Lovelace-Minimalist:main</code>. Additional documentation</li> </ul>"},{"location":"development/custom_cards/#naming-conventions","title":"Naming conventions","text":"<p>To make it easier for the user, we would prefer, if you would use the following naming conventions to name your folders and files.</p> <ul> <li>Prefix (custom_)</li> <li>Type (like chip or card)</li> <li>Developer name (like paddy0174)</li> <li>Name describing your chip/card (temperature)</li> </ul> <p>This should look like this: <code>custom_card_paddy0174_temperature/custom_card_paddy0174_temperature.yaml</code></p> <p>In the end, your custom-card folder should have at least these structure:</p> <pre><code>custom_card_paddy_temperature\n\u2514\u2500\u2500 custom_card_paddy_temperature.yaml\n\u2514\u2500\u2500 README.md\n\u2514\u2500\u2500 languages\n   \u2514\u2500\u2500 DE.yaml (optional)\n   \u2514\u2500\u2500 EN.yaml (if language variables are used, at least EN needs to be provided)\n</code></pre> <p>Note: This is optional and you can use whatever naming you want, but keep in mind, the use of custom_ as a prefix is required!</p>"},{"location":"development/custom_cards/#order","title":"Order","text":"<p>To make reading the definitions easier, we use the following structure in our definitions in button_card_templates.yaml:</p> <pre><code>name:\n  template:\n  variables:\n  tap_action/hold action/...:\n  triggers_update:\n  show_icon:\n  show_label:\n  show_name:\n  show_state:\n  icon:\n  label:\n  name:\n  state:\n  entity:\n  styles:\n    icon:\n    label:\n    name:\n    state:\n    img_cell:\n    grid:\n    card:\n  custom_fields:\n    item1:\n      card:\n        type:\n        template:\n</code></pre> <p>Feel free to delete definitions, that you don\u2019t use or need.</p> <p>Note: Here as well, this is optional! It is just easier to use a structure, that can be easily compared to other definitions. But please do to your own liking and needs!</p>"},{"location":"development/custom_cards/#language-specific-strings","title":"Language specific strings","text":"<p>This \u201ctheme\u201d supports language specific strings, as the translated strings (states) from HA are sometimes not available.</p> <p>Most variables are already provided by Home Assistant:</p> <ul> <li>On</li> <li>Off</li> <li>Open</li> <li>Closed</li> <li>Unavailable</li> <li>Standby</li> <li>Idle</li> <li>and more</li> </ul> <p>The usage is easy: Include the language variables by including the template ulm_translation_engine in your card and then use them just like every other variable. As long as you want to translate an entity state to a human readable state, you should be good with just using variables.ulm_translation_state. If you use variables to supply an entity this variable won't work (yet).</p> <pre><code>template:\n  - ulm_translation_engine\n  # optional, only if general language variables not provided by Home Assistant are used\n  - ulm_language_variables\n  # optional, only if language variables are used\n  - custom_card_paddy0174_temperature_language_variables\nstate:\n  [[[\n    # if you use your own language variables, use them like this\n    if (state == 'cool') {\n      return variables.custom_card_paddy0174_temperature_cool;\n    } else {\n      return variables.ulm_translation_state;\n    }\n  ]]]\n# Alternative short version, works in 90 percent of use cases, useful if you have lots of states or other variables which act for one entity\n  [[[\n  let state = entity.state;\n  # Check if custom language variable for the entity state exists, otherwise check default language_variables, otherwise just output the entity state\n  return variables[\"ulm_custom_card_paddy0174_temperature_\" + state] ? variables[\"ulm_custom_card_paddy0174_temperature_\" + state] : variables[\"ulm_\" + state] ? variables[\"ulm_\" + state] : state;\n  ]]]\n</code></pre> <p>Your language file should use this format:</p> <pre><code># EN.yaml for custom_card_paddy0174_temperature\ncustom_card_paddy0174_temperature_language_variables:\n  variables:\n    ulm_custom_card_paddy0174_temperature_cool: \"Cool\"\n</code></pre> <p>Provide at least a file <code>EN.yaml</code> in your <code>custom-cards</code> language folder. If you want to support more languages, name them accordingly and use the same structure as in the <code>EN.yaml</code> file. In the end you will have different files in your languages folder, like <code>EN.yaml</code>, <code>FR.yaml</code> and <code>DE.yaml</code>. Please advise the user in your readme to delete all but one of these language files, otherwise the loading order gets messed up and the wrong strings get loaded.</p>"},{"location":"development/docs_style_guide/","title":"Docs Style Guide","text":""},{"location":"development/docs_style_guide/#documentation-style-guide","title":"Documentation Style Guide","text":"<p>This document defines the standards for UI Lovelace Minimalist Documentation.</p> <ul> <li>Rather than repeating information from another topic, link to the single source of truth and explain why it is important.</li> </ul> <p>Include all media types</p> <p>Include any media types/sources if the content is relevant to readers. You can freely include or link presentations, diagrams, and videos. No matter who it was originally composed for, if it is helpful to any of our audiences, we can include it.</p> <ul> <li>If you use an image that has a separate source file (for example, a vector or diagram format), link the image to the source file so that it may be reused or updated by anyone.</li> </ul>"},{"location":"development/docs_style_guide/#structure","title":"Structure","text":"Directory Contents <code>docs/index.md</code> Home Page. <code>docs/assets</code> Can contain images/javascript/stylesheets. <code>docs/setup</code> Guides on how to setup the  UI Lovelace Minimalist. <code>docs/usage</code> Guides on how to use UI Lovelace Minimalist."},{"location":"development/docs_style_guide/#work-with-directories-and-files","title":"Work with directories and files","text":"<p>When working with directories and files:</p> <ol> <li>When you create a new directory, always start with an <code>index.md</code> file. Don't use another filename and do not create <code>README.md</code> files.</li> <li>Do not use special characters and spaces, or capital letters in file names, directory names, branch names, and anything that generates a path.</li> <li>When creating or renaming a file or directory and it has more than one word in its name, use underscores (_) instead of spaces or dashes. For example, proper naming would be import_project/import_from_github.md. This applies to both image files and Markdown files.</li> <li>For image files, do not exceed 100KB.</li> <li>Do not include the same information in multiple places.</li> </ol> <p>If you\u2019re unsure where to place a document or a content addition, this shouldn\u2019t stop you from authoring and contributing. Use your best judgment, and then ask the reviewer of your MR to confirm your decision.</p>"},{"location":"development/docs_style_guide/#card-page","title":"Card page","text":"<p>Create a Card Page by checking the <code>._example.md</code> in the cards directory. This can be used as a structure to build upon.</p>"},{"location":"development/docs_style_guide/#images","title":"Images","text":"<p>Images, including screenshots, can help a reader better understand a concept. However, they should be used sparingly because:</p> <ul> <li>They tend to become out-of-date.</li> <li>They are difficult and expensive to localize.</li> <li>They cannot be read by screen readers.</li> </ul>"},{"location":"development/docs_style_guide/#save-the-image","title":"Save the image","text":"<ul> <li>Place all images in the central asset directory named <code>assets/img/</code> inside the docs root folder.</li> <li>Consider using PNG images instead of JPEG.</li> <li>Compress GIFs with https://ezgif.com/optimize or similar tool.</li> <li>Images should be used (only when necessary) to illustrate the description of a process, not to replace it.</li> </ul>"},{"location":"development/docs_style_guide/#add-the-image-link-to-content","title":"Add the image link to content","text":"<p>The Markdown code for including an image in a document is <code>![Image description which will be the alt tag](../../assets/img/ulm_cards/example.png)</code></p>"},{"location":"development/docs_style_guide/#admonitions-call-outs","title":"Admonitions / Call-outs","text":"<p>Admonitions, also known as call-outs, are an excellent choice for including side content without significantly interrupting the document flow. More information of this can be found on Upstream documentation of MkDocs: Admonitions</p>"},{"location":"development/docs_style_guide/#code-blocks","title":"Code Blocks","text":"<p>Code blocks and examples are an essential part of technical project documentation. ULM Docs provides different ways to set up syntax highlighting for code blocks. For a more advanced usage of Code Blocks like adding Annations, Line Numbers, Highlighting, Embedding external files see the Code Blocks page on mkdocs-material.</p>"},{"location":"development/docs_style_guide/#developing","title":"Developing","text":"<p>Run local:</p> <pre><code>pip install -r requirements.txt\n\nmkdocs serve\n\n# or\nmkdocs serve --dirtyreload\n</code></pre>"},{"location":"development/docs_style_guide/#markdown-linting","title":"Markdown linting","text":"<p>Can be done automatically by running pre-commit</p> <pre><code>pre-commit run markdownlint\n</code></pre>"},{"location":"setup/adaptive_dash/","title":"Adaptive Dashboard","text":""},{"location":"setup/adaptive_dash/#add-adaptive-dashboard","title":"Add Adaptive Dashboard","text":"<p>To get full use of your Minimalist themed HA you need to setup some more custom_components (see requirements below).  This dashboard automatically changes based on the device/screen size your are using. You can also alter the cards showing on the right-side by double-tapping a card. (Steps to configure this are described below)</p>"},{"location":"setup/adaptive_dash/#additional-requirements","title":"Additional Requirements","text":"<p>This dashboard make extensive use of <code>state-switch</code> and <code>layout-card</code>. These are available through HACS or as manual install from Github.</p> <p>Warning</p> <p>For now the <code>state-switch</code> works only with version <code>v1.9.3</code> or below!</p> Additional lovelace resources <code>layout-card</code> <code>state-switch</code> <p>You need also configure an <code>input_select</code> with options for each popup_card and view you have configured. This <code>input_select</code> controls the cards showing on the right-side of the screen when in fullscreen mode.</p> <p>Popups</p> <p>Note: Not all device types do have Minimalist UI themed popups. Currently supported devices are: <code>lights</code>, <code>mediaplayers</code>, <code>thermostats</code>, <code>sensors</code>.</p> <p>You can setup an <code>input_select</code> either via the GUI or in YAML. See HA docs</p> <pre><code># Example configuration.yaml entry\ninput_select:\n  minimalist_ui_switch:\n    name: Select popup/view\n    options:\n      - light 1\n      - light 2\n      - mediaplayer 1\n      - mediaplayer 2\n      - climate 1\n      - climate 2\n      - power 1\n      - power 2\n      - livingroom\n</code></pre>"},{"location":"setup/adaptive_dash/#setup","title":"Setup","text":"<p>To enable the adaptive dashboard you need to select the right option in the integration configuration menu. You can also set a name and icon for the new dashboard.</p> <p></p> <p>Once setup you should see another dashboard in your sidebar. This dashboard is filled with <code>card_title</code> template cards as placeholders on the pre-configured grid.</p> <p>We have also added a folder with all the needed files to customizing your new dashboard:</p> <pre><code>config\n\u2514\u2500\u2500 ui_lovelace_minimalist\n\u251c\u2500\u2500 custom_cards\n\u2514\u2500\u2500 dashboard\n\u2514\u2500\u2500 ui-lovelace.yaml\n\u2514\u2500\u2500 adaptive-dash\n\u2514\u2500\u2500 adaptive-ui.yaml\n\u2514\u2500\u2500 popup\n\u2514\u2500\u2500 popup.yaml\n\u2514\u2500\u2500 views\n\u2514\u2500\u2500 livingroom.yaml\n\u2514\u2500\u2500 main.yaml\n</code></pre>"},{"location":"setup/adaptive_dash/#customizing","title":"Customizing","text":"<p>The best place to start adding your personal cards is in <code>adaptive-dash/views/main.yaml</code>.</p> <p>Grid-Layout</p> <p>All files use CSS grids. By giving each card an own grid-area we can control there place in the dashboard. For more information on how <code>grid-areas</code> do work check this amazing guide.</p> <p>When you are familiar with CSS grids you can start to alter the <code>grid-template-areas</code> to your personal preference.</p>"},{"location":"setup/adaptive_dash/#adding-cards","title":"Adding Cards","text":"<p>You can assign cards to a certain <code>grid-area</code> by adding this to your card configuration. We already have put in this config for some cards and titles.</p> <pre><code>view_layout:\n  grid-area: \"card1\"\n</code></pre> <p>To put card_light to the area: <code>card1</code>; you have to paste in the code as in your normal Minimalist UI dashboard on the place of the placeholder.</p> <pre><code># Placeholder for card1 in main.yaml\n- view_layout:\n    grid-area: \"card1\"\n  type: \"custom:button-card\"\n  template: \"card_title\"\n  name: \"Put here your &lt;br&gt; first card\"\n  label: \"grid-area: card1\"\n</code></pre> <pre><code># Example of a card_light assigned to area card1\n- view_layout:\n    grid-area: \"card1\"\n  type: \"custom:button-card\"\n  template: \"card_light\"\n  entity: \"light.your_light\"\n  variables:\n    ulm_card_light_enable_color: true\n    ulm_card_light_enable_slider: true\n    ulm_card_light_enable_popup: true\n</code></pre> <p>Do this for all placeholders. You can always use less cards by deleting placeholders or add more cards by adding new areas under the <code>grid-template-areas</code>.</p> <p>For adapting the action use <code>adaptive</code> within the corresponding custom actions' variables. Take a look in the custom actions section within this docs.</p>"},{"location":"setup/adaptive_dash/#adding-popups-on-the-right-side","title":"Adding popups on the right-side","text":"<p>All cards on the right-side are configured in <code>adaptive-dash/popup/popup.yaml</code>.</p> <p>First you need to add the <code>input_select</code> you have created to the file.</p> <p>Important</p> <pre><code>type: custom:state-switch\nview_layout:\n  grid-area: popup\n  show:\n    mediaquery: \"(min-width: 1100px)\"\nentity: input_select.minimalist_ui # put your input_select here\n</code></pre> <p>We preconfigured multiple popups for different types of devices. In <code>popup.yaml</code> you only have to complete the information in the variables part. The <code>light 1</code>, <code>mediaplayer 1</code>, <code>livingroom</code> parts in the code refer to the options you have configured in your <code>input_select</code>. Make sure they are spelled the same. (see documentation on <code>state-switch</code>)</p> <p>Warning</p> <p>Only uncomment the options you have configured! Else it could result in multiple errors in the dev-console of your browser.</p> <p>Follow this part to add a card to an option of your <code>input_select</code>: To add a light popup to your first light card you just have to add the corresponding entity:</p> <pre><code>type: custom:state-switch\nview_layout:\n  grid-area: popup\n  show:\n    mediaquery: \"(min-width: 1100px)\"\nentity: input_select.minimalist_ui # put your input_select here\ndefault: default\ntransition: slide-down\ntransition_time: 500\nstates:\n  ## Lights\n  light 1:\n    type: \"custom:button-card\"\n    template: \"popup_light_brightness\"\n    entity: \"&lt;your_entity&gt;\"\n</code></pre> <p>You can also add any other card by copying its yaml code in without the hyphen <code>(-)</code></p> <pre><code>states:\n  ## Lights\n  light 1:\n    type: \"custom:button-card\"\n    template: \"popup_light_brightness\"\n    entity: \"&lt;your_entity&gt;\"\n  card 1:\n    type: \"custom:button-card\"\n    template: \"&lt;your_template&gt;\"\n</code></pre> <p>Important!</p> <p>All options(devices) do need its own config in <code>popup.yaml</code>!</p> <p>To switch between popups we need to go back to <code>adaptive-dash/views/main.yaml</code>. Here we have to add two variables to the cards we want to show a popup off. After adding these variables the cards need to be double_tapped to change popups.</p> <pre><code>variables:\n  ulm_input_select_option: light 1\n  ulm_input_select: input_select.minimalist_ui_switch\n</code></pre> <p>Eventually the <code>card_light</code> we did configure should be like this:</p> <pre><code>- view_layout:\n    grid-area: \"card1\"\n  type: \"custom:button-card\"\n  template: \"card_light\"\n  entity: \"light.your_light\"\n  variables:\n    ulm_card_light_enable_color: true\n    ulm_card_light_enable_slider: true\n    ulm_card_light_enable_popup: true\n    ulm_input_select_option: light 1\n    ulm_input_select: input_select.minimalist_ui_switch\n</code></pre> <p>From here you can duplicate the steps for each card.</p> <p>Supported</p> <p>All cards working with official popups and the card_room support these variables. The name is uniform between all supported cards.</p>"},{"location":"setup/adaptive_dash/#setup-more-views","title":"Setup more views","text":"<p>We already made a file for a second view: <code>adaptive-dash/views/livingroom.yaml</code>. You can make as many views as you want by duplicating and alter the views files.</p> <p>To make the new view visible you have to add some entry to <code>adaptive-dash/adaptive-ui.yaml</code>. You only have to change the name of the room/view to the new entry.</p> Add an extra view example (click to open) <pre><code>title: \"UI Lovelace Minimalist\"\ntheme: \"minimalist-desktop\"\nbackground: \"var(--background-image)\"\nviews:\n  - type: \"custom:grid-layout\"\n    title: \"home\"\n    icon: \"mdi:home\"\n    path: \"0\"\n    layout:\n    grid-template-columns: \"1fr 1fr\"\n    grid-template-rows: \"min-content\"\n    grid-template-areas: |\n        \"main popup\"\n    mediaquery:\n        \"(max-width: 1100px), (orientation: portrait)\":\n        grid-template-columns: \"100%\"\n        grid-template-areas: \"main\"\n    cards:\n    - !include \"views/main.yaml\"\n    - !include \"popup/popup.yaml\"\n\n  - type: \"custom:grid-layout\"\n    title: \"Livingroom\"\n    icon: \"mdi:sofa\"\n    path: \"Livingroom\"\n    layout:\n    grid-template-columns: \"1fr 1fr\"\n    grid-template-rows: \"min-content\"\n    grid-template-areas: |\n        \"livingroom popup\"\n    mediaquery:\n        \"(max-width: 1100px), (orientation: portrait)\":\n        grid-template-columns: \"100%\"\n        grid-template-areas: \"livingroom\"\n    cards:\n    - !include \"views/livingroom.yaml\"\n    - !include \"popup/popup.yaml\"\n\n  - type: \"custom:grid-layout\"\n    title: \"New View\"\n    icon: \"mdi:flower\"\n    path: \"New View\"\n    layout:\n    grid-template-columns: \"1fr 1fr\"\n    grid-template-rows: \"min-content\"\n    grid-template-areas: |\n        \"new_view popup\"\n    mediaquery:\n        \"(max-width: 1100px), (orientation: portrait)\":\n        grid-template-columns: \"100%\"\n        grid-template-areas: \"newview\"\n    cards:\n    - !include \"views/newview.yaml\"\n    - !include \"popup/popup.yaml\"\n</code></pre> <p>You can also show room views as a popup. To configure this add a <code>!include</code> entry in the popup.yaml file. As example we configured <code>livingroom</code> already. Make sure this is also an option in your <code>input_select</code>.</p> <pre><code># Add livingroom popup to popup.yaml\nlivingroom: !include \"../views/livingroom.yaml\"\n</code></pre> <p>Also add the two variables to the corresponding card_room:</p> <pre><code>variables:\n  ulm_input_select_option: livingroom\n  ulm_input_select: input_select.minimalist_ui_switch\n</code></pre>"},{"location":"setup/configuration/","title":"Configuration","text":""},{"location":"setup/configuration/#add-theme-to-your-lovelace","title":"Add theme to your Lovelace","text":"<p>To get this theme with all the button templates working make sure at least the generated Lovelace Dashboard is working.</p>"},{"location":"setup/configuration/#yaml-mode","title":"YAML Mode","text":"<p>As described in the installation step, we have already created a small sample dashboard for you, whose file is called <code>ui-lovelace.yaml</code> in the following directory when setting up the integration:</p> <pre><code>config\n\u2514\u2500\u2500 ui_lovelace_minimalist\n    \u251c\u2500\u2500 custom_cards\n    \u2514\u2500\u2500 dashboard\n        \u2514\u2500\u2500 ui-lovelace.yaml\n</code></pre> <p>This example dashboard file already contains the necessary directory bindings with our templates from the custom_component and you can directly start customizing the dashboard according to your own wishes.</p> <p>However, if you want to use your own, possibly already existing, dashboard file, you must make the necessary bindings of the templates in it yourself. This can be done for example by specifying the following:</p> <pre><code># Button cards location\nbutton_card_templates: !include_dir_merge_named \"custom_components/ui_lovelace_minimalist/__ui_minimalist__/ulm_templates/\"\n</code></pre> <p>Please note! This step is only necessary if you are not using the sample dashboard file created for you. The path specifications are relative. Depending on where you have stored your own Dashboard .yaml file, your path specification can differ from the example and must be adapted by you. In the example it was assumed that the .yaml file is located in the top level of the Home Assistant configuration.</p>"},{"location":"setup/configuration/#ui-mode","title":"UI Mode","text":"<p>Currently not supported</p> <p>The Problem: Home Assistant doesn\u2019t let you include complete folders or even files in UI-mode. That means for you, you can\u2019t work with the folder and file structure, we have provided in our download. You can manually go through the template files and copy the content that you need to paste in your raw-config-editor. However, this is very time-consuming and error-prone, which is why we have decided not to support this method at present.</p>"},{"location":"setup/configuration/#custom-cards","title":"Custom Cards","text":"<p>This integration also allows you to add your own Custom Button Cards. These cards are not part of the HACS installation and must be downloaded separately from the repo as needed. You can find an overview of the cards here in our wiki. The cards themselves for the download are on our repo here.</p> <p>To find some more detailed instructions to include the custom-cards to your dashboard take a look on this page.</p>"},{"location":"setup/custom_actions/","title":"Custom actions","text":""},{"location":"setup/custom_actions/#customize-tap-double-tap-and-hold-actions","title":"Customize tap, double-tap and hold actions","text":"<p>This 'theme' do offer support for customizing actions. Tap, double-tap and hold on different parts (card, icon and name) of the cards could be changed. To achieve this customization follow the instructions on this page.</p> <p></p> <p>To change the normal behaviour of tap_action, double_tap_action and hold_action, edit <code>custom_actions.yaml</code> file located under <code>/config/ui_lovelace_minimalist/custom_actions/</code>.</p> <pre><code>---\nulm_custom_actions:\n  variables:\n    ulm_card_tap_action: \"toggle\"\n    ulm_card_hold_action: \"popup\"\n    ulm_card_double_tap_action: \"more-info\"\n    ulm_icon_tap_action: \"popup\"\n    ulm_icon_hold_action: \"none\"\n    ulm_icon_double_tap_action: \"none\"\n    ulm_name_tap_action: \"more-info\"\n    ulm_name_hold_action: \"toggle\"\n    ulm_name_double_tap_action: \"popup\"\n</code></pre> <p>Possible values for each variables are :</p> Value Description none No action toggle Toggle an entity if available (for binary_sensor and sensor entity, <code>none</code> action is used) more-info Display more-info window popup Display UI LOVELACE MINIMALIST popup if available and enabled on card (if not <code>more-info</code> action is used) adaptive Switch UI LOVELACE MINIMALIST popup on adaptive dashboard if current dashboard is adaptive (if not <code>popup</code> action is used) navigate Navigate to an other UI LOVELACE MINIMALIST view. Need additional variable (see below)"},{"location":"setup/custom_actions/#haptic-feedback","title":"Haptic feedback","text":"<p>Next to the action also the haptic feedback of the actions can be configured in the <code>custom_actions.yaml</code> file:</p> <p>For each action a haptic feedback could be configured:</p> <pre><code>---\nulm_custom_actions:\n  variables:\n    ulm_card_tap_haptic: \"medium\"\n    ulm_card_hold_haptic: \"none\"\n    ulm_card_double_tap_haptic: \"none\"\n    ulm_icon_tap_haptic: \"none\"\n    ulm_icon_hold_haptic: \"none\"\n    ulm_icon_double_tap_haptic: \"none\"\n    ulm_name_tap_haptic: \"medium\"\n    ulm_name_hold_haptic: \"none\"\n    ulm_name_double_tap_haptic: \"none\"\n</code></pre> <p>Possible values for each variables (according to the underlying button card) are :</p> <ul> <li><code>none</code></li> <li><code>success</code></li> <li><code>warning</code></li> <li><code>failure</code></li> <li><code>light</code></li> <li><code>medium</code></li> <li><code>heavy</code></li> <li><code>selection</code></li> </ul> <p>Reloading</p> <p>Once you have edited <code>custom_actions.yaml</code> file, you must reload <code>\"UI LOVELACE MINIMALIST\"</code> configuration. Just go to <code>\"Configuration\" --&gt; \"Settings\"</code> in Home Assistant and press the <code>\"UI_LOVELACE_MINIMALIST\"</code> button within the \"YAML configuration reloading\" section.</p>"},{"location":"setup/custom_actions/#navigate-action","title":"Navigate action","text":"<p>To define the path of <code>navigate</code> action, add one of the following depending on your action :</p> <ul> <li>ulm_card_tap_navigate_path</li> <li>ulm_card_hold_navigate_path</li> <li>ulm_card_double_tap_navigate_path</li> <li>ulm_icon_tap_navigate_path</li> <li>ulm_icon_hold_navigate_path</li> <li>ulm_icon_double_tap_navigate_path</li> <li>ulm_name_tap_navigate_path</li> <li>ulm_name_hold_navigate_path</li> <li>ulm_name_double_tap_navigate_path</li> </ul> <pre><code>- type: \"custom:button-card\"\n  template: \"card_cover\"\n  entity: \"cover.somfy_portail\"\n  variables:\n    ulm_name_hold_action: \"navigate\"\n    ulm_name_hold_navigate_path: \"/adaptive-dash/Livingroom\"\n</code></pre>"},{"location":"setup/custom_actions/#call-service-action","title":"Call service action","text":"<p>It is possible to call a service using the custom actions on the icon, name and card.</p> <p>To define the service and its data of <code>call-service</code> action, add one of the following variables depending on your action :</p> <ul> <li>ulm_card_tap_service / ulm_card_tap_service_data</li> <li>ulm_card_hold_service / ulm_card_hold_service_data</li> <li>ulm_card_double_tap_service / ulm_card_double_tap_service_data</li> <li>ulm_icon_tap_service / ulm_icon_tap_service_data</li> <li>ulm_icon_hold_service / ulm_icon_hold_service_data</li> <li>ulm_icon_double_tap_service / ulm_icon_double_tap_service_data</li> <li>ulm_name_tap_service / ulm_name_tap_service_data</li> <li>ulm_name_hold_service / ulm_name_hold_service_data</li> <li>ulm_name_double_tap_service / ulm_name_double_tap_service_data</li> </ul> <p>The following configuration shows the configuration of a service call using the tap action.</p> <pre><code>- type: \"custom:button-card\"\n  template: \"card_cover\"\n  entity: \"cover.somfy_portail\"\n  variables:\n    ulm_name_tap_action: \"call-service\"\n    ulm_name_tap_service: \"light.toggle\"\n    ulm_name_tap_service_data:\n      entity_id: light.light_livingroom_2\n</code></pre>"},{"location":"setup/custom_actions/#overwrite-custom-actions","title":"Overwrite custom actions","text":"<p>When creating a dashboard, custom actions and the haptic feedback can be overwritten on your card definition. For example, this code will overwrite the tap action on card with <code>more-info</code> action :</p> <pre><code>- type: \"custom:button-card\"\n  template: \"card_cover\"\n  entity: \"cover.somfy_portail\"\n  variables:\n    ulm_card_tap_action: \"more-info\"\n    ulm_card_tap_haptic: \"success\"\n</code></pre>"},{"location":"setup/custom_actions/#custom-popups","title":"Custom Popups","text":"<p>The implementation of the custom action now supports the configuration of individual popups. The custom popup can be easily configured for each card.</p> <p>To enable a custom popup the variable <code>ulm_custom_popup</code> must be set within the card. This variable have three subvariables <code>template</code>, <code>entity</code> and <code>popup_variables</code>. The template must be the name of the template that should be loaded. The necessary configuration variables for the popup can be configured in the variable <code>popup_variables</code>.</p> <p>Usually the popup uses the same entity as the card that calls the popup. It is also possible to overwrite the entity for the popup. Therefore the entity can be set using the <code>entity</code> variable within the <code>ulm_custom_popup</code>. This <code>entity</code> variable is optional. It is also possible to disable the entity of the custom popup it the <code>entity</code> variable within the <code>ulm_custom_popup is set to</code>none`.</p> <pre><code>- type: \"custom:button-card\"\n  template: card_power_outlet\n  entity: switch.power_outlet_livingroom\n  variables:\n    ulm_card_power_outlet_consumption_sensor: sensor.power_outlet_livingroom_consumption\n    ulm_card_power_outlet_name: Power Outlet Livingroom\n    ulm_custom_popup:\n      template: \"popup_power_outlet_stats\"\n      entity: switch.power_outlet_livingroom\n      popup_variables:\n        ulm_popup_power_outlet_sensor1: sensor.power_outlet_livingroom\n        ulm_popup_power_outlet_sensor2: sensor.power_outlet_livingroom_consumption\n        ulm_popup_power_outlet_graph_sensor: sensor.power_outlet_livingroom\n        ulm_popup_power_outlet_entity: switch.power_outlet_livingroom\n</code></pre> <p>The available popup templates <code>popup_media_player_infos</code>, <code>popup_light_brightness</code>, <code>popup_thermostat_temperature</code> or <code>popup_power_outlet_stats</code> can already be used with the custom popups.</p> <p>This implementation allows the easy creation of custom popups that can be loaded by other cards.</p> <p>Light, Media Player, Thermostat</p> <p>The <code>card_light</code>, <code>card_media_player</code> and <code>card_thermostat</code> uses a different approach. Therefore the popup can be simply enabled by setting one of the variables  <code>ulm_card_light_enable_popup</code>, <code>ulm_card_thermostat_enable_popup</code> or  <code>ulm_card_media_player_enable_popup</code> to true.</p>"},{"location":"setup/custom_actions/#for-developers","title":"For developers","text":"<p>To enable action customization on your custom cards, use either the <code>icon_more_info_new</code>, <code>icon_more_info_alert</code> or the <code>extended_card</code> template. There is no need to implement the <code>ulm_card_actions</code> template anymore.</p> <p>There are three possibilities to include the custom actions into your custom cards:</p>"},{"location":"setup/custom_actions/#use-template-extend_card-as-combination-of-two-cards","title":"Use template <code>extend_card</code> as combination of two cards","text":"<p>The simplest way to create a custom card that uses these custom actions is the combination of two cards.</p> <p>For enabling the feature the custom card must implement the template <code>extended_card</code>. Then two custom fields must be used:</p> <ul> <li><code>item1</code> must be a card that already implements the template <code>icon_more_info_new</code>.   Most of the core cards already implements this template.</li> <li><code>item2</code> can be any Lovelace card that should extend the card.</li> </ul> <p>If you add custom styles to <code>item2</code> then following code should be added into the <code>style</code> field</p> <pre><code>ha-card {\n  box-shadow: none;\n  border-radius: var(--border-radius);\n}\n</code></pre> <p>The already available Graph card (<code>card_graph</code>) is an example for this implementation. As <code>item1</code> a <code>generic_card</code> is used. The <code>item2</code> provides a mini-graph-card.</p> Graph card as example card_binary_sensor_alert.yaml<pre><code>---\n### Card Graph ###\ncard_graph:\n  template:\n    - \"extended_card\"\n  variables:\n    ulm_card_graph_color: \"var(--info-color)\"\n    ulm_card_graph_name: \"[[[ return entity.attributes.friendly_name; ]]]\"\n    ulm_card_graph_icon: \"[[[ return entity.attributes.icon ]]]\"\n    ulm_card_graph_color2: \"var(--info-color)\"\n    ulm_card_graph_entity2: \"\"\n    ulm_card_graph_hours: 24\n    ulm_card_graph_type: \"fill\"\n    ulm_card_graph_points: \"0.5\"\n    ulm_card_graph_group_by: \"interval\"\n    ulm_card_graph_line_width: 5\n    ulm_card_graph_icon_color: \"\"\n  triggers_update:\n    - \"[[[ return variables.ulm_card_graph_entity2 ]]]\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        template:\n          - \"card_generic\"\n        variables:\n          ulm_card_generic_icon: \"[[[ return variables.ulm_card_graph_icon; ]]]\"\n          ulm_card_generic_name: \"[[[ return variables.ulm_card_graph_name; ]]]\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              custom_fields:\n                item1:\n                  card:\n                    type: \"custom:button-card\"\n                    styles:\n                      icon:\n                        - color: &gt;\n                            [[[\n                              var color = variables.ulm_card_graph_icon_color;\n                              if (variables.ulm_card_graph_icon_color){\n                                return 'rgba(var(--color-' + color + '),1)';\n                              }\n                              return 'rgba(var(--color-theme),0.2)';\n                            ]]]\n                      img_cell:\n                        - background-color: &gt;\n                            [[[\n                              var color = variables.ulm_card_graph_icon_color;\n                              if (variables.ulm_card_graph_icon_color){\n                                return 'rgba(var(--color-' + color + '),0.2)';\n                              }\n                              return 'rgba(var(--color-theme),0.05)';\n                            ]]]\n    item2:\n      card:\n        type: \"custom:mini-graph-card\"\n        entities: &gt;\n          [[[\n            var ent = [];\n            ent.push(variables.ulm_card_graph_entity);\n            if(variables.ulm_card_graph_entity2 != \"\")\n              ent.push(variables.ulm_card_graph_entity2);\n            return ent;\n          ]]]\n        line_color: &gt;\n          [[[\n            var col = [];\n            col.push(variables.ulm_card_graph_color);\n            if(variables.ulm_card_graph_color2 != \"\")\n              col.push(variables.ulm_card_graph_color2);\n            return col;\n          ]]]\n        show:\n          name: false\n          icon: false\n          legend: false\n          state: false\n          graph: \"[[[ return variables.ulm_card_graph_type=='fill'?'line':variables.ulm_card_graph_type; ]]]\"\n          fill: \"[[[ return variables.ulm_card_graph_type=='fill'?true:false; ]]]\"\n        hours_to_show: \"[[[ return variables.ulm_card_graph_hours; ]]]\"\n        points_per_hour: \"[[[ return variables.ulm_card_graph_points; ]]]\"\n        group_by: \"[[[ return variables.ulm_card_graph_group_by; ]]]\"\n        line_width: \"[[[ return variables.ulm_card_graph_line_width; ]]]\"\n        card_mod:\n          style: |\n            ha-card {\n              box-shadow: none;\n              border-radius: var(--border-radius);\n            }\n</code></pre>"},{"location":"setup/custom_actions/#use-template-icon_more_info_new-or-icon_more_info_alert","title":"Use template <code>icon_more_info_new</code> or <code>icon_more_info_alert</code>","text":"<p>The card must implement the template <code>icon_more_info_new</code>or <code>icon_more_info_alert</code>. Then it must implement a custom field <code>item1</code> which is also a <code>custom:button-card</code>. This card must have the custom fields <code>item1</code>which represents the icon and <code>item2</code>which represents the name.</p> <p>Most of the internal card templates uses this option. Take a look into the code.</p> Generic card as example card_binary_sensor_alert.yaml<pre><code>---\n### Card Generic ###\ncard_generic:\n  template:\n    - \"icon_more_info_new\"\n    - \"ulm_translation_engine\"\n  variables:\n    ulm_card_generic_icon: \"[[[ return entity.attributes.icon ]]]\"\n    ulm_card_generic_name: \"[[[ return entity.attributes.friendly_name ]]]\"\n    ulm_outlet_power_enable_popup: false\n    ulm_card_generic_color: \"blue\"\n    ulm_card_generic_force_background_color: false\n  triggers_update: \"all\"\n  state:\n    - operator: \"template\"\n      value: \"[[[ return variables.ulm_active_state ]]]\"\n      styles:\n        card:\n          - background-color: &gt;\n              [[[\n                if (variables.ulm_card_generic_force_background_color) {\n                  var color = variables.ulm_card_generic_color;\n                  return 'rgba(var(--color-' + color + '),var(--opacity-bg))';\n                }\n              ]]]\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              icon: \"[[[ return variables.ulm_card_generic_icon; ]]]\"\n              variables: &gt;\n                [[[\n                  let vars = variables;\n\n                  if(variables.ulm_outlet_power_enable_popup) {\n                    vars.ulm_custom_popup = {\n                      'template': 'popup_power_outlet_stats',\n                      'popup_variables': {\n                        'ulm_popup_power_outlet_sensor1': variables.ulm_popup_power_outlet_sensor1,\n                        'ulm_popup_power_outlet_sensor2': variables.ulm_popup_power_outlet_sensor2,\n                        'ulm_popup_power_outlet_graph_sensor': variables.ulm_popup_power_outlet_graph_sensor\n                      }\n                    };\n                  }\n                  return vars;\n                ]]]\n              styles:\n                icon:\n                  - color: &gt;\n                      [[[\n                        var color = variables.ulm_card_generic_color;\n                        if (variables.ulm_active_state){\n                          return 'rgba(var(--color-' + color + '),1)';\n                        }\n                        return 'rgba(var(--color-theme),0.2)';\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        var color = variables.ulm_card_generic_color;\n                        if (variables.ulm_active_state){\n                          return 'rgba(var(--color-' + color + '),0.2)';\n                        }\n                        return 'rgba(var(--color-theme),0.05)';\n                      ]]]\n          item2:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              name: \"[[[ return variables.ulm_translation_state ]]]\"\n              label: \"[[[ return variables.ulm_card_generic_name ]]]\"\n              variables: &gt;\n                [[[\n                  let vars = variables;\n\n                  if(variables.ulm_outlet_power_enable_popup) {\n                    vars.ulm_custom_popup = {\n                      'template': 'popup_power_outlet_stats',\n                      'popup_variables': {\n                        'ulm_popup_power_outlet_sensor1': variables.ulm_popup_power_outlet_sensor1,\n                        'ulm_popup_power_outlet_sensor2': variables.ulm_popup_power_outlet_sensor2,\n                        'ulm_popup_power_outlet_graph_sensor': variables.ulm_popup_power_outlet_graph_sensor\n                      }\n                    };\n                  }\n                  return vars;\n                ]]]\n              state:\n                - operator: \"template\"\n                  value: \"[[[ return variables.ulm_active_state ]]]\"\n                  styles:\n                    name:\n                      - color: &gt;\n                          [[[\n                              if (variables.ulm_card_generic_force_background_color) {\n                                  return 'rgb(250,250,250)';\n                              }\n                          ]]]\n                    label:\n                      - color: &gt;\n                          [[[\n                              if (variables.ulm_card_generic_force_background_color) {\n                                  return 'rgb(250,250,250)';\n                              }\n                          ]]]\n</code></pre>"},{"location":"setup/custom_actions/#use-template-ulm_actions_card_overlay","title":"Use template <code>ulm_actions_card_overlay</code>","text":"<p>If you implement a custom card that is based on another Lovelace card like the weather card you can simply enable custom card actions by using the template <code>ulm_actions_card_overlay</code> on the card. This template adds an overlay over the whole card and reaction on the tap, hold, double tap actions. It also enables the integration of custom popups for the card. Actions of the underlying card will be disabled by this method.</p> <p>The weather card gives you an example and will show the usage of this method.</p>"},{"location":"setup/custom_actions/#individual-implementation","title":"Individual implementation","text":"<p>The following script shows the usage off all necessary variables and template that will be used by the custom actions.</p> <p>The card must implement the templates <code>ulm_custom_actions</code> and <code>ulm_action_card</code> in the correct order. The example shows the custom fields <code>item1</code> that implements the redirection of an icon field and <code>item2</code> that implements the redirecton of a name field.</p> <pre><code>---\ncustom_card:\n  template:\n    - \"ulm_custom_actions\"\n    - \"ulm_actions_card\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        entity: \"[[[ return entity.entity_id ]]]\"\n        template:\n          - \"ulm_actions_icon\"\n        variables:\n          ulm_input_select_option: \"[[[ return variables.ulm_input_select_option; ]]]\"\n          ulm_input_select: \"[[[ return variables.ulm_input_select; ]]]\"\n          ulm_icon_tap_action: \"[[[ return variables.ulm_icon_tap_action; ]]]\"\n          ulm_icon_tap_haptic: \"[[[ return variables.ulm_icon_tap_haptic; ]]]\"\n          ulm_icon_tap_navigate_path: \"[[[ return variables.ulm_icon_tap_navigate_path; ]]]\"\n          ulm_icon_tap_service: \"[[[ return variables.ulm_icon_tap_service; ]]]\"\n          ulm_icon_tap_service_data: \"[[[ return variables.ulm_icon_tap_service_data]]]\"\n          ulm_icon_hold_action: \"[[[ return variables.ulm_icon_hold_action; ]]]\"\n          ulm_icon_hold_haptic: \"[[[ return variables.ulm_icon_hold_haptic; ]]]\"\n          ulm_icon_hold_navigate_path: \"[[[ return variables.ulm_icon_hold_navigate_path; ]]]\"\n          ulm_icon_hold_service: \"[[[ return variables.ulm_icon_hold_service; ]]]\"\n          ulm_icon_hold_service_data: \"[[[ return variables.ulm_icon_hold_service_data]]]\"\n          ulm_icon_double_tap_action: \"[[[ return variables.ulm_icon_double_tap_action; ]]]\"\n          ulm_icon_double_tap_haptic: \"[[[ return variables.ulm_icon_double_tap_haptic; ]]]\"\n          ulm_icon_double_tap_navigate_path: \"[[[ return variables.ulm_icon_double_tap_navigate_path; ]]]\"\n          ulm_icon_double_tap_service: \"[[[ return variables.ulm_icon_double_tap_service; ]]]\"\n          ulm_icon_double_tap_service_data: \"[[[ return variables.ulm_icon_double_tap_service_data]]]\"\n          ulm_custom_popup: \"[[[ return variables.ulm_custom_popup; ]]]\"\n    item2:\n      card:\n        type: \"custom:button-card\"\n        entity: \"[[[ return entity.entity_id ]]]\"\n        template:\n          - \"ulm_actions_name\"\n        variables:\n          ulm_input_select_option: \"[[[ return variables.ulm_input_select_option; ]]]\"\n          ulm_input_select: \"[[[ return variables.ulm_input_select; ]]]\"\n          ulm_name_tap_action: \"[[[ return variables.ulm_name_tap_action; ]]]\"\n          ulm_name_tap_haptic: \"[[[ return variables.ulm_name_tap_haptic; ]]]\"\n          ulm_name_tap_navigate_path: \"[[[ return variables.ulm_name_tap_navigate_path; ]]]\"\n          ulm_name_tap_service: \"[[[ return variables.ulm_name_tap_service; ]]]\"\n          ulm_name_tap_service_data: \"[[[ return variables.ulm_name_tap_service_data]]]\"\n          ulm_name_hold_action: \"[[[ return variables.ulm_name_hold_action; ]]]\"\n          ulm_name_hold_haptic: \"[[[ return variables.ulm_name_hold_haptic; ]]]\"\n          ulm_name_hold_navigate_path: \"[[[ return variables.ulm_name_hold_navigate_path; ]]]\"\n          ulm_name_hold_service: \"[[[ return variables.ulm_name_hold_service; ]]]\"\n          ulm_name_hold_service_data: \"[[[ return variables.ulm_name_hold_service_data]]]\"\n          ulm_name_double_tap_action: \"[[[ return variables.ulm_name_double_tap_action; ]]]\"\n          ulm_name_double_tap_haptic: \"[[[ return variables.ulm_name_double_tap_haptic; ]]]\"\n          ulm_name_double_tap_navigate_path: \"[[[ return variables.ulm_name_double_tap_navigate_path; ]]]\"\n          ulm_name_double_tap_service: \"[[[ return variables.ulm_name_double_tap_service; ]]]\"\n          ulm_name_double_tap_service_data: \"[[[ return variables.ulm_name_double_tap_service_data]]]\"\n          ulm_custom_popup: \"[[[ return variables.ulm_custom_popup; ]]]\"\n</code></pre> <p>For developes who have already implemented the custom actions on their card</p> <p>There could be some breaking changes:</p> <ul> <li>The custom card should either implement the <code>icon_more_info_new</code> or the <code>extended_card</code></li> <li>The template ulm_actions_card can be removed</li> <li>The variable redirections for the ulm_*_action can be removed</li> </ul> <p>Also the custom popup feature has some breaking changes: The variables <code>ulm_card_light_enable_popup</code>, <code>ulm_card_thermostat_enable_popup</code> and  <code>ulm_card_media_player_enable_popup</code> aren't used internally anymore. The are only working on their appropriate cards as configuration option for the end user of the card. So the custom_popup variable should be used instead.</p>"},{"location":"setup/custom_actions/#for-developers-of-custom-popups","title":"For developers of custom popups","text":"<p>Custom popups must be a <code>custom:button-card</code>. It is also recommended to disable the icon, name and label within the card configuration using</p> <pre><code>show_icon: false\nshow_name: false\nshow_label: false\nshow_units: false\n</code></pre> <p>The usage of variables within the popup have some restrictions. Default variables of the popup don't work in the same way as for other custom button cards. The default variables -- defined in the variables section -- will always be overwritten by the custom actions caller.</p> <p>The following code won't work on custom popup cards:</p> <pre><code>popup_weather_forecast:\n---\nvariables:\n  ulm_weather_popup_surpress_first_forecast: false\n</code></pre> <p>Instead of using the variables section of the card the variables must be checked within a JavaScript template. The following code shows an example how to check and define a default value of custom popup variable:</p> <pre><code>element: &gt;\n  [[[\n    let surpress_first_forecast = ('ulm_weather_popup_surpress_first_forecast' in variables) ? variables.ulm_weather_popup_surpress_first_forecast : false;\n\n    if (surpress_first_forecast) {\n      ...\n    }\n\n    return surpress_first_forecast;\n  ]]]\n</code></pre> <p>The code checks if the variable is available before reading from the variable and if the variable isn't available it will set a default value.</p>"},{"location":"setup/custom_cards/","title":"Configuration","text":""},{"location":"setup/custom_cards/#add-custom-cards-to-your-dashboard","title":"Add Custom-cards to your dashboard","text":"<p>This 'theme' and his community do offer support for multiple great Custom-cards. To use and download these Custom-cards follow the instructions on this page.</p> <p>  \ud83d\ude80  New Custom Card Selection Feature!  \ud83d\ude80</p> <p>Since the release of <code>v1.1.0</code> support has been build in to select custom/community cards that are available in the <code>main</code> branch on our Github Repository in the <code>custom_cards</code> folder. This Removes the need for copying over files from the Github Repo and put them in the <code>/config/ui_lovelace_minimlist/custom_cards</code> folder. You can select the custom cards you want to use in your integration options (see installation). This requires a GitHub account. Alternatively you can copy the custom cards you want to use as outlined below.</p>"},{"location":"setup/custom_cards/#custom-cards","title":"Custom Cards","text":"<p>This integration also allows you to add your own Custom Button Cards. These cards are not part of the HACS installation and must be downloaded separately from the repo as needed. You can find an overview of the cards here in our wiki. The cards themselves for the download are on our repo here, or select them on the integration Configuration page.</p> <p>You might have noticed, during the installation process a directory for UI Lovelace Minimalist is/should be created in the Home Assistant configuration directory (in the folder <code>/config</code>). The directory is named <code>ui_lovelace_minimalist</code>, within this directory you can put custom cards in the folder <code>custom_cards</code>. Basically you just have to create an folder inside <code>ui_lovelace_minimalist/custom_cards</code> for each custom_card you want to add and put the custom_card.yaml file and the translation file you need for the respective custom_card inside. These cards will then be merged into a directory together witch the cards of this integration and the selected Language.</p> <p>Translation files for custom cards</p> <p>Most Custom Cards do not work without adding a small translation file. These files can be found in the corresponding folder of a particular Custom Card within a folder <code>languages</code>. Make sure to only download the translation file you need. As adding multiple translation files can give unwanted results/errors!</p> <p>Make sure it's in the format like the following example:</p> <pre><code>config\n\u2514\u2500\u2500 ui_lovelace_minimalist\n    \u251c\u2500\u2500 custom_cards\n    |   \u251c\u2500\u2500 custom_card_1\n    |   |   \u251c\u2500\u2500 custom_card_1.yaml\n    |   |   \u2514\u2500\u2500 EN.yaml\n    |   \u2514\u2500\u2500 custom_card_2\n    |       \u251c\u2500\u2500 custom_card_2.yaml\n    |       \u2514\u2500\u2500 EN.yaml\n    \u2514\u2500\u2500 dashboard\n</code></pre> <p>Warning</p> <p>Do not alter files in <code>custom_components/ui_lovelace_minimalist</code> as those changes will be overridden with each new release/update through HACS!!</p> <p>You don't need to do any extra inclusion in your dashboard yaml via <code>!include</code>, the custom_cards will be copied from this folder to the custom_component directory. The custom_cards folder itself remains untouched. A list of all currently available custom_cards can be found on our repo here: https://github.com/UI-Lovelace-Minimalist/UI/tree/main/custom_cards</p> <p>Reloading</p> <p>Once you have added new custom_cards, you can always reload that folder via Home Assistant and add the new cards to the config. Just go to <code>\"Developer Tools\"</code> in Home Assistant and press the <code>\"UI_LOVELACE_MINIMALIST\"</code> button within the \"YAML configuration   reloading\" section.</p>"},{"location":"setup/custom_cards/#develop-your-own-custom-cards","title":"Develop your own Custom-cards","text":"<p>You can always manual add new YAML-files with card-templates to <code>/config/ui_lovelace_minimalist/custom_cards</code> for your own use. If you want to share and contribute your custom-cards to the community please read this page.</p>"},{"location":"setup/customizing/","title":"Customizing","text":"<p>When you have finished the installation process successfully it's time to start customizing your dashboard. You can find your ui-minimalist-lovelace file here:</p> <pre><code>config\n\u2514\u2500\u2500 ui_lovelace_minimalist\n    \u251c\u2500\u2500 custom_cards\n    \u2514\u2500\u2500 dashboard\n        \u2514\u2500\u2500 ui-lovelace.yaml\n</code></pre> <p>It should look like this:</p> ui-lovelace.yaml <pre><code>---\nbutton_card_templates: !include_dir_merge_named \"../../custom_components/ui_lovelace_minimalist/__ui_minimalist__/ulm_templates/\"\n\ntitle: \"UI Lovelace Minimalist\"\ntheme: \"minimalist-desktop\"\nbackground: \"var(--background-image)\"\n# views: !include_dir_merge_list \"views/\"\nviews:\n  - title: \"Example View\"\n    path: 0\n    icon: \"mdi:flower\"\n    cards:\n      - type: \"vertical-stack\"\n        cards:\n          - type: \"custom:button-card\"\n            template: \"card_title\"\n            name: \"Congrats with your installation \ud83c\udf89\"\n            label: \"Explore some of the wonderful 'Minimalistic-UI' cards we offer here\"\n          - type: \"custom:auto-entities\"\n            card:\n              type: \"grid\"\n              columns: 1\n              square: false\n            card_param: \"cards\"\n            sort:\n              count: 1\n            filter:\n              include:\n                - domain: \"weather\"\n                  options:\n                    type: \"custom:button-card\"\n                    template: \"card_welcome_scenes\"\n                    variables:\n                      ulm_weather: \"this.entity_id\"\n          - type: \"custom:button-card\"\n            template: \"card_title\"\n            name: \"[[[ hass.resources[hass['language']]['ui.panel.lovelace.editor.card.light.name'] ]]]\"\n            label: \"This is the Minimalist-light-card\"\n          - type: \"custom:auto-entities\"\n            card:\n              type: \"grid\"\n              columns: 2\n              square: false\n            card_param: \"cards\"\n            sort:\n              count: 4\n            filter:\n              include:\n                - domain: \"light\"\n                  options:\n                    type: \"custom:button-card\"\n                    template: \"card_light\"\n                    variables:\n                      ulm_card_light_enable_slider: true\n                      ulm_card_light_enable_color: true\n                      ulm_card_light_enable_popup: true\n          - type: \"custom:button-card\"\n            template: \"card_title\"\n            name: \"Binary Sensors\"\n            label: \"This is the Minimalist-binary_sensor-card\"\n          - type: \"custom:auto-entities\"\n            card:\n              type: \"grid\"\n              columns: 2\n              square: false\n            card_param: \"cards\"\n            sort:\n              count: 4\n            filter:\n              include:\n                - domain: \"binary_sensor\"\n                  options:\n                    type: \"custom:button-card\"\n                    template: \"card_binary_sensor_alert\"\n                    variables:\n                      - ulm_card_binary_sensor_alert: true\n          - type: \"custom:button-card\"\n            template: \"card_title\"\n            name: \"[[[ hass.resources[hass['language']]['ui.panel.lovelace.editor.card.sensor.name'] ]]]\"\n            label: \"This is the Minimalist-sensor-card\"\n          - type: \"custom:auto-entities\"\n            card:\n              type: \"grid\"\n              columns: 2\n              square: false\n            card_param: \"cards\"\n            sort:\n              count: 4\n            filter:\n              include:\n                - domain: \"sensor\"\n                  options:\n                    type: \"custom:button-card\"\n                    template: \"card_generic\"\n          - type: \"custom:button-card\"\n            template: \"card_title\"\n            name: \"[[[ hass.resources[hass['language']]['ui.dialogs.entity_registry.editor.device_classes.binary_sensor.battery'] ]]]\"\n            label: \"This is the Minimalist-battery-card\"\n          - type: \"custom:auto-entities\"\n            card:\n              type: \"grid\"\n              columns: 2\n              square: false\n            card_param: \"cards\"\n            sort:\n              count: 4\n            filter:\n              include:\n                - attributes:\n                    unit_of_measurement: \"%\"\n                    device_class: \"battery\"\n                  options:\n                    type: \"custom:button-card\"\n                    template: \"card_battery\"\n                    variables:\n                      ulm_card_battery_battery_state_entity_id: \"this.entity_id\"\n                      ulm_card_battery_battery_level_danger: 30\n                      ulm_card_battery_battery_level_warning: 80\n</code></pre>"},{"location":"setup/customizing/#how-to-customize-the-dashboard","title":"How to customize the dashboard","text":"<p>You can customize your dashboard like any other YAML-based lovelace dashboard.</p> <p>UI-mode is not yet supported</p> <p>So first let add some cards. These can be found on the Wiki. As an example we will add the <code>card_light</code> and <code>card_vacuum</code> next to each other with help of a <code>horizontal-stack</code>. Please read carefully the wiki-page of each of the cards to understand their specific variables.</p> <pre><code>---\nbutton_card_templates: !include_dir_merge_named \"../../custom_components/ui_lovelace_minimalist/__ui_minimalist__/ulm_templates/\"\n\ntitle: \"UI Lovelace Minimalist\"\ntheme: \"minimalist-desktop\"\nbackground: \"var(--background-image)\"\n# views: !include_dir_merge_list \"views/\"\nviews:\n  - title: \"Example View\"\n    path: 0\n    icon: \"mdi:flower\"\n    cards:\n      - type: \"horizontal-stack\"\n        cards:\n          - type: \"custom:button-card\"\n            template: card_light\n            entity: light.living_room\n            variables:\n              ulm_card_light_enable_slider: true\n              ulm_card_light_enable_color: true\n          - type: \"custom:button-card\"\n            template: \"card_vacuum\"\n            entity: \"vacuum.roborock_s5\"\n</code></pre> <p>The <code>path:</code> in the example above is also the path name used in <code>navigation_path:</code></p>"},{"location":"setup/customizing/#add-extra-views-tabs","title":"Add extra views (tabs)","text":"<p>All views/tabs are created as list items underneath:</p> <pre><code>views:\n</code></pre> <p>Make sure you set at least parameters for title, path and icon for each view</p> <pre><code>views:\n  - title: \"Main\"\n    path: 0\n    icon: \"mdi:flower\"\n    cards:\n      - type: \"custom:button-card\"\n            template: card_light\n            entity: light.living_room\n            variables:\n              ulm_card_light_enable_slider: true\n              ulm_card_light_enable_color: true\n  - title: \"Lights\"\n    path: lights\n    icon: \"mdi:lightbulb\"\n    cards:\n      - type: \"custom:button-card\"\n            template: card_light\n            entity: light.living_room\n            variables:\n              ulm_card_light_enable_slider: true\n              ulm_card_light_enable_color: true\n</code></pre>"},{"location":"setup/customizing/#add-multiple-dashboards","title":"Add multiple dashboards","text":"<p>After you have build your first dashboard with UI-Minimalist it's time to build multiple dashboards. If you would to be able to adjust non-UI-Minimalist with the UI-mode it's best to work with storage mode. For the first dashboard we did all the configuration for you. To add a second one you need to take a few steps.</p> <p>Add another <code>ui-lovelace.yaml</code> to your dashboard folder:</p> <pre><code>config\n\u2514\u2500\u2500 ui_lovelace_minimalist\n    \u251c\u2500\u2500 custom_cards\n    \u2514\u2500\u2500 dashboard\n        \u2514\u2500\u2500 ui-lovelace.yaml\n        \u2514\u2500\u2500 ui-lovelace_2.yaml\n</code></pre> <p>Add a reference to it in <code>configuration.yaml</code>:</p> <pre><code>lovelace:\n  mode: storage\n  # Add yaml dashboards\n  dashboards:\n    lovelace-minimalist-2:\n      mode: yaml\n      title: Minimalist 2\n      icon: mdi:flower\n      show_in_sidebar: true\n      filename: ui_lovelace_minimalist/dashboard/ui-lovelace_2.yaml\n</code></pre> <p>You don't need to add the first dashboard which is installed with the integration</p> <p>As mentioned on the configuration page you need to add a line of code to load in all Minimalist card templates.  The start of each new dashboard file should therefore, look like this:</p> <pre><code>---\nbutton_card_templates: !include_dir_merge_named \"../../custom_components/ui_lovelace_minimalist/__ui_minimalist__/ulm_templates/\"\n\ntitle: \"My new dashboard\"\ntheme: \"minimalist-desktop\"\nbackground: \"var(--background-image)\"\n# views: !include_dir_merge_list \"views/\"\nviews:\n</code></pre>"},{"location":"setup/download/","title":"Prepare & Download","text":"<p>Before get started on anything, make sure you have created a backup of your home assistant configuration.</p> <p>In case you experience problems during installation please reach join the Discord Server.</p> <p>You can install this UI Lovelace Minimalist Theme manual or through HACS.</p> <p>You should have a HomeAssistant (HA) instance running, preferably with HACS installed and you should know the basics in using HA, eg. how to change settings in your <code>lovelace</code> configuration.</p> <p>You have access to your <code>config</code> folder of HA. Doesn\u2019t matter which way this is, but you need to be able to upload and change files in your config. If you\u2019re running <code>HA-OS</code> or a <code>supervised install</code> of HA, we highly recommend the Samba AddOn (see the AddOn page for instructions) and for editing the File editor AddOn or a good editor like Notepad++ or SublimeText for your OS.</p> <p>Breaking Changes</p> <p>This integration is still under heavy development and might cause breaking changes</p>"},{"location":"setup/download/#hacs-download","title":"HACS Download","text":""},{"location":"setup/download/#prerequisites","title":"Prerequisites","text":"<p>For the pop-up cards to work it's required to install the Custom Integration called <code>browser-mod</code>. This can be done in HACS and search under Integration on <code>browser-mod</code>. Optionally you can install Frontend modules, but the integration also has a checkmark to include and configure them for you.</p>"},{"location":"setup/download/#install-repository","title":"Install Repository","text":"<p>To find this Integration on HACS we first need to add the UI Lovelace Minimalist (ULM) repository to Custom Reposistories.</p> <ol> <li>Go to HACS</li> <li>Click on Integrations</li> <li>Search for \"UI Lovelace Minimalist\" and click \"Download this Repository with HACS\"</li> <li>Select the version (will auto select latest)</li> <li>Now we need to restart home-assistant under </li> <li>Wait until Home assistant is restarted and Continue to \"Install Integration\".</li> </ol>"},{"location":"setup/download/#manual-download","title":"Manual Download","text":"<p>If you can't or don't like to use HACS, you still have the possibility to use this fantastic \"theme\"</p>"},{"location":"setup/download/#prerequisites_1","title":"Prerequisites","text":"<p>In order to function correctly, the UI Lovelace Mininmalist \"Theme\" requires some additional integrations and lovelace resources. While we can install most of these for you during the installation via HACS, you will also have to install and configuring them manually in advance for a manual installation.</p>"},{"location":"setup/download/#required-integration","title":"Required Integration","text":"<ul> <li>browser_mod by Thomas Lov\u00e9n</li> </ul>"},{"location":"setup/download/#required-lovelace-resources","title":"Required Lovelace Resources","text":"<ul> <li>button-card by RomRider</li> <li>card-mod by Thomas Lov\u00e9n</li> <li>mini-graph-card by Karl Kihlstr\u00f6m</li> <li>Mini Media Player by Karl Kihlstr\u00f6m</li> <li>My Cards Bundle by AnthonMS**</li> <li>Light Entity Card by Leonardo Merza</li> <li>auto-entities by Thomas Lov\u00e9n</li> <li>simple-weather-card by Karl Kihlstr\u00f6m</li> <li>weather-radar-card by Makin-Things</li> <li>lovelace-layout-card by Thomas Lov\u00e9n</li> <li>lovelace-state-swtch by Thomas Lov\u00e9n</li> </ul> <p>You can install these via HACS or manually.</p> <p>Some resources (as marked above with **) might not be available in HACS by default. To find and install these using HACS, first add them as custom repositories.</p>"},{"location":"setup/download/#download-release-file","title":"Download Release File","text":"<p>Go to the release page and download the <code>ui_lovelace_minimalist.zip</code> attached to the latest release.</p> <p>Unpack the file and move the folder it contains called <code>ui_lovelace_minimalist</code> to the following directory of your Home Assistant configuration:</p> <p><code>/config/custom_components/</code></p> <p>If this folder does not exist in your configuration directory, create it. Then you have to restart your Home Assistant and can follow the step \"Install Integration\".</p>"},{"location":"setup/installation/","title":"Installation","text":""},{"location":"setup/installation/#install-integration","title":"Install Integration","text":"<p>Open your Home Assistant instance and start setting up by following these steps:</p> <ul> <li>Navigate to \"Settings\" --&gt; \"Devices &amp; Services\"</li> <li>Click \"+ Add Integration\"</li> <li>Search for and select -&gt; \"UI Lovelace Minimalist\"</li> </ul> <p>Or you can use the My Home Assistant Button below.</p> <p>Unsaved Settings</p> <p>Currently the settings are not stored between initial setup and the settings after installation. After installation the settings drop back to their default values. This bug is reported and looked at.</p> <p></p> <p>Now you can configure the Integration, you can do this also after it's installed!</p> <p></p> <ul> <li>Language: Will set the language for the Integration.</li> <li>Enable creation of a Dashboard entry in the Side panel: If you want to add an Entry in the Side Panel for the auto generated Dashboard. (Still under heavy development!)</li> <li>Side panel title: Will set the title for the Lovelace Dashboard in the Sidebar.</li> <li>Side panel icon: Which icon to put in front of the Title.</li> <li>Enable adaptive Dashboard with popup splitview: Creates an entry for the adaptive dashboard</li> <li>Adaptive panel title: Will set the title for the adaptive dashboard in the Sidebar.</li> <li>Adaptive panel icon: Which icon to put in front of the adaptive dashboard sidebar entry.</li> <li>Theme: Choose a theme of your choice (Note: Both themes will be installed anyway and can be customized later if needed.)</li> </ul> <p>Currently, it may happen that themes are not automatically selected correctly for you in all cases automatically. Please make sure that the minimalist theme is correctly selected in your Home Assistant settings (click on your profile picture in Home Assistant, bottom left).</p> <ul> <li>Theme path: Make sure this is set to the same path as is configured in your <code>configuration.yaml</code> (default: <code>themes/</code>)</li> </ul> <p>Please make sure that you have included this themes/ folder in your <code>configuration.yaml</code> in the frontend settings. Unfortunately, this is something that the HACS integration cannot do for you. If you use the themes/ folder, your entry in <code>configuration.yaml</code> must look like this for example:</p> <pre><code>frontend:\n  themes: !include_dir_merge_named themes\n</code></pre> <p>You will also need to change your user theme to the chosen theme or else no visual modifications will work.</p> <ul> <li>Include Custom Cards: This will make sure almost all dependency cards are included and configured for you.</li> </ul> <p>Activate \"Include Custom Cards\" only if you have not already installed the required Lovelace resources yourself, or if you dont want to install them by yourself. Otherwise this can currently lead to a freeze of the frontend due to double loaded lovelace resources.</p> Included lovelace resources <code>button-card</code> <code>lovelace-card-mod</code> <code>mini-graph-card</code> <code>mini-media-player</code> <code>my-cards-slider-card</code> <code>light-entity-card</code> <code>auto-entities</code> <code>simple-weather-card</code> <code>weather-radar-card</code> <code>lovelace-layout-card</code> <code>lovelace-state-swtch</code> <ul> <li>Select Community Cards you want to enable: Selected custom cards will be downloaded automatically to enable usage. Requires a GitHub account. Restart or reload your configuration after toggling this setting. If needed, a notification will appear, indicating that GitHub needs to be set up. You will be prompted to go to your integrations and to reconfigure this integration. Selecting \"reconfigure\" on your Lovelace Minimalist UI integration, the GitHub-Login-flow will start. You might need to restart HomeAssistant, when your selected community cards change.</li> </ul> <p>Hit submit and in the Sidebar a new Dashboard entry should appear. A new file for the dashboard configuration, with a small example, where you can generate your own layout should have been created under that location:</p> <pre><code>config\n\u2514\u2500\u2500 ui_lovelace_minimalist\n\u251c\u2500\u2500 custom_cards\n\u2514\u2500\u2500 dashboard\n\u2514\u2500\u2500 ui-lovelace.yaml\n</code></pre> <p>In case you want to use your own ui-lovelace files go to Configuration.</p>"},{"location":"troubleshooting/troubleshooting/","title":"FAQ","text":"<p>On this page you can find answers and ways to troubleshoot the most common errors with installing and using this 'theme'.</p> <p>Most times reloading the integration and emptying the cache can resolve most problems.  This is done by:</p> <ol> <li>Hit <code>C</code> and click reload <code>Ui_lovelace_minimalist</code></li> <li>Clear your cache by clicking <code>CTRL + F5</code> on Windows or <code>SHIFT + reload</code> on Mac</li> </ol>"},{"location":"troubleshooting/troubleshooting/#most-common-errors","title":"Most common errors","text":"Not everything is loaded after installation <ol> <li>Check if you have installed all dependencies of this list.</li> <li>Clear your cache by clicking <code>CTRL + F5</code> on Windows or <code>SHIFT + reload</code> on Mac</li> </ol> The theme looks off/weird <p>Check if you have applied the Minimalist theme. Go to User_profile --&gt; theme</p> Weird border lines after updating to HA <code>2022.11.0</code> <ol> <li>Check in Minimalist version <code>v1.1.6</code> or higher is installed</li> <li>Check in <code>config/themes/</code> if this line is added to the minimalist theme files: <pre><code>    # fix added border-lines in 2022.11\n    ha-card-border-width: \"0px\"\n</code></pre></li> <li>Go to the affected dashboard on a PC and hit <code>C</code> on your keyboard. Then select <code>reload Themes</code>. </li> </ol> Custom element doesn't exist <ol> <li>Check if you did install all dependencies or checked the box to let UI-Minimalist them.</li> <li>(additional) If the dependencies are installed manually check if all resources are added right. </li> <li>Clear your cache by clicking <code>CTRL + F5</code> on Windows or <code>SHIFT + reload</code> on Mac.</li> </ol> Popups do not show up <ol> <li>Check if you have installed Browser_mod V2 correctly.</li> <li>Check if you followed the card specific way to enable popups  This is either with adding a template or setting a variable to <code>true</code></li> </ol> Custom card template does not exist/showing up <ol> <li>Check if you placed the custom_card in the right directory <pre><code>config\n    \u2514\u2500\u2500 ui_lovelace_minimalist\n        \u251c\u2500\u2500 custom_cards\n        |   \u251c\u2500\u2500 custom_card_1\n        |   |   \u251c\u2500\u2500 custom_card_1.yaml\n        |   |   \u2514\u2500\u2500 EN.yaml\n        |   \u2514\u2500\u2500 custom_card_2\n        |       \u251c\u2500\u2500 custom_card_2.yaml\n        |       \u2514\u2500\u2500 EN.yaml\n        \u2514\u2500\u2500 dashboard\n</code></pre></li> <li>Hit <code>C</code> and click reload <code>Ui_lovelace_minimalist</code></li> <li>Reload dashboard by clicking the three dots in the upper-right corner and click refresh</li> </ol> HACS Frontend resources are not showing up in <code>https://homeassistant.local/config/lovelace/resources</code> <ol> <li> <p>First check what is being displayed when you download a frontend component. If it's showing something like:</p> <p>since you are not using Lovelace in storage mode you need to manually add the resource with these settings</p> </li> <li> <p>First make sure your configuration file has the setting: <pre><code>lovelace:\n  mode: storage\n</code></pre></p> </li> <li>In case it still shows that error. go to <code>https://homeassistant.local/config/system_health</code> and search for what is under: Dashboard -&gt; Mode. if that is on <code>auto-gen</code>.     Go to the autogenerated lovelace dashboard. and hit the 3 dots and <code>Edit Dashboard</code>. And just hit Save dashboard.</li> <li>Now go and restart Home assistant. and try to install a frontend module. It should not show the message from step 1.</li> </ol>"},{"location":"usage/cards/card_battery/","title":"Battery Card","text":""},{"location":"usage/cards/card_battery/#description","title":"Description","text":"<p>Charging animation if <code>ulm_card_battery_charging_animation</code> is true:</p> <p></p> <p>The <code>battery-card</code> is a slightly enhanced <code>generic-card</code>, that can indicate whether and how a device is being charged and colors the icon based on the battery level.</p>"},{"location":"usage/cards/card_battery/#variables","title":"Variables","text":"Variable Default Required Notes entity This is your battery entity ulm_card_battery_name <code>friendly_name</code> Customize name ulm_card_battery_attribute If your entity provides the battery percent in an attribute (= not as an own sensor), fill in the attribute's name here. E.g. if you have <code>sensor.livingroom_thermometer</code> and the attribute for your battery power is <code>sensor.livingroom_thermometer.attributes.battery_percent</code>, you fill in battery_percent here. ulm_card_battery_battery_state_entity_id Entity that holds the battery state (charging/discharging). If provided, the Icon will display the current status. ulm_card_battery_charger_type_entity_id Entity that holds the charger type (ac/wireless/none). This Entity replaces the need for the <code>ulm_card_battery_battery_state_entity_id</code> entity. If provided, the Icon will display the current charger type. This is only useful if you charge your devices Wireless and with cable. ulm_card_battery_charging_animation <code>false</code> Weather to show charging animation or not. If set to <code>true</code>, <code>ulm_card_battery_battery_state_entity_id</code> needs to be defined and <code>ulm_card_battery_charger_type_entity_id</code> will be ignored. ulm_card_battery_battery_level_danger Changes the color of the Icon, if the battery level falls below the provided value. Must be higher than <code>ulm_card_battery_battery_level_waring</code> ulm_card_battery_battery_level_waring Changes the color of the Icon, if the battery level falls below the provided value. ulm_card_battery_color_battery_level_danger var(--google-red) Color of icon if battery level is within the 'danger' zone. ulm_card_battery_color_battery_level_warning var(--google-yellow) Color of icon if battery level is within the 'warning' zone. ulm_card_battery_color_battery_level_ok var(--google-green) Color of icon if battery level is not within the 'danger' or 'warning' zone."},{"location":"usage/cards/card_battery/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: card_battery\n  entity: sensor.battery_level\n  variables:\n    ulm_card_battery_charger_type_entity_id: sensor.battery_level\n    ulm_card_battery_battery_level_danger: 30\n    ulm_card_battery_battery_level_warning: 80\n    ulm_card_battery_name: Smartphone\n</code></pre> Template Code card_battery.yaml<pre><code>---\n### Card Battery ###\ncard_battery:\n  template:\n    - \"icon_more_info_new\"\n    - \"ulm_translation_engine\"\n  variables:\n    ulm_card_battery_name: \"[[[ return entity.attributes.friendly_name ]]]\"\n    ulm_card_battery_attribute:\n    ulm_card_battery_battery_state_entity_id:\n    ulm_card_battery_charger_type_entity_id:\n    ulm_card_battery_charging_animation: false\n    ulm_card_battery_battery_level_danger:\n    ulm_card_battery_battery_level_warning:\n    ulm_card_battery_color_battery_level_danger: \"var(--google-red)\"\n    ulm_card_battery_color_battery_level_warning: \"var(--google-yellow)\"\n    ulm_card_battery_color_battery_level_ok: \"var(--google-green)\"\n    ulm_outlet_power_enable_popup: false\n  triggers_update:\n    - \"[[[ return variables?.ulm_card_battery_battery_state_entity_id ]]]\"\n    - \"[[[ return variables?.ulm_card_battery_charger_type_entity_id ]]]\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              variables: &gt;\n                [[[\n                  let vars = variables;\n\n                  if(variables.ulm_outlet_power_enable_popup) {\n                    vars.ulm_custom_popup = {\n                      'template': 'popup_power_outlet_stats',\n                      'popup_variables': {\n                        'ulm_popup_power_outlet_sensor1': variables.ulm_popup_power_outlet_sensor1,\n                        'ulm_popup_power_outlet_sensor2': variables.ulm_popup_power_outlet_sensor2,\n                        'ulm_popup_power_outlet_graph_sensor': variables.ulm_popup_power_outlet_graph_sensor\n                      }\n                    };\n                  }\n                  return vars;\n                ]]]\n              icon: |\n                [[[\n                  // Get battery level\n                  const battery_level = variables.ulm_card_battery_attribute !== null ?\n                    states[entity.entity_id].attributes[variables.ulm_card_battery_attribute] :\n                    states[entity.entity_id].state;\n                  // Generate icon infix\n                  let infix = \"\";\n                  if (variables.ulm_card_battery_charger_type_entity_id == null) {\n                    // Check wether the battery state is charging\n                    infix = variables.ulm_card_battery_battery_state_entity_id !== null &amp;&amp;\n                      variables.ulm_card_battery_charging_animation === false &amp;&amp;\n                      states[variables.ulm_card_battery_battery_state_entity_id].state.toLowerCase() === \"charging\" ?\n                      \"-charging\" : \"\"\n                  } else {\n                    // Select the infix based on the entity charging state\n                    switch (states[variables.ulm_card_battery_charger_type_entity_id].state.toLowerCase()) {\n                      case \"wireless\":\n                        infix = \"-charging-wireless\";\n                        break;\n                      case \"charging\":\n                        infix = \"-charging\";\n                        break;\n                      case \"ac\":\n                        infix = \"-charging\";\n                        break;\n                      case \"usb\":\n                        infix = \"-charging\";\n                        break;\n                      default:\n                        infix = \"\";\n                    }\n                  }\n                  // Generate the icon based on the battery_level\n                  let icon = \"mdi:help-circle-outline\";\n                  if (battery_level == 100) {\n                    icon = \"mdi:battery\";\n                  } else if (battery_level &lt; 10) {\n                    icon = \"mdi:battery\" + infix + \"-outline\";\n                  } else if (battery_level == \"unknown\" || battery_level == \"unavailable\") {\n                    icon = \"mdi:battery-off\";\n                  } else {\n                    icon = \"mdi:battery\" + infix + \"-\" + Math.floor(battery_level / 10) * 10;\n                  }\n                  return icon;\n                ]]]\n              extra_styles: |\n                @keyframes charge {\n                  0%, 80% { clip-path: inset(0 0 0 0); }\n                  10% { clip-path: polygon(0% 0%, 0% 100%, 34% 100%, 34% 40%, 66% 40%, 66% 66%, 34% 66%, 34% 100%, 100% 100%, 100% 0%); }\n                  20% { clip-path: polygon(0% 0%, 0% 100%, 34% 100%, 34% 40%, 66% 40%, 66% 62%, 34% 62%, 34% 100%, 100% 100%, 100% 0%); }\n                  30% { clip-path: polygon(0% 0%, 0% 100%, 34% 100%, 34% 40%, 66% 40%, 66% 58%, 34% 58%, 34% 100%, 100% 100%, 100% 0%); }\n                  40% { clip-path: polygon(0% 0%, 0% 100%, 34% 100%, 34% 40%, 66% 40%, 66% 54%, 34% 54%, 34% 100%, 100% 100%, 100% 0%); }\n                  50% { clip-path: polygon(0% 0%, 0% 100%, 34% 100%, 34% 40%, 66% 40%, 66% 50%, 34% 50%, 34% 100%, 100% 100%, 100% 0%); }\n                  60% { clip-path: polygon(0% 0%, 0% 100%, 34% 100%, 34% 40%, 66% 40%, 66% 46%, 34% 46%, 34% 100%, 100% 100%, 100% 0%); }\n                  70% { clip-path: polygon(0% 0%, 0% 100%, 34% 100%, 34% 40%, 66% 40%, 66% 40%, 34% 40%, 34% 100%, 100% 100%, 100% 0%); }\n                }\n              styles:\n                icon:\n                  - color: |\n                      [[[\n                        const battery_level = variables.ulm_card_battery_attribute !== null ?\n                          states[entity.entity_id].attributes[variables.ulm_card_battery_attribute] :\n                          states[entity.entity_id].state;\n                        // Get the color based on battery_level\n                        let color = \"rgba(var(--color-theme), 0.9)\";\n                        if (battery_level !== \"unavailable\" &amp;&amp; (variables.ulm_card_battery_battery_level_danger !== null || variables.ulm_card_battery_battery_level_warning !== null)) {\n                          if (battery_level &lt;= variables.ulm_card_battery_battery_level_danger) {\n                            color = variables.ulm_card_battery_color_battery_level_danger;\n                          } else if (battery_level &lt;= variables.ulm_card_battery_battery_level_warning) {\n                            color = variables.ulm_card_battery_color_battery_level_warning;\n                          } else if (battery_level == \"unknown\" || battery_level == \"unavailable\") {\n                            color = variables.ulm_card_battery_color_battery_level_danger;\n                          } else {\n                            color = variables.ulm_card_battery_color_battery_level_ok;\n                          }\n                        }\n                        return color;\n                      ]]]\n                  - animation: |\n                      [[[\n                        if (variables.ulm_card_battery_battery_state_entity_id !== null &amp;&amp;\n                          variables.ulm_card_battery_charging_animation === true &amp;&amp;\n                          states[variables.ulm_card_battery_battery_state_entity_id].state.toLowerCase() === \"charging\"){\n                            return \"charge 3s linear infinite\"\n                          }\n                        return \"none\"\n                      ]]]\n          item2:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              name: \"[[[ return variables.ulm_card_battery_name ]]]\"\n              variables: &gt;\n                [[[\n                  let vars = variables;\n\n                  if(variables.ulm_outlet_power_enable_popup) {\n                    vars.ulm_custom_popup = {\n                      'template': 'popup_power_outlet_stats',\n                      'popup_variables': {\n                        'ulm_popup_power_outlet_sensor1': variables.ulm_popup_power_outlet_sensor1,\n                        'ulm_popup_power_outlet_sensor2': variables.ulm_popup_power_outlet_sensor2,\n                        'ulm_popup_power_outlet_graph_sensor': variables.ulm_popup_power_outlet_graph_sensor\n                      }\n                    };\n                  }\n                  return vars;\n                ]]]\n              label: |\n                [[[\n                  const battery_level = variables.ulm_card_battery_attribute !== null\n                    ? states[entity.entity_id].attributes[variables.ulm_card_battery_attribute]\n                    : states[entity.entity_id].state;\n                  return battery_level + \"%\";\n                  if(battery_level == \"unknown\")\n                  { return variables.ulm_translation_state; }\n                  else\n                  { return battery_level + \"%\"; }\n                ]]]\n</code></pre>"},{"location":"usage/cards/card_binary_sensor/","title":"Binary Sensor Card","text":""},{"location":"usage/cards/card_binary_sensor/#description","title":"Description","text":"<p>The <code>binary-sensor-card</code> is to show the state (on/off, open/close, etc.) of a binary sensor, eg. your garage door or a window contact sensor.</p>"},{"location":"usage/cards/card_binary_sensor/#variables","title":"Variables","text":"Variable Default Required Notes entity ulm_card_binary_sensor_show_last_changed <code>true</code> or <code>false</code> ulm_card_binary_sensor_name Set custom Name ulm_card_binary_sensor_icon Set custom Icon ulm_card_binary_sensor_color <code>blue</code> Set Custom Color ulm_card_binary_sensor_force_background_color <code>false</code> Set <code>ulm_card_binary_sensor_color</code> as background color in active state ` <p>\u26a0\ufe0f Breaking Change <code>v1.0.1</code></p> <p><code>show_last_changed</code> is changed to be used as variable: <pre><code>variables:\n  ulm_show_last_changed: true\n</code></pre></p> <p>\u26a0\ufe0f Breaking Change <code>v1.3.8</code></p> <p><code>ulm_show_last_changed</code> is renamed to <code>ulm_card_binary_sensor_show_last_changed</code>: <pre><code>variables:\n  ulm_card_binary_sensor_show_last_changed: true\n</code></pre></p>"},{"location":"usage/cards/card_binary_sensor/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: card_binary_sensor\n  variables:\n    ulm_card_binary_sensor_alert: true\n    ulm_card_binary_sensor_show_last_changed: true\n  entity: binary_sensor.garage_door\n</code></pre> Template Code card_binary_sensor.yaml<pre><code>---\n### Card Binary Sensor ###\ncard_binary_sensor:\n  template:\n    - \"icon_more_info_new\"\n    - \"ulm_translation_engine\"\n  show_last_changed: false\n  variables:\n    ulm_card_binary_sensor_show_last_changed: false\n    ulm_card_binary_sensor_icon: \"[[[ return entity.attributes.icon ]]]\"\n    ulm_card_binary_sensor_name: \"[[[ return entity.attributes.friendly_name ]]]\"\n    ulm_outlet_power_enable_popup: false\n    ulm_card_binary_sensor_color: \"blue\"\n    ulm_card_binary_sensor_force_background_color: false\n  state:\n    - operator: \"template\"\n      value: \"[[[ return variables.ulm_active_state ]]]\"\n      styles:\n        card:\n          - background-color: &gt;\n              [[[\n                if (variables.ulm_card_binary_sensor_force_background_color) {\n                  var color = variables.ulm_card_binary_sensor_color;\n                  return 'rgba(var(--color-' + color + '),var(--opacity-bg))';\n                }\n              ]]]\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              icon: \"[[[ return variables.ulm_card_binary_sensor_icon; ]]]\"\n              variables: &gt;\n                [[[\n                  let vars = variables;\n\n                  if(variables.ulm_outlet_power_enable_popup) {\n                    vars.ulm_custom_popup = {\n                      'template': 'popup_power_outlet_stats',\n                      'popup_variables': {\n                        'ulm_popup_power_outlet_sensor1': variables.ulm_popup_power_outlet_sensor1,\n                        'ulm_popup_power_outlet_sensor2': variables.ulm_popup_power_outlet_sensor2,\n                        'ulm_popup_power_outlet_graph_sensor': variables.ulm_popup_power_outlet_graph_sensor\n                      }\n                    };\n                  }\n                  return vars;\n                ]]]\n              styles:\n                icon:\n                  - color: &gt;\n                      [[[\n                        var color = variables.ulm_card_binary_sensor_color;\n                        if (variables.ulm_active_state){\n                          return 'rgba(var(--color-' + color + '),1)';\n                        }\n                        return 'rgba(var(--color-theme),0.2)';\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        var color = variables.ulm_card_binary_sensor_color;\n                        if (variables.ulm_active_state){\n                          return 'rgba(var(--color-' + color + '),0.2)';\n                        }\n                        return 'rgba(var(--color-theme),0.05)';\n                      ]]]\n          item2:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              name: \"[[[ return variables.ulm_card_binary_sensor_name; ]]]\"\n              label: \"[[[ return variables.ulm_translation_state;]]]\"\n              show_last_changed: \"[[[ return variables.ulm_card_binary_sensor_show_last_changed; ]]]\"\n              variables: &gt;\n                [[[\n                  let vars = variables;\n\n                  if(variables.ulm_outlet_power_enable_popup) {\n                    vars.ulm_custom_popup = {\n                      'template': 'popup_power_outlet_stats',\n                      'popup_variables': {\n                        'ulm_popup_power_outlet_sensor1': variables.ulm_popup_power_outlet_sensor1,\n                        'ulm_popup_power_outlet_sensor2': variables.ulm_popup_power_outlet_sensor2,\n                        'ulm_popup_power_outlet_graph_sensor': variables.ulm_popup_power_outlet_graph_sensor\n                      }\n                    };\n                  }\n                  return vars;\n                ]]]\n              state:\n                - operator: \"template\"\n                  value: \"[[[ return variables.ulm_active_state ]]]\"\n                  styles:\n                    name:\n                      - color: &gt;\n                          [[[\n                              if (variables.ulm_card_binary_sensor_force_background_color) {\n                                  return 'rgb(250,250,250)';\n                              }\n                          ]]]\n                    label:\n                      - color: &gt;\n                          [[[\n                              if (variables.ulm_card_binary_sensor_force_background_color) {\n                                  return 'rgb(250,250,250)';\n                              }\n                          ]]]\n</code></pre>"},{"location":"usage/cards/card_binary_sensor_alert/","title":"Binary Sensor Alert Card","text":""},{"location":"usage/cards/card_binary_sensor_alert/#description","title":"Description","text":"<p>The <code>binary-sensor-card</code> is to show the state (on/off, open/close, etc.) of a binary sensor, eg. your garage door or a window contact sensor. This card shows an alert if the state is on/open or unavailable.</p>"},{"location":"usage/cards/card_binary_sensor_alert/#variables","title":"Variables","text":"Variable Default Required Notes entity ulm_card_binary_sensor_alert_show_last_changed <code>true</code> or <code>false</code> ulm_card_binary_sensor_alert_name Set custom Name ulm_card_binary_sensor_alert_icon Set custom Icon ulm_icon_alert_invert_state false Invert the alert state logic so an alert is shown when the sensor is \"off\" ulm_card_binary_sensor_alert_color <code>blue</code> Set Custom Color ulm_card_binary_sensor_alert_force_background_color <code>false</code> Set <code>ulm_card_binary_sensor_alert_color</code> as background color in active state ` <p>\u26a0\ufe0f Breaking Change <code>v1.0.1</code></p> <p><code>show_last_changed</code> is changed to be used as variable: <pre><code>variables:\n  ulm_show_last_changed: true\n</code></pre></p> <p>\u26a0\ufe0f Breaking Change <code>v1.3.8</code></p> <p><code>ulm_show_last_changed</code> is renamed to <code>ulm_card_binary_sensor_show_last_changed</code>: <pre><code>variables:\n  ulm_card_binary_sensor_show_last_changed: true\n</code></pre></p>"},{"location":"usage/cards/card_binary_sensor_alert/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: card_binary_sensor_alert\n  variables:\n    ulm_card_binary_sensor_alert: true\n    ulm_card_binary_sensor_show_last_changed: true\n  entity: binary_sensor.garage_door\n</code></pre> Template Code card_binary_sensor_alert.yaml<pre><code>---\n### Card Binary Sensor Alert ###\ncard_binary_sensor_alert:\n  template:\n    - \"icon_more_info_alert\"\n    - \"ulm_translation_engine\"\n  show_last_changed: false\n  variables:\n    ulm_card_binary_sensor_alert_show_last_changed: false\n    ulm_card_binary_sensor_alert_icon: \"[[[ return entity.attributes.icon ]]]\"\n    ulm_card_binary_sensor_alert_name: \"[[[ return entity.attributes.friendly_name ]]]\"\n    ulm_outlet_power_enable_popup: false\n    ulm_card_binary_sensor_alert_color: \"blue\"\n    ulm_card_binary_sensor_alert_force_background_color: false\n    ulm_icon_alert_color: \"[[[ return variables.ulm_card_binary_sensor_alert_color ]]]\"\n  state:\n    - operator: \"template\"\n      value: \"[[[ return variables.ulm_active_state ]]]\"\n      styles:\n        card:\n          - background-color: &gt;\n              [[[\n                if (variables.ulm_card_binary_sensor_alert_force_background_color) {\n                  var color = variables.ulm_card_binary_sensor_alert_color;\n                  return 'rgba(var(--color-' + color + '),var(--opacity-bg))';\n                }\n              ]]]\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              icon: \"[[[ return variables.ulm_card_binary_sensor_alert_icon; ]]]\"\n              variables: &gt;\n                [[[\n                  let vars = variables;\n\n                  if(variables.ulm_outlet_power_enable_popup) {\n                    vars.ulm_custom_popup = {\n                      'template': 'popup_power_outlet_stats',\n                      'popup_variables': {\n                        'ulm_popup_power_outlet_sensor1': variables.ulm_popup_power_outlet_sensor1,\n                        'ulm_popup_power_outlet_sensor2': variables.ulm_popup_power_outlet_sensor2,\n                        'ulm_popup_power_outlet_graph_sensor': variables.ulm_popup_power_outlet_graph_sensor\n                      }\n                    };\n                  }\n                  return vars;\n                ]]]\n              styles:\n                icon:\n                  - color: &gt;\n                      [[[\n                        var color = variables.ulm_card_binary_sensor_alert_color;\n                        if (variables.ulm_active_state){\n                          return 'rgba(var(--color-' + color + '),1)';\n                        }\n                        return 'rgba(var(--color-theme),0.2)';\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        var color = variables.ulm_card_binary_sensor_alert_color;\n                        if (variables.ulm_active_state){\n                          return 'rgba(var(--color-' + color + '),0.2)';\n                        }\n                        return 'rgba(var(--color-theme),0.05)';\n                      ]]]\n          item2:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              name: \"[[[ return variables.ulm_card_binary_sensor_alert_name; ]]]\"\n              label: \"[[[ return variables.ulm_translation_state;]]]\"\n              show_last_changed: \"[[[ return variables.ulm_card_binary_sensor_alert_show_last_changed; ]]]\"\n              variables: &gt;\n                [[[\n                  let vars = variables;\n\n                  if(variables.ulm_outlet_power_enable_popup) {\n                    vars.ulm_custom_popup = {\n                      'template': 'popup_power_outlet_stats',\n                      'popup_variables': {\n                        'ulm_popup_power_outlet_sensor1': variables.ulm_popup_power_outlet_sensor1,\n                        'ulm_popup_power_outlet_sensor2': variables.ulm_popup_power_outlet_sensor2,\n                        'ulm_popup_power_outlet_graph_sensor': variables.ulm_popup_power_outlet_graph_sensor\n                      }\n                    };\n                  }\n                  return vars;\n                ]]]\n              state:\n                - operator: \"template\"\n                  value: \"[[[ return variables.ulm_active_state ]]]\"\n                  styles:\n                    name:\n                      - color: &gt;\n                          [[[\n                              if (variables.ulm_card_binary_sensor_alert_force_background_color) {\n                                  return 'rgb(250,250,250)';\n                              }\n                          ]]]\n                    label:\n                      - color: &gt;\n                          [[[\n                              if (variables.ulm_card_binary_sensor_alert_force_background_color) {\n                                  return 'rgb(250,250,250)';\n                              }\n                          ]]]\n</code></pre>"},{"location":"usage/cards/card_cover/","title":"Cover Card","text":""},{"location":"usage/cards/card_cover/#description","title":"Description","text":"<p>With the <code>cover-card</code> you have the state of your cover. Optionally, on the second line, OPEN / PAUSE / CLOSE to control it and/or a slider to control position.</p> <p>Warning</p> <p>This card has backward compatibility with older template except custom name. It means variable <code>ulm_card_cover_buttons_name</code> must be replaced by <code>ulm_card_cover_name</code>.</p>"},{"location":"usage/cards/card_cover/#variables","title":"Variables","text":"Variable/Entity Default Required Notes Requirement entity Your HA entity ulm_card_cover_name <code>friendly_name</code> Customize name ulm_card_cover_icon Customize icon ulm_card_invert_percent <code>false</code> Invert the Percentage (100% = Closed) ulm_card_cover_display_left_right <code>false</code> Display left right control button ulm_card_cover_garage_large <code>false</code> Display variant garage icon for garage cover Only if <code>device_class = 'garage</code> ulm_card_cover_enable_controls <code>false</code> Enable control buttons ulm_card_cover_enable_slider <code>false</code> Enable slider ulm_card_cover_enable_horizontal <code>false</code> Enable horizontal card Need <code>ulm_card_cover_enable_controls: true</code> or <code>ulm_card_cover_enable_slider: true</code> ulm_card_cover_favorite_percentage <code>false</code> Display favorite button to jump to preset position enter number ulm_card_cover_enable_tilt <code>false</code> Display angled buttons for Venetian blind tilt ulm_card_cover_enable_popup <code>false</code> Enable <code>popup_cover</code> ulm_card_cover_slider_min <code>0</code> Set Minimum Slider Value ulm_card_cover_slider_max <code>100</code> Set Maximum Slider Value ulm_card_cover_color <code>blue</code> Set Custom Color ulm_card_cover_force_background_color <code>false</code> Set <code>ulm_card_cover_color</code> as background color in active state `"},{"location":"usage/cards/card_cover/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: card_cover\n  entity: cover.window\n  variables:\n    ulm_card_cover_enable_controls: true\n    ulm_card_cover_enable_slider: true\n    ulm_card_cover_favorite_percentage: 45\n    ulm_card_cover_color: \"green\"\n</code></pre> Template Code card_cover_buttons.yaml<pre><code>---\n### Card Cover ###\ncard_cover:\n  template:\n    - \"icon_more_info_new\"\n    - \"ulm_translation_engine\"\n  variables:\n    ulm_card_cover_name: \"[[[ return entity.attributes.friendly_name ]]]\"\n    ulm_card_cover_icon: false\n    ulm_card_cover_color: \"blue\"\n    ulm_card_invert_percent: false\n    ulm_card_cover_invert_percent: false\n    ulm_card_cover_display_left_right: false\n    ulm_card_cover_garage_large: false\n    ulm_card_cover_gate: false\n    ulm_card_cover_enable_controls: false\n    ulm_card_cover_favorite_percentage: null\n    ulm_card_cover_enable_slider: false\n    ulm_card_cover_slider_min: 0\n    ulm_card_cover_slider_max: 100\n    ulm_card_cover_enable_tilt: false\n    ulm_card_cover_enable_horizontal: false\n    ulm_card_cover_enable_popup: false\n    ulm_card_cover_show_last_changed: false\n    ulm_card_cover_force_background_color: false\n  show_icon: false\n  show_name: false\n  show_label: false\n  show_last_changed: false\n  state:\n    - operator: \"template\"\n      value: \"[[[ return variables.ulm_active_state ]]]\"\n      styles:\n        card:\n          - background-color: &gt;\n              [[[\n                  if (variables.ulm_card_cover_color) {\n                    if (variables.ulm_card_cover_force_background_color) {\n                      var color = variables.ulm_card_cover_color;\n                      return 'rgba(var(--color-' + color + '),var(--opacity-bg))';\n                    }\n                  }\n              ]]]\n  styles:\n    grid:\n      - grid-template-areas: &gt;\n          [[[\n              if (variables.ulm_card_cover_enable_horizontal) {\n\n                  var hor_area = [\"item1\"];\n                  var ver_area = [];\n\n                  if (variables.ulm_card_cover_enable_controls) {\n                    if (variables.ulm_card_cover_enable_horizontal == \"controls\" || variables.ulm_card_cover_enable_horizontal == true) {\n                      hor_area.push(\"item2\");\n                    } else {\n                      ver_area.push(\"item2\" + \" \" + \"item2\");\n                    }\n                  }\n                  if (variables.ulm_card_cover_enable_slider) {\n                    if (variables.ulm_card_cover_enable_horizontal == \"slider\") {\n                      hor_area.push(\"item3\");\n                    } else {\n                      ver_area.push(\"item3\" + \" \" + \"item3\");\n                    }\n                  }\n                  if (variables.ulm_card_cover_enable_tilt) {\n                    if (variables.ulm_card_cover_enable_horizontal == \"tilt\") {\n                      hor_area.push(\"item4\");\n                    } else {\n                      ver_area.push(\"item4\" + \" \" + \"item4\");\n                    }\n                  }\n\n                  if (ver_area.length &lt; 1) {\n                    return \"\\\"\" + hor_area.join(\" \") + \"\\\" \";\n                  } else {\n                    return \"\\\"\" + hor_area.join(\" \") + \"\\\" \" + \"\\\"\" + ver_area.join(\"\\\" \\\"\") + \"\\\"\";\n                  }\n              } else {\n                  var areas = [];\n                  areas.push(\"item1\");\n\n                  if (variables.ulm_card_cover_enable_controls) {\n                    areas.push(\"item2\");\n                  }\n                  if (variables.ulm_card_cover_enable_slider) {\n                      areas.push(\"item3\");\n                  }\n                  if (variables.ulm_card_cover_enable_tilt) {\n                    areas.push(\"item4\");\n                  }\n\n                  return \"\\\"\" + areas.join(\"\\\" \\\"\") + \"\\\"\";\n              }\n          ]]]\n      - grid-template-columns: &gt;\n          [[[\n              if (variables.ulm_card_cover_enable_horizontal) {\n                  return \"1fr 1fr\";\n              }\n              return \"1fr\";\n          ]]]\n      - grid-template-rows: &gt;\n          [[[\n              var rows = [];\n              rows.push(\"min-content\");\n              if (variables.ulm_card_cover_enable_controls) {\n                  rows.push(\"min-content\");\n              }\n              if (variables.ulm_card_cover_enable_slider) {\n                  rows.push(\"min-content\");\n              }\n              if (variables.ulm_card_cover_enable_tilt) {\n                  rows.push(\"min-content\");\n              }\n              if (variables.ulm_card_cover_enable_horizontal) {\n                  if (rows.length &gt; 1) {\n                    rows.pop()\n                  }\n              }\n              return rows.join(\" \");\n          ]]]\n      - row-gap: \"12px\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n    custom_fields:\n      item2:\n        - display: &gt;\n            [[[\n              if (variables.ulm_card_cover_enable_controls) {\n                  return \"block\";\n              } else {\n                  return \"none\";\n              }\n            ]]]\n      item3:\n        - display: &gt;\n            [[[\n              if (variables.ulm_card_cover_enable_slider) {\n                  return \"block\";\n              } else {\n                  return \"none\";\n              }\n            ]]]\n      item4:\n        - display: &gt;\n            [[[\n              if (variables.ulm_card_cover_enable_tilt) {\n                  return \"block\";\n              } else {\n                  return \"none\";\n              }\n            ]]]\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              variables: &gt;\n                [[[\n                  let vars = variables;\n                  if (variables.ulm_card_cover_enable_popup) {\n                      vars.ulm_custom_popup = {\n                          'template': 'popup_cover'\n                      };\n                  }\n                  return vars;\n                ]]]\n              icon: &gt;\n                [[[\n                  var icon = entity.attributes.icon || \"mdi:help-circle\";\n                  var icon_state = {\n                    \"open\": \"open\",\n                    \"opening\": \"open\",\n                    \"closed\": \"closed\",\n                    \"closing\": \"closed\"\n                  };\n                  if(entity.attributes?.device_class){\n                    var device_class = entity.attributes?.device_class;\n                  }\n                  var icon_open = {\n                    \"awning\": \"mdi:window-open\",\n                    \"blind\": \"mdi:blinds-open\",\n                    \"curtain\": \"mdi:curtains\",\n                    \"damper\": \"mdi:circle-outline\",\n                    \"door\": \"mdi:door-open\",\n                    \"garage\": variables.ulm_card_cover_garage_large ? \"mdi:garage-open-variant\" : \"mdi:garage-open\",\n                    \"gate\": \"mdi:gate-open\",\n                    \"shade\": \"mdi:roller-shade\",\n                    \"shutter\": \"mdi:window-shutter-open\",\n                    \"window\": \"mdi:window-open\",\n                  };\n                  var icon_closed = {\n                    \"awning\": \"mdi:window-closed\",\n                    \"blind\": \"mdi:blinds\",\n                    \"curtain\": \"mdi:curtains-closed\",\n                    \"damper\": \"mdi:circle-slice-8\",\n                    \"door\": \"mdi:door-closed\",\n                    \"garage\": variables.ulm_card_cover_garage_large ? \"mdi:garage-variant\" : \"mdi:garage\",\n                    \"gate\": \"mdi:gate\",\n                    \"shade\": \"mdi:roller-shade-closed\",\n                    \"shutter\": \"mdi:window-shutter\",\n                    \"window\": \"mdi:window-closed\",\n                  };\n                  return variables.ulm_card_cover_icon || (icon_state[entity.state]=='open' ? icon_open[device_class] : icon_closed[device_class]) || icon\n                ]]]\n              styles:\n                icon:\n                  - color: &gt;\n                      [[[\n                        var color = variables.ulm_card_cover_color;\n                        if (variables.ulm_card_invert_percent || variables.ulm_card_cover_invert_percent) {\n                            if (entity.attributes.current_position == 100) {\n                                return 'rgba(var(--color-theme),0.2)';\n                            }\n                          return 'rgba(var(--color-' + color + '),1)';\n                        }\n\n                        if (typeof entity !== \"undefined\") {\n                          if (states[entity.entity_id].state != \"closed\") {\n                              return 'rgba(var(--color-' + color + '),1)';\n                          }\n                          return 'rgba(var(--color-theme),0.2)';\n                        }\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        var color = variables.ulm_card_cover_color;\n                        if (variables.ulm_card_invert_percent || variables.ulm_card_cover_invert_percent) {\n                            if (entity.attributes.current_position == 100) {\n                                return 'rgba(var(--color-theme),0.05)';\n                            }\n                          return 'rgba(var(--color-' + color + '),0.2)';\n                        }\n\n                        if (typeof entity !== \"undefined\") {\n                          if (states[entity.entity_id].state != \"closed\") {\n                              return 'rgba(var(--color-' + color + '),0.2)';\n                          }\n                          return 'rgba(var(--color-theme),0.05)';\n                        }\n                      ]]]\n          item2:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              variables: &gt;\n                [[[\n                  let vars = variables;\n                  if(variables.ulm_card_cover_enable_popup) {\n                    vars.ulm_custom_popup = {\n                      'template': 'popup_cover'\n                    };\n                  }\n                  return vars;\n                ]]]\n              name: \"[[[ return variables.ulm_card_cover_name ]]]\"\n              label: &gt;\n                [[[\n                  var position = states[entity.entity_id]?.attributes?.current_position;\n                  var invert = {\n                    \"closed\": hass.resources[hass['language']]['component.cover.state._.open'],\n                    \"closing\": hass.resources[hass['language']]['component.cover.state._.opening'],\n                    \"open\": hass.resources[hass['language']]['component.cover.state._.closed'],\n                    \"opening\": hass.resources[hass['language']]['component.cover.state._.closing']\n                  };\n\n                  if ((variables.ulm_card_invert_percent || variables.ulm_card_cover_invert_percent) &amp;&amp; typeof entity !== \"undefined\") {\n                    if (position == 0) {\n                      return invert[entity.state] + \" \u2022 \" + (100 - position) + \"%\";\n                    } else {\n                      return invert[entity.state];\n                    }\n                  }\n\n                  if([\"unknown\", \"unavailable\", \"closed\"].includes(entity.state)  || position === undefined) {\n                    return variables.ulm_translation_state;\n                  }\n\n                  if (typeof entity !== \"undefined\") {\n                    if (entity == 0) {\n                      return variables.ulm_translation_state;\n                    } else {\n                      return variables.ulm_translation_state + \" \u2022 \" + position + \"%\";\n                    }\n                  }\n                  return variables.ulm_translation_state;\n                ]]]\n              show_last_changed: \"[[[ return variables.ulm_card_cover_show_last_changed; ]]]\"\n              state:\n                - operator: \"template\"\n                  value: \"[[[ return variables.ulm_active_state ]]]\"\n                  styles:\n                    name:\n                      - color: &gt;\n                          [[[\n                              if (variables.ulm_card_cover_force_background_color) {\n                                  return 'rgb(250,250,250)';\n                              }\n                          ]]]\n                    label:\n                      - color: &gt;\n                          [[[\n                              if (variables.ulm_card_cover_force_background_color) {\n                                  return 'rgb(250,250,250)';\n                              }\n                          ]]]\n    item2:\n      card:\n        type: \"custom:button-card\"\n        template: \"[[[ return (variables.ulm_card_cover_favorite_percentage) ? 'list_4_items' : 'list_3_items' ]]]\"\n        styles:\n          card:\n            - background: \"none\"\n          custom_fields:\n            item4:\n              - display: &gt;\n                  [[[\n                    if (variables.ulm_card_cover_favorite_percentage) {\n                        return \"block\";\n                    } else {\n                        return \"none\";\n                    }\n                  ]]]\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              styles:\n                card:\n                  - background-color: &gt;\n                      [[[\n                        if(!hass.themes.darkMode &amp;&amp; variables.ulm_card_cover_force_background_color){\n                          if (variables.ulm_active_state){\n                            return 'rgb(250,250,250)'\n                          }\n                        }\n                        return 'rgba(var(--color-theme),0.05)'\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        if (variables.ulm_card_cover_force_background_color &amp;&amp; variables.ulm_active_state) {\n                          var color = variables.ulm_card_cover_color;\n                          return 'rgba(var(--color-' + color + '),0.2)';\n                        }\n                        return 'rgba(var(--color-theme),0.05)';\n                      ]]]\n                icon:\n                  - color: &gt;\n                      [[[\n                        if (variables.ulm_card_cover_force_background_color &amp;&amp; variables.ulm_active_state) {\n                          var color = variables.ulm_card_cover_color;\n                          return 'rgba(var(--color-' + color + '),1)';\n                        }\n                        return 'rgba(var(--color-theme),0.9)';\n                      ]]]\n              state:\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return entity.attributes.current_position == \"0\";\n                    ]]]\n                  styles:\n                    icon:\n                      - color: \"rgba(var(--color-theme),0.4)\"\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return entity.state == \"closing\";\n                    ]]]\n                  styles:\n                    icon:\n                      - color: \"rgba(var(--color-theme),0.4)\"\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return entity.state == \"opening\";\n                    ]]]\n                  styles:\n                    icon:\n                      - color: \"rgba(var(--color-theme),0.4)\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"cover.close_cover\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n              icon: &gt;\n                [[[\n                  if (variables.ulm_card_cover_display_left_right) {\n                      return \"mdi:arrow-left\";\n                  }\n                  var device_class = entity.attributes?.device_class;\n                  if (device_class == 'curtain' || device_class == 'gate' || device_class == 'awning') {\n                      return \"mdi:arrow-collapse-horizontal\";\n                  }\n                  return \"mdi:arrow-down\";\n                ]]]\n          item2:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              styles:\n                card:\n                  - background-color: &gt;\n                      [[[\n                        if(!hass.themes.darkMode &amp;&amp; variables.ulm_card_cover_force_background_color){\n                          if (variables.ulm_active_state){\n                            return 'rgb(250,250,250)'\n                          }\n                        }\n                        return 'rgba(var(--color-theme),0.05)'\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        if (variables.ulm_card_cover_force_background_color &amp;&amp; variables.ulm_active_state) {\n                          var color = variables.ulm_card_cover_color;\n                          return 'rgba(var(--color-' + color + '),0.2)';\n                        }\n                        return 'rgba(var(--color-theme),0.05)';\n                      ]]]\n                icon:\n                  - color: &gt;\n                      [[[\n                        if (variables.ulm_card_cover_force_background_color &amp;&amp; variables.ulm_active_state) {\n                          var color = variables.ulm_card_cover_color;\n                          return 'rgba(var(--color-' + color + '),1)';\n                        }\n                        return 'rgba(var(--color-theme),0.9)';\n                      ]]]\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"cover.stop_cover\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n              icon: \"mdi:stop\"\n          item3:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              styles:\n                card:\n                  - background-color: &gt;\n                      [[[\n                        if(!hass.themes.darkMode &amp;&amp; variables.ulm_card_cover_force_background_color){\n                          if (variables.ulm_active_state){\n                            return 'rgb(250,250,250)'\n                          }\n                        }\n                        return 'rgba(var(--color-theme),0.05)'\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        if (variables.ulm_card_cover_force_background_color &amp;&amp; variables.ulm_active_state) {\n                          var color = variables.ulm_card_cover_color;\n                          return 'rgba(var(--color-' + color + '),0.2)';\n                        }\n                        return 'rgba(var(--color-theme),0.05)';\n                      ]]]\n                icon:\n                  - color: &gt;\n                      [[[\n                        if (variables.ulm_card_cover_force_background_color &amp;&amp; variables.ulm_active_state) {\n                          var color = variables.ulm_card_cover_color;\n                          return 'rgba(var(--color-' + color + '),1)';\n                        }\n                        return 'rgba(var(--color-theme),0.9)';\n                      ]]]\n              state:\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return entity.attributes.current_position == \"100\";\n                    ]]]\n                  styles:\n                    icon:\n                      - color: \"rgba(var(--color-theme),0.4)\"\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return entity.state == \"closing\";\n                    ]]]\n                  styles:\n                    icon:\n                      - color: \"rgba(var(--color-theme),0.4)\"\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return entity.state == \"opening\";\n                    ]]]\n                  styles:\n                    icon:\n                      - color: \"rgba(var(--color-theme),0.4)\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"cover.open_cover\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n              icon: &gt;-\n                [[[\n                  if (variables.ulm_card_cover_display_left_right) {\n                      return \"mdi:arrow-right\";\n                  }\n                  var device_class = entity.attributes?.device_class;\n                  if (device_class == 'curtain' || device_class == 'gate' || device_class == 'awning') {\n                      return \"mdi:arrow-expand-horizontal\";\n                  }\n                  return \"mdi:arrow-up\";\n                ]]]\n          item4:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              styles:\n                card:\n                  - background-color: &gt;\n                      [[[\n                        if(!hass.themes.darkMode &amp;&amp; variables.ulm_card_cover_force_background_color){\n                          if (variables.ulm_active_state){\n                            return 'rgb(250,250,250)'\n                          }\n                        }\n                        return 'rgba(var(--color-theme),0.05)'\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        if (variables.ulm_card_cover_force_background_color &amp;&amp; variables.ulm_active_state) {\n                          var color = variables.ulm_card_cover_color;\n                          return 'rgba(var(--color-' + color + '),0.2)';\n                        }\n                        return 'rgba(var(--color-theme),0.05)';\n                      ]]]\n                icon:\n                  - color: &gt;\n                      [[[\n                        if (variables.ulm_card_cover_force_background_color &amp;&amp; variables.ulm_active_state) {\n                          var color = variables.ulm_card_cover_color;\n                          return 'rgba(var(--color-' + color + '),1)';\n                        }\n                        return 'rgba(var(--color-theme),0.9)';\n                      ]]]\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"cover.set_cover_position\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n                data:\n                  position: \"[[[ return variables.ulm_card_cover_favorite_percentage ]]]\"\n              icon: \"mdi:star\"\n    item3:\n      card:\n        type: \"custom:my-slider\"\n        entity: \"[[[ return entity.entity_id ]]]\"\n        radius: \"14px\"\n        height: \"42px\"\n        minSet: \"[[[ return variables.ulm_card_cover_slider_min ]]]\"\n        maxSet: \"[[[ return variables.ulm_card_cover_slider_max ]]]\"\n        mainSliderColor: &gt;\n          [[[\n            var color = variables.ulm_card_cover_color;\n            if (variables.ulm_card_invert_percent || variables.ulm_card_cover_invert_percent) {\n                if (entity.attributes.current_position == 100) {\n                    return 'rgba(var(--color-theme),0.05)';\n                }\n              if (variables.ulm_card_cover_force_background_color) {\n                return 'rgb(250,250,250)';\n              }\n              return 'rgba(var(--color-' + color + '),0.8)';\n            }\n\n            if (typeof entity !== \"undefined\") {\n              if (states[entity.entity_id].state != \"closed\") {\n                if (variables.ulm_card_cover_force_background_color) {\n                  return 'rgb(250,250,250)';\n                }\n                return 'rgba(var(--color-' + color + '),0.8)';\n              }\n              return 'rgba(var(--color-theme),0.05)';\n            }\n          ]]]\n        secondarySliderColor: &gt;\n          [[[\n            var color = variables.ulm_card_cover_color;\n            if (variables.ulm_card_invert_percent || variables.ulm_card_cover_invert_percent) {\n                if (entity.attributes.current_position == 100) {\n                    return 'rgba(var(--color-theme),0.05)';\n                }\n              if (variables.ulm_card_cover_force_background_color) {\n                return 'rgba(var(--color-' + color + '),0.3)';\n              }\n              return 'rgba(var(--color-' + color + '),0.1)';\n            }\n\n            if (typeof entity !== \"undefined\") {\n              if (states[entity.entity_id].state != \"closed\") {\n                if (variables.ulm_card_cover_force_background_color) {\n                  return 'rgba(var(--color-' + color + '),0.3)';\n                }\n                return 'rgba(var(--color-' + color + '),0.1)';\n              }\n              return 'rgba(var(--color-theme),0.05)';\n            }\n          ]]]\n        mainSliderColorOff: \"rgba(var(--color-theme),0.05)\"\n        secondarySliderColorOff: \"rgba(var(--color-theme),0.05)\"\n        thumbHorizontalPadding: \"0px\"\n        thumbVerticalPadding: \"0px\"\n        thumbWidth: \"0px\"\n        card_mod:\n          style: |\n            ha-card {\n              border-radius: 14px;\n              box-shadow: none;\n            }\n    item4:\n      card:\n        type: \"custom:button-card\"\n        template: \"list_3_items\"\n        styles:\n          card:\n            - background: \"none\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              styles:\n                card:\n                  - background-color: &gt;\n                      [[[\n                        if(!hass.themes.darkMode &amp;&amp; variables.ulm_card_cover_force_background_color){\n                          if (variables.ulm_active_state){\n                            return 'rgb(250,250,250)'\n                          }\n                        }\n                        return 'rgba(var(--color-theme),0.05)'\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        if (variables.ulm_card_cover_force_background_color &amp;&amp; variables.ulm_active_state) {\n                          var color = variables.ulm_card_cover_color;\n                          return 'rgba(var(--color-' + color + '),0.2)';\n                        }\n                        return 'rgba(var(--color-theme),0.05)';\n                      ]]]\n                icon:\n                  - color: &gt;\n                      [[[\n                        if (variables.ulm_card_cover_force_background_color &amp;&amp; variables.ulm_active_state) {\n                          var color = variables.ulm_card_cover_color;\n                          return 'rgba(var(--color-' + color + '),1)';\n                        }\n                        return 'rgba(var(--color-theme),0.9)';\n                      ]]]\n              state:\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return entity.attributes.current_tilt_position == \"0\";\n                    ]]]\n                  styles:\n                    icon:\n                      - color: \"rgba(var(--color-theme),0.4)\"\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return entity.state == \"closing\";\n                    ]]]\n                  styles:\n                    icon:\n                      - color: \"rgba(var(--color-theme),0.4)\"\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return entity.state == \"opening\";\n                    ]]]\n                  styles:\n                    icon:\n                      - color: \"rgba(var(--color-theme),0.4)\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"cover.close_cover_tilt\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n              icon: \"mdi:arrow-bottom-left\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              styles:\n                card:\n                  - background-color: &gt;\n                      [[[\n                        if(!hass.themes.darkMode &amp;&amp; variables.ulm_card_cover_force_background_color){\n                          if (variables.ulm_active_state){\n                            return 'rgb(250,250,250)'\n                          }\n                        }\n                        return 'rgba(var(--color-theme),0.05)'\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        if (variables.ulm_card_cover_force_background_color &amp;&amp; variables.ulm_active_state) {\n                          var color = variables.ulm_card_cover_color;\n                          return 'rgba(var(--color-' + color + '),0.2)';\n                        }\n                        return 'rgba(var(--color-theme),0.05)';\n                      ]]]\n                icon:\n                  - color: &gt;\n                      [[[\n                        if (variables.ulm_card_cover_force_background_color &amp;&amp; variables.ulm_active_state) {\n                          var color = variables.ulm_card_cover_color;\n                          return 'rgba(var(--color-' + color + '),1)';\n                        }\n                        return 'rgba(var(--color-theme),0.9)';\n                      ]]]\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"cover.stop_cover_tilt\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n              icon: \"mdi:stop\"\n          item3:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              styles:\n                card:\n                  - background-color: &gt;\n                      [[[\n                        if(!hass.themes.darkMode &amp;&amp; variables.ulm_card_cover_force_background_color){\n                          if (variables.ulm_active_state){\n                            return 'rgb(250,250,250)'\n                          }\n                        }\n                        return 'rgba(var(--color-theme),0.05)'\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        if (variables.ulm_card_cover_force_background_color &amp;&amp; variables.ulm_active_state) {\n                          var color = variables.ulm_card_cover_color;\n                          return 'rgba(var(--color-' + color + '),0.2)';\n                        }\n                        return 'rgba(var(--color-theme),0.05)';\n                      ]]]\n                icon:\n                  - color: &gt;\n                      [[[\n                        if (variables.ulm_card_cover_force_background_color &amp;&amp; variables.ulm_active_state) {\n                          var color = variables.ulm_card_cover_color;\n                          return 'rgba(var(--color-' + color + '),1)';\n                        }\n                        return 'rgba(var(--color-theme),0.9)';\n                      ]]]\n              state:\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return entity.attributes.current_tilt_position == \"100\";\n                    ]]]\n                  styles:\n                    icon:\n                      - color: \"rgba(var(--color-theme),0.4)\"\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return entity.state == \"closing\";\n                    ]]]\n                  styles:\n                    icon:\n                      - color: \"rgba(var(--color-theme),0.4)\"\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return entity.state == \"opening\";\n                    ]]]\n                  styles:\n                    icon:\n                      - color: \"rgba(var(--color-theme),0.4)\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"cover.open_cover_tilt\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n              icon: \"mdi:arrow-top-right\"\n</code></pre>"},{"location":"usage/cards/card_fan/","title":"Fan Card","text":""},{"location":"usage/cards/card_fan/#description","title":"Description","text":"<p>This is the <code>fan-card</code>, used to toggle a fan entity. Shows state of the fan and, if available, percentage and humidity in %.</p> <p>This is a new card based off of the Sexel Fan Custom Card. Rather than deprecate and many breaking changes on that card for users, this new card can be used as an alternative.</p>"},{"location":"usage/cards/card_fan/#light-theme","title":"Light theme","text":""},{"location":"usage/cards/card_fan/#dark-theme","title":"Dark theme","text":""},{"location":"usage/cards/card_fan/#variables","title":"Variables","text":"Variable Example Required Explanation entity fan.smart_fan yes Fan entity ulm_card_fan_name Fan no Name to show. If not specified the attribute friendly_name is shown instead ulm_card_fan_icon Fan no Icon to show. If not specified the attribute icon is shown instead ulm_card_fan_enable_horizontal true no true/false if the card should be horizontal. Default: false ulm_card_fan_enable_collapse true no true/false if the fan speed row should collapse when the fan is turned off. Default: false ulm_card_fan_color blue no Custom Color for the Card. default: \"blue\" ulm_card_fan_force_background_color true no true/false if the card should force the background color, not just in dark mode.\" ulm_card_fan_enable_button true no true/false if the card should show a button next to the slider for turning Oscillation on/off.\""},{"location":"usage/cards/card_fan/#others","title":"Others","text":"<pre><code>ulm_card_fan_enable_slider: false\nulm_card_fan_slider_min: 0\nulm_card_fan_slider_max: 100\nulm_card_fan_enable_button: false\nulm_card_fan_temp_attribute: \"temp\"\nulm_card_fan_hum_attribute: \"hum\"\n</code></pre>"},{"location":"usage/cards/card_fan/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: card_fan\n  entity: fan.bedroom\n  variables:\n    ulm_card_fan_enable_slider: true\n    ulm_card_fan_color: \"blue\"\n    ulm_card_fan_force_background_color: true\n</code></pre> Template Code card_fan.yaml<pre><code>---\n### Card Fan ###\ncard_fan:\n  template:\n    - \"icon_more_info_new\"\n    - \"ulm_translation_engine\"\n  variables:\n    ulm_card_fan_name: \"[[[ return entity.attributes.friendly_name ]]]\"\n    ulm_card_fan_icon: \"[[[ return entity.attributes.icon ]]]\"\n    ulm_card_fan_enable_horizontal: false\n    ulm_card_fan_color: \"blue\"\n    ulm_card_fan_force_background_color: false\n    ulm_card_fan_enable_collapse: false\n    ulm_card_fan_enable_slider: false\n    ulm_card_fan_slider_min: 0\n    ulm_card_fan_slider_max: 100\n    ulm_card_fan_enable_button: false\n    ulm_card_fan_button_icon: \"mdi:rotate-3d-variant\"\n    ulm_card_fan_button_service: \"fan.oscillate\"\n    ulm_card_fan_oscillate_attribute: \"oscillate\"\n    ulm_card_fan_temp_attribute: false\n    ulm_card_fan_hum_attribute: false\n  show_icon: false\n  show_name: false\n  show_label: false\n  state:\n    - operator: \"template\"\n      value: \"[[[ return variables.ulm_active_state ]]]\"\n      styles:\n        card:\n          - background-color: &gt;\n              [[[\n                  if (variables.ulm_card_fan_color) {\n                    if (variables.ulm_card_fan_force_background_color) {\n                      var color = variables.ulm_card_fan_color;\n                      return 'rgba(var(--color-' + color + '),var(--opacity-bg))';\n                    }\n                  }\n              ]]]\n  styles:\n    grid:\n      - grid-template-areas: &gt;\n          [[[\n            if (variables.ulm_card_fan_enable_collapse &amp;&amp; entity.state != \"on\") {\n              return \"\\\"item1\\\"\";\n            }\n\n            var areas = [];\n            areas.push(\"item1\");\n            if (variables.ulm_card_fan_enable_slider) {\n              areas.push(\"item2\");\n            }\n\n            if (variables.ulm_card_fan_enable_horizontal) {\n              return \"\\\"\" + areas.join(\" \") + \"\\\"\";\n            }\n            return \"\\\"\" + areas.join(\"\\\" \\\"\") + \"\\\"\";\n          ]]]\n      - grid-template-columns: &gt;\n          [[[\n            if (variables.ulm_card_fan_enable_collapse &amp;&amp; entity.state != \"on\") {\n              return \"1fr\";\n            }\n            if (variables.ulm_card_fan_enable_horizontal) {\n              return \"1fr 1fr\";\n            }\n            return \"1fr\";\n          ]]]\n      - grid-template-rows: &gt;\n          [[[\n            if (variables.ulm_card_fan_enable_horizontal || (variables.ulm_card_fan_enable_collapse &amp;&amp; entity.state != \"on\")) {\n              return \"min-content\";\n            }\n\n            var rows = [];\n            rows.push(\"min-content\");\n            if (variables.ulm_card_fan_enable_slider) {\n                rows.push(\"min-content\");\n            }\n            return rows.join(\" \");\n          ]]]\n      - row-gap: \"12px\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n    custom_fields:\n      item2:\n        - display: &gt;\n            [[[\n                if (variables.ulm_card_fan_enable_collapse &amp;&amp; entity.state != \"on\") {\n                    return \"none\";\n                } else if (variables.ulm_card_fan_enable_slider) {\n                    return \"block\";\n                } else {\n                    return \"none\";\n                }\n            ]]]\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              icon: \"[[[ return variables.ulm_card_fan_icon ]]]\"\n              styles:\n                icon:\n                  - color: &gt;\n                      [[[\n                          if (entity.state == \"on\") {\n                            if (variables.ulm_card_fan_color) {\n                              var color = variables.ulm_card_fan_color;\n                              return 'rgba(var(--color-' + color + '),1)';\n                            }\n                            return 'rgba(var(--color-theme),1)';\n                          }\n                          return 'rgba(var(--color-theme),0.2)';\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                          if (entity.state == \"on\") {\n                            if (variables.ulm_card_fan_color) {\n                              var color = variables.ulm_card_fan_color;\n                              return 'rgba(var(--color-' + color + '),0.2)';\n                            }\n                          }\n                          return 'rgba(var(--color-theme),0.05)';\n                      ]]]\n          item2:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              name: \"[[[ return variables.ulm_card_fan_name ]]]\"\n              label: &gt;\n                [[[\n                    if (entity.state == 'unavailable') {\n                      return variables.ulm_translation_unavailable;\n                    }\n\n                    let temp_str = '';\n                    if (variables.ulm_card_fan_temp_attribute) {\n                        var temp = Math.round(entity.attributes[variables.ulm_card_fan_temp_attribute]);\n                        temp_str = ' \u2022 ' + (temp ? temp : '0') + '\u00b0C';\n                    }\n                    let hum_str = '';\n                    if (variables.ulm_card_fan_hum_attribute) {\n                        var hum = Math.round(entity.attributes[variables.ulm_card_fan_hum_attribute]);\n                        hum_str = ' \u2022 ' + (hum ? hum : '0') + '%';\n                    }\n\n                    if (entity.state != 'off') {\n                      if (entity.attributes.percentage != null) {\n                        var per = entity.attributes.percentage;\n                        let per_str = (per ? per : '0') + '%';\n                        return per_str + temp_str + hum_str;\n                      }\n                      return variables.ulm_translation_on + temp_str + hum_str;\n                    }\n                    return variables.ulm_translation_off + temp_str + hum_str;\n                ]]]\n              state:\n                - operator: \"template\"\n                  value: \"[[[ return variables.ulm_active_state ]]]\"\n                  styles:\n                    name:\n                      - color: &gt;\n                          [[[\n                              if (variables.ulm_card_fan_force_background_color) {\n                                  return 'rgb(250,250,250)';\n                              }\n                          ]]]\n                    label:\n                      - color: &gt;\n                          [[[\n                              if (variables.ulm_card_fan_force_background_color) {\n                                  return 'rgb(250,250,250)';\n                              }\n                          ]]]\n    item2:\n      card:\n        type: \"custom:button-card\"\n        template: \"list_one_third_items\"\n        styles:\n          card:\n            - background: \"none\"\n            - overflow: \"visible\"\n          grid:\n            - grid-template-areas: &gt;\n                [[[\n                    if (variables.ulm_card_fan_enable_button) {\n                      return \"'slider button'\";\n                    }\n                    return \"'slider'\";\n                ]]]\n            - grid-template-columns: &gt;\n                [[[\n                    if (variables.ulm_card_fan_enable_button) {\n                      return \"2fr 1fr\";\n                    }\n                    return \"1fr\";\n                ]]]\n          custom_fields:\n            button:\n              - display: &gt;\n                  [[[\n                    if (variables.ulm_card_fan_enable_button) {\n                        return \"block\";\n                    }\n                    return \"none\";\n                  ]]]\n        custom_fields:\n          slider:\n            card:\n              type: \"custom:my-slider\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              radius: \"14px\"\n              height: \"42px\"\n              minSet: \"[[[ return variables.ulm_card_fan_slider_min ]]]\"\n              maxSet: \"[[[ return variables.ulm_card_fan_slider_max ]]]\"\n              mainSliderColor: &gt;\n                [[[\n                  var color = variables.ulm_card_fan_color;\n\n                  if (entity.state == \"on\") {\n                    if (variables.ulm_card_fan_force_background_color) {\n                      return 'rgb(250,250,250)';\n                    }\n                    return 'rgba(var(--color-' + color + '),0.8)';\n                  }\n                    return \"rgba(var(--color-grey),0.8)\";\n                ]]]\n              secondarySliderColor: &gt;\n                [[[\n                  var color = variables.ulm_card_fan_color;\n                  if (entity.state == \"on\") {\n                    if (variables.ulm_card_fan_force_background_color) {\n                      return 'rgba(var(--color-' + color + '),0.3)';\n                    }\n                    return 'rgba(var(--color-' + color + '),0.1)';\n                  }\n                  return \"rgba(var(--color-grey),0.1)\";\n                ]]]\n              mainSliderColorOff: \"rgba(var(--color-theme),0.05)\"\n              secondarySliderColorOff: \"rgba(var(--color-theme),0.05)\"\n              thumbHorizontalPadding: \"0px\"\n              thumbVerticalPadding: \"0px\"\n              thumbWidth: \"0px\"\n              card_mod:\n                style: |\n                  ha-card {\n                    border-radius: 14px;\n                    box-shadow: none;\n                  }\n          button:\n            card:\n              type: \"custom:button-card\"\n              template:\n                - \"widget_icon\"\n              icon: \"[[[ return variables.ulm_card_fan_button_icon ]]]\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"[[[ return variables.ulm_card_fan_button_service ]]]\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n                data:\n                  oscillating: \"[[[ return !entity.attributes[variables.ulm_card_fan_oscillate_attribute] ]]]\"\n              state:\n                - operator: \"template\"\n                  value: \"[[[ return entity.state === 'on' &amp;&amp; !entity.attributes[variables.ulm_card_fan_oscillate_attribute]; ]]]\"\n                  styles:\n                    card:\n                      - background-color: &gt;\n                          [[[\n                            if(!hass.themes.darkMode &amp;&amp; variables.ulm_card_light_force_background_color){\n                              return 'rgb(250,250,250)'\n                            }\n                          ]]]\n                    img_cell:\n                      - background-color: &gt;\n                          [[[\n                            var color = variables.ulm_card_fan_color;\n                            if (variables.ulm_card_fan_force_background_color) {\n                              return 'rgba(var(--color-' + color + '),0.2)';\n                            }\n                              return 'rgba(var(--color-theme),0.05)';\n                          ]]]\n                    icon:\n                      - color: &gt;\n                          [[[\n                            var color = variables.ulm_card_fan_color;\n                            if (variables.ulm_card_fan_force_background_color) {\n                              return 'rgba(var(--color-' + color + '),1)';\n                            }\n                              return 'rgba(var(--color-theme),0.9)';\n                          ]]]\n                - operator: \"template\"\n                  value: \"[[[ return entity.state === 'on' &amp;&amp; entity.attributes[variables.ulm_card_fan_oscillate_attribute]; ]]]\"\n                  styles:\n                    img_cell:\n                      - background-color: &gt;\n                          [[[\n                            var color = variables.ulm_card_fan_color;\n                            if (variables.ulm_card_fan_force_background_color) {\n                              return 'rgba(250, 250, 250, 1)';\n                            }\n                              return 'rgba(var(--color-' + color + '),0.2)';\n                          ]]]\n                    icon:\n                      - color: &gt;\n                          [[[\n                            var color = variables.ulm_card_fan_color;\n                            return 'rgba(var(--color-' + color + '),1)'\n                          ]]]\n</code></pre>"},{"location":"usage/cards/card_generic/","title":"Generic Card","text":""},{"location":"usage/cards/card_generic/#description","title":"Description","text":"<p>This is the <code>generic-card</code> to display values from a sensor, eg. to show humidity, your next waste collection date or whatever sensor value is provided.</p>"},{"location":"usage/cards/card_generic/#variables","title":"Variables","text":"Variable Default Required Notes entity ulm_card_generic_name Set custom Name ulm_card_generic_icon Set custom Icon ulm_card_generic_color <code>blue</code> Set Custom Color ulm_card_generic_force_background_color <code>false</code> Set <code>ulm_card_generic_color</code> as background color in active state `"},{"location":"usage/cards/card_generic/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: card_generic\n  entity: sensor.next_waste_collection\n</code></pre> Template Code card_generic.yaml<pre><code>---\n### Card Generic ###\ncard_generic:\n  template:\n    - \"icon_more_info_new\"\n    - \"ulm_translation_engine\"\n  variables:\n    ulm_card_generic_icon: \"[[[ return entity.attributes.icon ]]]\"\n    ulm_card_generic_name: \"[[[ return entity.attributes.friendly_name ]]]\"\n    ulm_outlet_power_enable_popup: false\n    ulm_card_generic_color: \"blue\"\n    ulm_card_generic_force_background_color: false\n  triggers_update: \"all\"\n  state:\n    - operator: \"template\"\n      value: \"[[[ return variables.ulm_active_state ]]]\"\n      styles:\n        card:\n          - background-color: &gt;\n              [[[\n                if (variables.ulm_card_generic_force_background_color) {\n                  var color = variables.ulm_card_generic_color;\n                  return 'rgba(var(--color-' + color + '),var(--opacity-bg))';\n                }\n              ]]]\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              icon: \"[[[ return variables.ulm_card_generic_icon; ]]]\"\n              variables: &gt;\n                [[[\n                  let vars = variables;\n\n                  if(variables.ulm_outlet_power_enable_popup) {\n                    vars.ulm_custom_popup = {\n                      'template': 'popup_power_outlet_stats',\n                      'popup_variables': {\n                        'ulm_popup_power_outlet_sensor1': variables.ulm_popup_power_outlet_sensor1,\n                        'ulm_popup_power_outlet_sensor2': variables.ulm_popup_power_outlet_sensor2,\n                        'ulm_popup_power_outlet_graph_sensor': variables.ulm_popup_power_outlet_graph_sensor\n                      }\n                    };\n                  }\n                  return vars;\n                ]]]\n              styles:\n                icon:\n                  - color: &gt;\n                      [[[\n                        var color = variables.ulm_card_generic_color;\n                        if (variables.ulm_active_state){\n                          return 'rgba(var(--color-' + color + '),1)';\n                        }\n                        return 'rgba(var(--color-theme),0.2)';\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        var color = variables.ulm_card_generic_color;\n                        if (variables.ulm_active_state){\n                          return 'rgba(var(--color-' + color + '),0.2)';\n                        }\n                        return 'rgba(var(--color-theme),0.05)';\n                      ]]]\n          item2:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              name: \"[[[ return variables.ulm_translation_state ]]]\"\n              label: \"[[[ return variables.ulm_card_generic_name ]]]\"\n              variables: &gt;\n                [[[\n                  let vars = variables;\n\n                  if(variables.ulm_outlet_power_enable_popup) {\n                    vars.ulm_custom_popup = {\n                      'template': 'popup_power_outlet_stats',\n                      'popup_variables': {\n                        'ulm_popup_power_outlet_sensor1': variables.ulm_popup_power_outlet_sensor1,\n                        'ulm_popup_power_outlet_sensor2': variables.ulm_popup_power_outlet_sensor2,\n                        'ulm_popup_power_outlet_graph_sensor': variables.ulm_popup_power_outlet_graph_sensor\n                      }\n                    };\n                  }\n                  return vars;\n                ]]]\n              state:\n                - operator: \"template\"\n                  value: \"[[[ return variables.ulm_active_state ]]]\"\n                  styles:\n                    name:\n                      - color: &gt;\n                          [[[\n                              if (variables.ulm_card_generic_force_background_color) {\n                                  return 'rgb(250,250,250)';\n                              }\n                          ]]]\n                    label:\n                      - color: &gt;\n                          [[[\n                              if (variables.ulm_card_generic_force_background_color) {\n                                  return 'rgb(250,250,250)';\n                              }\n                          ]]]\n</code></pre>"},{"location":"usage/cards/card_generic_swap/","title":"Generic Swap Card","text":""},{"location":"usage/cards/card_generic_swap/#description","title":"Description","text":"<p>This is a <code>generic-card</code> with swapped label and name.</p>"},{"location":"usage/cards/card_generic_swap/#variables","title":"Variables","text":"Variable Default Required Notes entity ulm_card_generic_swap_name Set custom Name ulm_card_generic_swap_icon Set custom Icon ulm_card_generic_swap_color <code>blue</code> Set Custom Color ulm_card_generic_swap_force_background_color <code>false</code> Set <code>ulm_card_generic_swap_color</code> as background color in active state `"},{"location":"usage/cards/card_generic_swap/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: card_generic_swap\n  entity: sensor.next_waste_collection\n</code></pre> Template Code card_generic_swap.yaml<pre><code>---\n### Card Generic Swap ###\ncard_generic_swap:\n  template:\n    - \"icon_more_info_new\"\n    - \"ulm_translation_engine\"\n  variables:\n    ulm_card_generic_swap_icon: \"[[[ return entity.attributes.icon ]]]\"\n    ulm_card_generic_swap_name: \"[[[ return entity.attributes.friendly_name ]]]\"\n    ulm_outlet_power_enable_popup: false\n    ulm_card_generic_swap_color: \"blue\"\n    ulm_card_generic_swap_force_background_color: false\n  triggers_update: \"all\"\n  state:\n    - operator: \"template\"\n      value: \"[[[ return variables.ulm_active_state ]]]\"\n      styles:\n        card:\n          - background-color: &gt;\n              [[[\n                if (variables.ulm_card_generic_swap_force_background_color) {\n                  var color = variables.ulm_card_generic_swap_color;\n                  return 'rgba(var(--color-' + color + '),var(--opacity-bg))';\n                }\n              ]]]\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              icon: \"[[[ return variables.ulm_card_generic_swap_icon; ]]]\"\n              variables: &gt;\n                [[[\n                  let vars = variables;\n\n                  if(variables.ulm_outlet_power_enable_popup) {\n                    vars.ulm_custom_popup = {\n                      'template': 'popup_power_outlet_stats',\n                      'popup_variables': {\n                        'ulm_popup_power_outlet_sensor1': variables.ulm_popup_power_outlet_sensor1,\n                        'ulm_popup_power_outlet_sensor2': variables.ulm_popup_power_outlet_sensor2,\n                        'ulm_popup_power_outlet_graph_sensor': variables.ulm_popup_power_outlet_graph_sensor\n                      }\n                    };\n                  }\n                  return vars;\n                ]]]\n              styles:\n                icon:\n                  - color: &gt;\n                      [[[\n                        var color = variables.ulm_card_generic_swap_color;\n                        if (variables.ulm_active_state){\n                          return 'rgba(var(--color-' + color + '),1)';\n                        }\n                        return 'rgba(var(--color-theme),0.2)';\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        var color = variables.ulm_card_generic_swap_color;\n                        if (variables.ulm_active_state){\n                          return 'rgba(var(--color-' + color + '),0.2)';\n                        }\n                        return 'rgba(var(--color-theme),0.05)';\n                      ]]]\n          item2:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              label: \"[[[ return variables.ulm_translation_state ]]]\"\n              name: \"[[[ return variables.ulm_card_generic_swap_name ]]]\"\n              variables: &gt;\n                [[[\n                  let vars = variables;\n\n                  if(variables.ulm_outlet_power_enable_popup) {\n                    vars.ulm_custom_popup = {\n                      'template': 'popup_power_outlet_stats',\n                      'popup_variables': {\n                        'ulm_popup_power_outlet_sensor1': variables.ulm_popup_power_outlet_sensor1,\n                        'ulm_popup_power_outlet_sensor2': variables.ulm_popup_power_outlet_sensor2,\n                        'ulm_popup_power_outlet_graph_sensor': variables.ulm_popup_power_outlet_graph_sensor\n                      }\n                    };\n                  }\n                  return vars;\n                ]]]\n              state:\n                - operator: \"template\"\n                  value: \"[[[ return variables.ulm_active_state ]]]\"\n                  styles:\n                    name:\n                      - color: &gt;\n                          [[[\n                              if (variables.ulm_card_generic_swap_force_background_color) {\n                                  return 'rgb(250,250,250)';\n                              }\n                          ]]]\n                    label:\n                      - color: &gt;\n                          [[[\n                              if (variables.ulm_card_generic_swap_force_background_color) {\n                                  return 'rgb(250,250,250)';\n                              }\n                          ]]]\n</code></pre>"},{"location":"usage/cards/card_graph/","title":"Graph Card","text":""},{"location":"usage/cards/card_graph/#description","title":"Description","text":"<p>The <code>card_graph</code> shows an entity with the actual state and a min-graph-card integrated. This can be used for a thermostat to show the actual temperature and the history. It now supports dual graphs as well as bar style graphs.</p>"},{"location":"usage/cards/card_graph/#variables","title":"Variables","text":"Variable Default Required Notes entity Your entity_id for the temperature sensor ulm_card_graph_color This is to adjust your color value. Use a CSS variable from HA or set a color value (eg. #FFFFFF) ulm_card_graph_name Set graph name ulm_card_graph_icon Set custom icon ulm_card_graph_entity Your entity_id for the temperature sensor ulm_card_graph_entity2 Your entity_id for the second temperature sensor ulm_card_graph_color2 This is to adjust your color value of the second graph. Use a CSS variable from HA or set a color value (eg. #FFFFFF) ulm_card_graph_type fill This is to change the appearance of the graph. Default is fill, but line, bar are valid options. ulm_card_graph_hours 24 How much time should the graph cover, default is 24 hours. ulm_card_graph_points 0.5 Specify amount of data points the graph should display for each hour. A larger number results in a more detailed graph. ulm_card_graph_group_by interval Specify type of grouping of data, dynamic interval, date or hour. ulm_card_graph_line_width 5 Set the thickness of the line."},{"location":"usage/cards/card_graph/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: card_graph\n  entity: sensor.livingroom_temperature\n  variables:\n    ulm_card_graph_color: \"var(--google-blue)\"\n    ulm_card_graph_name: Temperature Livingroom\n    ulm_card_graph_entity: sensor.livingroom_temperature\n    ulm_card_graph_color2: \"var(--google-green)\"\n    ulm_card_graph_entity2: sensor.bedroom_temperature\n    ulm_card_graph_type: fill\n    ulm_card_graph_hours: 24\n    ulm_card_graph_group_by: interval\n    ulm_card_graph_line_width: 5\n</code></pre> Template Code card_graph.yaml<pre><code>---\n### Card Graph ###\ncard_graph:\n  template:\n    - \"extended_card\"\n  variables:\n    ulm_card_graph_color: \"var(--info-color)\"\n    ulm_card_graph_name: \"[[[ return entity.attributes.friendly_name; ]]]\"\n    ulm_card_graph_icon: \"[[[ return entity.attributes.icon ]]]\"\n    ulm_card_graph_color2: \"var(--info-color)\"\n    ulm_card_graph_entity2: \"\"\n    ulm_card_graph_hours: 24\n    ulm_card_graph_type: \"fill\"\n    ulm_card_graph_points: \"0.5\"\n    ulm_card_graph_group_by: \"interval\"\n    ulm_card_graph_line_width: 5\n    ulm_card_graph_icon_color: \"\"\n  triggers_update:\n    - \"[[[ return variables.ulm_card_graph_entity2 ]]]\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        template:\n          - \"card_generic\"\n        variables:\n          ulm_card_generic_icon: \"[[[ return variables.ulm_card_graph_icon; ]]]\"\n          ulm_card_generic_name: \"[[[ return variables.ulm_card_graph_name; ]]]\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              custom_fields:\n                item1:\n                  card:\n                    type: \"custom:button-card\"\n                    styles:\n                      icon:\n                        - color: &gt;\n                            [[[\n                              var color = variables.ulm_card_graph_icon_color;\n                              if (variables.ulm_card_graph_icon_color){\n                                return 'rgba(var(--color-' + color + '),1)';\n                              }\n                              return 'rgba(var(--color-theme),0.2)';\n                            ]]]\n                      img_cell:\n                        - background-color: &gt;\n                            [[[\n                              var color = variables.ulm_card_graph_icon_color;\n                              if (variables.ulm_card_graph_icon_color){\n                                return 'rgba(var(--color-' + color + '),0.2)';\n                              }\n                              return 'rgba(var(--color-theme),0.05)';\n                            ]]]\n    item2:\n      card:\n        type: \"custom:mini-graph-card\"\n        entities: &gt;\n          [[[\n            var ent = [];\n            ent.push(variables.ulm_card_graph_entity);\n            if(variables.ulm_card_graph_entity2 != \"\")\n              ent.push(variables.ulm_card_graph_entity2);\n            return ent;\n          ]]]\n        line_color: &gt;\n          [[[\n            var col = [];\n            col.push(variables.ulm_card_graph_color);\n            if(variables.ulm_card_graph_color2 != \"\")\n              col.push(variables.ulm_card_graph_color2);\n            return col;\n          ]]]\n        show:\n          name: false\n          icon: false\n          legend: false\n          state: false\n          graph: \"[[[ return variables.ulm_card_graph_type=='fill'?'line':variables.ulm_card_graph_type; ]]]\"\n          fill: \"[[[ return variables.ulm_card_graph_type=='fill'?true:false; ]]]\"\n        hours_to_show: \"[[[ return variables.ulm_card_graph_hours; ]]]\"\n        points_per_hour: \"[[[ return variables.ulm_card_graph_points; ]]]\"\n        group_by: \"[[[ return variables.ulm_card_graph_group_by; ]]]\"\n        line_width: \"[[[ return variables.ulm_card_graph_line_width; ]]]\"\n        card_mod:\n          style: |\n            ha-card {\n              box-shadow: none;\n              border-radius: var(--border-radius);\n            }\n</code></pre>"},{"location":"usage/cards/card_input_boolean/","title":"Input_boolean Card","text":""},{"location":"usage/cards/card_input_boolean/#description","title":"Description","text":"<p>The <code>input-boolean-card</code> is to switch an <code>input_boolean</code> on or off.</p>"},{"location":"usage/cards/card_input_boolean/#variables","title":"Variables","text":"Variable Default Required Notes entity ulm_card_input_boolean_name Set custom Name ulm_card_input_boolean_icon Set custom Icon ulm_card_input_boolean_color <code>blue</code> Set Custom Color ulm_card_input_boolean_force_background_color <code>false</code> Set <code>ulm_card_input_boolean_color</code> as background color in active state `"},{"location":"usage/cards/card_input_boolean/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: card_input_boolean\n  entity: input_boolean.guest_mode\n  variables:\n    ulm_card_input_boolean_name: Guest Mode\n</code></pre> Template Code card_input_boolean.yaml<pre><code>---\n### Card Input Boolean ###\ncard_input_boolean:\n  template:\n    - \"icon_more_info_new\"\n    - \"ulm_translation_engine\"\n  variables:\n    ulm_card_input_boolean_icon: \"[[[ return entity.attributes.icon ]]]\"\n    ulm_card_input_boolean_name: \"[[[ return entity.attributes.friendly_name ]]]\"\n    ulm_outlet_power_enable_popup: false\n    ulm_card_input_boolean_color: \"blue\"\n    ulm_card_input_boolean_force_background_color: false\n  state:\n    - operator: \"template\"\n      value: \"[[[ return variables.ulm_active_state ]]]\"\n      styles:\n        card:\n          - background-color: &gt;\n              [[[\n                if (variables.ulm_card_input_boolean_force_background_color) {\n                  var color = variables.ulm_card_input_boolean_color;\n                  return 'rgba(var(--color-' + color + '),var(--opacity-bg))';\n                }\n              ]]]\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              icon: \"[[[ return variables.ulm_card_input_boolean_icon; ]]]\"\n              variables: &gt;\n                [[[\n                  let vars = variables;\n\n                  if(variables.ulm_outlet_power_enable_popup) {\n                    vars.ulm_custom_popup = {\n                      'template': 'popup_power_outlet_stats',\n                      'popup_variables': {\n                        'ulm_popup_power_outlet_sensor1': variables.ulm_popup_power_outlet_sensor1,\n                        'ulm_popup_power_outlet_sensor2': variables.ulm_popup_power_outlet_sensor2,\n                        'ulm_popup_power_outlet_graph_sensor': variables.ulm_popup_power_outlet_graph_sensor\n                      }\n                    };\n                  }\n                  return vars;\n                ]]]\n              styles:\n                icon:\n                  - color: &gt;\n                      [[[\n                        var color = variables.ulm_card_input_boolean_color;\n                        if (variables.ulm_active_state){\n                          return 'rgba(var(--color-' + color + '),1)';\n                        }\n                        return 'rgba(var(--color-theme),0.2)';\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        var color = variables.ulm_card_input_boolean_color;\n                        if (variables.ulm_active_state){\n                          return 'rgba(var(--color-' + color + '),0.2)';\n                        }\n                        return 'rgba(var(--color-theme),0.05)';\n                      ]]]\n          item2:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              name: \"[[[ return variables.ulm_card_input_boolean_name; ]]]\"\n              label: \"[[[ return variables.ulm_translation_state ]]]\"\n              variables: &gt;\n                [[[\n                  let vars = variables;\n\n                  if(variables.ulm_outlet_power_enable_popup) {\n                    vars.ulm_custom_popup = {\n                      'template': 'popup_power_outlet_stats',\n                      'popup_variables': {\n                        'ulm_popup_power_outlet_sensor1': variables.ulm_popup_power_outlet_sensor1,\n                        'ulm_popup_power_outlet_sensor2': variables.ulm_popup_power_outlet_sensor2,\n                        'ulm_popup_power_outlet_graph_sensor': variables.ulm_popup_power_outlet_graph_sensor\n                      }\n                    };\n                  }\n                  return vars;\n                ]]]\n              state:\n                - operator: \"template\"\n                  value: \"[[[ return variables.ulm_active_state ]]]\"\n                  styles:\n                    name:\n                      - color: &gt;\n                          [[[\n                              if (variables.ulm_card_input_boolean_force_background_color) {\n                                  return 'rgb(250,250,250)';\n                              }\n                          ]]]\n                    label:\n                      - color: &gt;\n                          [[[\n                              if (variables.ulm_card_input_boolean_force_background_color) {\n                                  return 'rgb(250,250,250)';\n                              }\n                          ]]]\n</code></pre>"},{"location":"usage/cards/card_light/","title":"Light Card","text":""},{"location":"usage/cards/card_light/#description","title":"Description","text":"<p>This is the <code>light-card</code>, used to toggle a light or a light group. Shows state of the light and, if available, brightness in %.</p> <p>This documentation refers to the new \"All in one\" light card. This card merges the following one :</p> <ul> <li>legacy <code>card_light</code> (the old one)</li> <li>legacy <code>card_light_slider</code></li> <li>legacy <code>card_light_slider_collapse</code></li> <li>legacy <code>card_light_slider_horizontal</code></li> <li>custom <code>card_light_color</code> by basbruss</li> <li>custom <code>card_light_horizontal_color</code> by basbruss</li> <li>custom <code>card_light_slider_color</code> by basbruss</li> <li>custom <code>card_light_slider_collapse_color</code> by basbruss</li> </ul> <p>Warning</p> <p>This card has backward compatibility with older template except custom names and icons. It means variables like <code>ulm_card_XXX_name</code> and <code>ulm_card_XXX_icon</code> must be replaced by <code>ulm_card_light_name</code> and <code>ulm_card_light_icon</code>. To use <code>popup_light</code> you need to set the variable <code>ulm_card_light_enable_popup</code> to <code>true</code>. This is a different approach as the other <code>popup_cards</code> use.</p>"},{"location":"usage/cards/card_light/#variables","title":"Variables","text":"Variable/Entity Default Required Notes Requirement entity Your HA entity ulm_card_light_name <code>friendly_name</code> Customize name ulm_card_light_icon <code>mdi:lightbulb</code> Customize icon ulm_card_light_enable_slider <code>false</code> Enable slider ulm_card_light_enable_slider_minSet <code>0</code> Minimum brightness value user can select in the slider Need <code>ulm_card_light_enable_slider: true</code> ulm_card_light_enable_slider_maxSet <code>100</code> Maximum brightness value user can select in the slider Need <code>ulm_card_light_enable_slider: true</code> ulm_card_light_enable_collapse <code>false</code> Collapse slider when off Need <code>ulm_card_light_enable_slider: true</code> ulm_card_light_enable_horizontal <code>false</code> Enable horizontal card ulm_card_light_enable_horizontal_wide <code>false</code> Wider slider Need <code>ulm_card_light_enable_horizontal: true</code> ulm_card_light_color <code>yellow</code> Set a manual color from the theme for icon, slider and background ulm_card_light_enable_color <code>false</code> Enable icon and label light color from the light itself. Overrides <code>ulm_card_light_color</code> ulm_card_light_force_background_color <code>false</code> Force background light color even in light theme ulm_card_light_enable_popup <code>false</code> Enable <code>popup_light</code> ulm_card_light_enable_popup_tap <code>false</code> Enable <code>popup_light</code> on simple icon tap ulm_card_light_color_palette Add <code>select</code> entity to control color palette ulm_card_light_enable_buttons <code>false</code> Enable Preset Brightness Buttons ulm_card_light_brightness_low/medium/high Override the Brightness defaults for Buttons - Percentages"},{"location":"usage/cards/card_light/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: card_light\n  entity: light.allee\n  variables:\n    ulm_card_light_enable_slider: true\n    ulm_card_light_enable_color: true\n    ulm_card_light_force_background_color: true\n</code></pre> Template Code card_light.yaml<pre><code>---\n### Card Light ###\ncard_light:\n  template:\n    - \"icon_more_info_new\"\n    - \"ulm_translation_engine\"\n  variables:\n    ulm_card_light_name: \"[[[ return entity.attributes.friendly_name ]]]\"\n    ulm_card_light_icon: \"[[[ return entity.attributes.icon ]]]\"\n    ulm_card_light_enable_collapse: false\n    ulm_card_light_enable_horizontal: false\n    ulm_card_light_enable_horizontal_wide: false\n    ulm_card_light_enable_color: false\n    ulm_card_light_color_palette: \"\"\n    ulm_card_light_color: \"yellow\"\n    ulm_card_light_force_background_color: false\n    ulm_card_light_enable_slider: false\n    ulm_card_light_enable_slider_minSet: 0\n    ulm_card_light_enable_slider_maxSet: 100\n    ulm_card_light_enable_buttons: false\n    ulm_card_light_brightness_low: 1\n    ulm_card_light_brightness_medium: 50\n    ulm_card_light_brightness_high: 100\n    ulm_card_light_enable_popup: false\n    ulm_card_light_enable_popup_tap: false\n  show_icon: false\n  show_name: false\n  show_label: false\n  state:\n    - operator: \"template\"\n      value: \"[[[ return variables.ulm_active_state ]]]\"\n      styles:\n        card:\n          - background-color: &gt;\n              [[[\n                var color_set = (variables.ulm_card_light_enable_color &amp;&amp; entity.attributes.rgb_color) ? entity.attributes.rgb_color : variables.ulm_card_light_color;\n                var color = 'rgba(var(--color-' + color_set + '),var(--opacity-bg))'\n                if(variables.ulm_card_light_enable_color &amp;&amp; entity.attributes.rgb_color){\n                  color = 'rgba(' + color_set + ',var(--opacity-bg))'\n                }\n                if (variables.ulm_card_light_force_background_color) {\n                  return color\n                }\n              ]]]\n  styles:\n    grid:\n      - grid-template-areas: &gt;\n          [[[\n              if (variables.ulm_card_light_enable_collapse &amp;&amp; entity.state != \"on\") {\n                  return \"\\\"item1\\\"\";\n              }\n\n              var areas = [];\n              areas.push(\"item1\");\n              if (variables.ulm_card_light_enable_slider) {\n                  areas.push(\"item2\");\n              }\n              if (variables.ulm_card_light_enable_buttons) {\n                  areas.push(\"item3\");\n              }\n\n              if (variables.ulm_card_light_enable_horizontal) {\n                  areas = areas.slice(0, 2);\n                  return \"\\\"\" + areas.join(\" \") + \"\\\"\";\n              }\n              return \"\\\"\" + areas.join(\"\\\" \\\"\") + \"\\\"\";\n          ]]]\n      - grid-template-columns: &gt;\n          [[[\n              if (variables.ulm_card_light_enable_collapse &amp;&amp; entity.state != \"on\") {\n                  return \"1fr\";\n              }\n              if (variables.ulm_card_light_enable_horizontal) {\n                  if(variables.ulm_card_light_enable_horizontal_wide){\n                    return \"1fr 2fr\";\n                  } else {\n                    return \"1fr 1fr\";\n                  }\n              }\n              return \"1fr\";\n          ]]]\n      - grid-template-rows: &gt;\n          [[[\n              if (variables.ulm_card_light_enable_horizontal || (variables.ulm_card_light_enable_collapse &amp;&amp; entity.state != \"on\")) {\n                  return \"min-content\";\n              }\n              var rows = [];\n              rows.push(\"min-content\");\n              if (variables.ulm_card_light_enable_slider) {\n                  rows.push(\"min-content\");\n              }\n              if (variables.ulm_card_light_enable_buttons) {\n                  rows.push(\"min-content\");\n              }\n              return rows.join(\" \");\n          ]]]\n      - row-gap: \"12px\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n    custom_fields:\n      item2:\n        - display: &gt;\n            [[[\n                  if (variables.ulm_card_light_enable_collapse &amp;&amp; entity.state != \"on\") {\n                      return \"none\";\n                  } else if (variables.ulm_card_light_enable_slider) {\n                      return \"block\";\n                  } else {\n                      return \"none\";\n                  }\n            ]]]\n      item3:\n        - display: &gt;\n            [[[\n                if (variables.ulm_card_light_enable_collapse &amp;&amp; entity.state != \"on\") {\n                    return \"none\";\n                } else if (variables.ulm_card_light_enable_buttons) {\n                    if (variables.ulm_card_light_enable_horizontal &amp;&amp; variables.ulm_card_light_enable_slider) {\n                      return \"none\";\n                    }\n                    return \"block\";\n                } else {\n                    return \"none\";\n                }\n            ]]]\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              icon: \"[[[ return variables.ulm_card_light_icon ]]]\"\n              variables: &gt;\n                [[[\n                  let vars = variables;\n                  if (variables.ulm_card_light_enable_popup) {\n                    vars.ulm_custom_popup = {\n                      'template': 'popup_light_brightness',\n                      'popup_variables': {'ulm_card_light_color_palette': variables.ulm_card_light_color_palette}\n                    };\n                  }\n                  return vars;\n                ]]]\n              styles:\n                icon:\n                  - color: &gt;\n                      [[[\n                        var color_set = variables.ulm_card_light_enable_color &amp;&amp; entity.attributes.rgb_color ? entity.attributes.rgb_color : variables.ulm_card_light_color;\n                        var color = 'rgba(var(--color-' + color_set + '),1)'\n                        if(variables.ulm_card_light_enable_color &amp;&amp; entity.attributes.rgb_color){\n                          color = 'rgba(' + color_set + ',1)'\n                        }\n                        if (entity.state != \"on\") {\n                          return 'rgba(var(--color-theme),0.2)';\n                        }\n                        return color\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        var color_set = variables.ulm_card_light_enable_color &amp;&amp; entity.attributes.rgb_color ? entity.attributes.rgb_color : variables.ulm_card_light_color;\n                        var color = 'rgba(var(--color-' + color_set + '),0.2)'\n                        if(variables.ulm_card_light_enable_color &amp;&amp; entity.attributes.rgb_color){\n                          color = 'rgba(' + color_set + ',0.2)'\n                        }\n                        if (entity.state != \"on\") {\n                          return 'rgba(var(--color-theme),0.05)';\n                        }\n                        return color\n                      ]]]\n          item2:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              variables: &gt;\n                [[[\n                  let vars = variables;\n                  if (variables.ulm_card_light_enable_popup) {\n                    vars.ulm_custom_popup = {\n                      'template': 'popup_light_brightness',\n                      'popup_variables': {'ulm_card_light_color_palette': variables.ulm_card_light_color_palette}\n                    };\n                  }\n                  return vars;\n                ]]]\n              name: \"[[[ return variables.ulm_card_light_name ]]]\"\n              label: &gt;\n                [[[\n                  var label = variables.ulm_translation_state;\n                  if (entity.attributes.brightness != null &amp;&amp; entity.state === 'on') {\n                    var bri = Math.round(entity.attributes.brightness / 2.55);\n                    label = (bri ? bri : \"0\") + \"%\";\n                  }\n                  return label;\n                ]]]\n              state:\n                - operator: \"template\"\n                  value: \"[[[ return variables.ulm_active_state ]]]\"\n                  styles:\n                    name:\n                      - color: &gt;\n                          [[[\n                              if (variables.ulm_card_light_force_background_color) {\n                                  return 'rgb(250,250,250)';\n                              }\n                          ]]]\n                    label:\n                      - color: &gt;\n                          [[[\n                              if (variables.ulm_card_light_force_background_color) {\n                                  return 'rgb(250,250,250)';\n                              }\n                          ]]]\n    item2:\n      card:\n        type: \"custom:my-slider\"\n        entity: \"[[[ return entity.entity_id ]]]\"\n        radius: \"14px\"\n        height: \"42px\"\n        minSet: \"[[[ return variables.ulm_card_light_enable_slider_minSet ]]]\"\n        maxSet: \"[[[ return variables.ulm_card_light_enable_slider_maxSet ]]]\"\n        mainSliderColor: &gt;\n          [[[\n            var color_set = variables.ulm_card_light_enable_color &amp;&amp; entity.attributes.rgb_color ? entity.attributes.rgb_color : variables.ulm_card_light_color;\n            var color = 'rgba(var(--color-' + color_set + '),1)'\n            if(variables.ulm_card_light_enable_color &amp;&amp; entity.attributes.rgb_color){\n              color = 'rgba(' + color_set + ',1)'\n            }\n            if (entity.state == \"unavailable\") {\n              return \"rgba(var(--color-grey),1)\";\n            }\n            if(variables.ulm_card_light_force_background_color &amp;&amp; !hass.themes.darkMode){\n              return 'rgba(250,250,250,1)'\n            }\n            return color\n          ]]]\n        secondarySliderColor: &gt;\n          [[[\n            var color_set = variables.ulm_card_light_enable_color &amp;&amp; entity.attributes.rgb_color ? entity.attributes.rgb_color : variables.ulm_card_light_color;\n            var color = 'rgba(var(--color-' + color_set + '),0.2)'\n            if(variables.ulm_card_light_enable_color &amp;&amp; entity.attributes.rgb_color){\n              color = 'rgba(' + color_set + ',0.2)'\n            }\n            if (entity.state == \"unavailable\") {\n              return \"rgba(var(--color-grey),0.2)\";\n            }\n            return color\n          ]]]\n        thumbColor: &gt;\n          [[[\n            var color_set = variables.ulm_card_light_enable_color &amp;&amp; entity.attributes.rgb_color ? entity.attributes.rgb_color : variables.ulm_card_light_color;\n            var color = 'rgba(var(--color-' + color_set + '),1)'\n            if(variables.ulm_card_light_enable_color &amp;&amp; entity.attributes.rgb_color){\n              color = 'rgba(' + color_set + ',1)'\n            }\n            if (entity.state == \"unavailable\") {\n              return \"rgba(var(--color-grey),1)\";\n            }\n            if(variables.ulm_card_light_force_background_color &amp;&amp; !hass.themes.darkMode){\n              return 'rgba(250,250,250,1)'\n            }\n            return color\n          ]]]\n        mainSliderColorOff: \"rgba(var(--color-theme),0.05)\"\n        secondarySliderColorOff: \"rgba(var(--color-theme),0.05)\"\n        thumbHorizontalPadding: \"0px\"\n        thumbVerticalPadding: \"0px\"\n        thumbWidth: \"12px\"\n        card_mod:\n          style: |\n            ha-card {\n              border-radius: 14px;\n              box-shadow: none;\n            }\n    item3:\n      card:\n        type: \"custom:button-card\"\n        template: \"list_3_items\"\n        styles:\n          card:\n            - background: \"none\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              styles:\n                card:\n                  - background-color: &gt;\n                      [[[\n                        if(!hass.themes.darkMode &amp;&amp; variables.ulm_card_light_force_background_color){\n                          if (entity.state != \"off\"){\n                            return 'rgb(250,250,250)'\n                          }\n                        }\n                        return 'rgba(var(--color-theme),0.05)'\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        if (variables.ulm_card_light_force_background_color) {\n                          if (entity.state != \"off\") {\n                            var color_set = variables.ulm_card_light_enable_color &amp;&amp; entity.attributes.rgb_color ? entity.attributes.rgb_color : variables.ulm_card_light_color;\n                            var color = 'rgba(var(--color-' + color_set + '),0.2)'\n                            if (variables.ulm_card_light_enable_color &amp;&amp; entity.attributes.rgb_color) {\n                              color = 'rgba(' + color_set + ',0.2)';\n                            }\n                            return color;\n                          }\n                        }\n                      ]]]\n                icon:\n                  - color: &gt;\n                      [[[\n                        if (variables.ulm_card_light_force_background_color) {\n                          if (entity.state != \"off\") {\n                            var color_set = variables.ulm_card_light_enable_color &amp;&amp; entity.attributes.rgb_color ? entity.attributes.rgb_color : variables.ulm_card_light_color;\n                            var color = 'rgba(var(--color-' + color_set + '),1)';\n                            if (variables.ulm_card_light_enable_color &amp;&amp; entity.attributes.rgb_color) {\n                              color = 'rgba(' + color_set + ',1)';\n                            }\n                            return color;\n                          }\n                        }\n                        return 'rgba(var(--color-theme),0.9)';\n                      ]]]\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"light.turn_on\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n                data:\n                  brightness_pct: \"[[[ return variables.ulm_card_light_brightness_low ]]]\"\n              icon: \"mdi:lightbulb-on-10\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              styles:\n                card:\n                  - background-color: &gt;\n                      [[[\n                        if(!hass.themes.darkMode &amp;&amp; variables.ulm_card_light_force_background_color){\n                          if (entity.state != \"off\"){\n                            return 'rgb(250,250,250)'\n                          }\n                        }\n                        return 'rgba(var(--color-theme),0.05)'\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        if (variables.ulm_card_light_force_background_color) {\n                          if (entity.state != \"off\") {\n                            var color_set = variables.ulm_card_light_enable_color &amp;&amp; entity.attributes.rgb_color ? entity.attributes.rgb_color : variables.ulm_card_light_color;\n                            var color = 'rgba(var(--color-' + color_set + '),0.2)'\n                            if (variables.ulm_card_light_enable_color &amp;&amp; entity.attributes.rgb_color) {\n                              color = 'rgba(' + color_set + ',0.2)';\n                            }\n                            return color;\n                          }\n                        }\n                      ]]]\n                icon:\n                  - color: &gt;\n                      [[[\n                        if (variables.ulm_card_light_force_background_color) {\n                          if (entity.state != \"off\") {\n                            var color_set = variables.ulm_card_light_enable_color &amp;&amp; entity.attributes.rgb_color ? entity.attributes.rgb_color : variables.ulm_card_light_color;\n                            var color = 'rgba(var(--color-' + color_set + '),1)';\n                            if (variables.ulm_card_light_enable_color &amp;&amp; entity.attributes.rgb_color) {\n                              color = 'rgba(' + color_set + ',1)';\n                            }\n                            return color;\n                          }\n                        }\n                        return 'rgba(var(--color-theme),0.9)';\n                      ]]]\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"light.turn_on\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n                data:\n                  brightness_pct: \"[[[ return variables.ulm_card_light_brightness_medium ]]]\"\n              icon: \"mdi:lightbulb-on-50\"\n          item3:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              styles:\n                card:\n                  - background-color: &gt;\n                      [[[\n                        if(!hass.themes.darkMode &amp;&amp; variables.ulm_card_light_force_background_color){\n                          if (entity.state != \"off\"){\n                            return 'rgb(250,250,250)'\n                          }\n                        }\n                        return 'rgba(var(--color-theme),0.05)'\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        if (variables.ulm_card_light_force_background_color) {\n                          if (entity.state != \"off\") {\n                            var color_set = variables.ulm_card_light_enable_color &amp;&amp; entity.attributes.rgb_color ? entity.attributes.rgb_color : variables.ulm_card_light_color;\n                            var color = 'rgba(var(--color-' + color_set + '),0.2)'\n                            if (variables.ulm_card_light_enable_color &amp;&amp; entity.attributes.rgb_color) {\n                              color = 'rgba(' + color_set + ',0.2)';\n                            }\n                            return color;\n                          }\n                        }\n                      ]]]\n                icon:\n                  - color: &gt;\n                      [[[\n                        if (variables.ulm_card_light_force_background_color) {\n                          if (entity.state != \"off\") {\n                            var color_set = variables.ulm_card_light_enable_color &amp;&amp; entity.attributes.rgb_color ? entity.attributes.rgb_color : variables.ulm_card_light_color;\n                            var color = 'rgba(var(--color-' + color_set + '),1)';\n                            if (variables.ulm_card_light_enable_color &amp;&amp; entity.attributes.rgb_color) {\n                              color = 'rgba(' + color_set + ',1)';\n                            }\n                            return color;\n                          }\n                        }\n                        return 'rgba(var(--color-theme),0.9)';\n                      ]]]\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"light.turn_on\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n                data:\n                  brightness_pct: \"[[[ return variables.ulm_card_light_brightness_high ]]]\"\n              icon: \"mdi:lightbulb-on\"\n</code></pre>"},{"location":"usage/cards/card_media_player/","title":"Media_player Card","text":""},{"location":"usage/cards/card_media_player/#description","title":"Description","text":"<p>The <code>card_media_player</code> shows you the app, the title and the album name playing, if the data is available through HA. The app is shown via a different icon.</p>"},{"location":"usage/cards/card_media_player/#variables","title":"Variables","text":"Variable Default Required Notes entity The media-player entity ulm_card_media_player_name Name to display for your media-player ulm_card_media_player_icon Change the icon displayed ulm_card_media_player_enable_art false Enable album picture on background ulm_card_media_player_enable_controls false Enable controls below the title ulm_card_media_player_enable_volume_slider false Enable volume slider below controls ulm_card_media_player_enable_volume_buttons false Enable volume buttons below controls ulm_card_media_player_enable_volume_adjust 5 Volume Adjust Amount - if not set then 1 for TV and 5 for Speaker ulm_card_media_player_collapsible false Controls are collapsible when state is off ulm_card_media_player_player_controls_entity entity Change the controlled entity ulm_card_media_player_enable_popup false Enable pop-up ulm_card_media_player_more_info false Displays artist and album info in the sub-label ulm_card_media_player_power_button false Show power button ulm_card_media_player_color <code>blue</code> Set Custom Color ulm_card_media_player_force_background_color <code>false</code> Set <code>ulm_card_media_player_color</code> as background color in active state ` <p>Note</p> <p>To use <code>popup_media_player</code> you need to set the variable <code>ulm_card_media_player_enable_popup</code> to <code>true</code>. This is a different approach as the other <code>popup_cards</code> use.</p>"},{"location":"usage/cards/card_media_player/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: card_media_player\n  entity: media_player.livingroom_shield\n  variables:\n    ulm_card_media_player_name: Livingroom Nvidia Shield\n</code></pre> Template Code card_media_player.yaml<pre><code>---\n### Card Media Player ###\ncard_media_player:\n  template:\n    - \"icon_more_info_new\"\n    - \"ulm_translation_engine\"\n  variables:\n    ulm_card_media_player_name: \"[[[ return entity.attributes.friendly_name ]]]\"\n    ulm_card_media_player_icon: false\n    ulm_card_media_player_enable_art: false\n    ulm_card_media_player_enable_controls: false\n    ulm_card_media_player_enable_volume_slider: false\n    ulm_card_media_player_enable_volume_buttons: false\n    ulm_card_media_player_enable_volume_adjust: 0\n    ulm_card_media_player_collapsible: false\n    ulm_card_media_player_idle_off: false\n    ulm_card_media_player_player_controls_entity: \"[[[ return entity.entity_id ]]]\"\n    ulm_card_media_player_enable_popup: false\n    ulm_card_media_player_more_info: false\n    ulm_card_media_player_power_button: false\n    ulm_card_media_player_force_background_color: false\n    ulm_card_media_player_color: \"blue\"\n  show_icon: false\n  show_name: false\n  show_label: false\n  state:\n    - operator: \"template\"\n      value: \"[[[ return variables.ulm_active_state &amp;&amp; !variables.ulm_card_media_player_enable_art ]]]\"\n      styles:\n        card:\n          - background-color: &gt;\n              [[[\n                  if (variables.ulm_card_media_player_color) {\n                    if (variables.ulm_card_media_player_force_background_color) {\n                      var color = variables.ulm_card_media_player_color;\n                      return 'rgba(var(--color-' + color + '),var(--opacity-bg))';\n                    }\n                  }\n              ]]]\n  styles:\n    grid:\n      - grid-template-areas: |\n          [[[\n            var areas = \"'item1'\";\n            if (variables.ulm_card_media_player_enable_controls){\n              areas = areas + \" 'item2'\";\n            }\n            if (variables.ulm_card_media_player_enable_volume_slider){\n              areas = areas + \" 'item3'\";\n            }\n            if (variables.ulm_card_media_player_enable_volume_buttons){\n              areas = areas + \" 'item4'\";\n            }\n            return areas;\n          ]]]\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: |\n          [[[\n            var rows = \"min-content\";\n            if (variables.ulm_card_media_player_enable_controls){\n              rows = rows + \" min-content\";\n            }\n            if (variables.ulm_card_media_player_enable_volume_slider){\n              rows = rows + \" min-content\";\n            }\n            if (variables.ulm_card_media_player_enable_volume_buttons){\n              rows = rows + \" min-content\";\n            }\n            return rows;\n          ]]]\n      - row-gap: |-\n          [[[\n            if (!variables.ulm_card_media_player_collapsible) {\n                return \"12px\";\n              } else {\n                return (entity.state === \"off\" || entity.state === \"standby\" || (variables.ulm_card_media_player_idle_off &amp;&amp; entity.state=== \"idle\")) ? \"0px\" : \"12px\";\n              }\n          ]]]\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n      - background: |\n          [[[\n            return variables.ulm_card_media_player_enable_art &amp;&amp; states[entity.entity_id].attributes.entity_picture != null\n            ? 'center / cover url(' + states[entity.entity_id].attributes.entity_picture + ') rgba(0, 0, 0, 0.15)'\n            : ''\n          ]]]\n    custom_fields:\n      power:\n        - display: \"[[[ return variables.ulm_card_media_player_power_button ? 'block' : 'none']]]\"\n        - position: \"absolute\"\n        - top: \"12px\"\n        - right: \"12px\"\n      item2:\n        - display: |\n            [[[\n              if(variables.ulm_card_media_player_enable_controls) {\n                if(variables.ulm_card_media_player_collapsible){\n                return (entity.state === \"off\" || entity.state === \"standby\" || (variables.ulm_card_media_player_idle_off &amp;&amp; entity.state=== \"idle\")) ? \"none\" : \"block\";\n                }\n                return \"block\";\n              }\n              return \"none\";\n            ]]]\n      item3:\n        - border-radius: \"14px\"\n        - background-color: &gt;\n            [[[\n              if(variables.ulm_card_media_player_enable_art){\n                return 'transparent'\n              }\n              if(!hass.themes.darkMode){\n                return 'rgb(250,250,250)' ;\n              }\n            ]]]\n        - display: |\n            [[[\n              if(variables.ulm_card_media_player_enable_volume_slider) {\n                if(variables.ulm_card_media_player_collapsible){\n                return (entity.state === \"off\" || entity.state === \"standby\" || (variables.ulm_card_media_player_idle_off &amp;&amp; entity.state=== \"idle\")) ? \"none\" : \"block\";\n                }\n                return \"block\";\n              }\n              return \"none\";\n            ]]]\n      item4:\n        - display: |\n            [[[\n              if(variables.ulm_card_media_player_enable_volume_buttons) {\n                if(variables.ulm_card_media_player_collapsible){\n                return (entity.state === \"off\" || entity.state === \"standby\" || (variables.ulm_card_media_player_idle_off &amp;&amp; entity.state=== \"idle\")) ? \"none\" : \"block\";\n                }\n                return \"block\";\n              }\n              return \"none\";\n            ]]]\n  custom_fields:\n    power:\n      card:\n        type: \"custom:button-card\"\n        entity: \"[[[ return entity.entity_id ]]]\"\n        template: \"widget_icon\"\n        icon: \"mdi:power\"\n        tap_action:\n          action: \"toggle\"\n        styles:\n          card:\n            - background-color: |\n                [[[\n                  if(variables.ulm_card_media_player_enable_art &amp;&amp; states[entity.entity_id].attributes.entity_picture != null){\n                    return 'rgba(0, 0, 0, 0.2)'\n                  }\n                  if(!hass.themes.darkMode &amp;&amp; variables.ulm_card_media_player_force_background_color){\n                    if (variables.ulm_active_state){\n                      return 'rgb(250,250,250)'\n                    }\n                  }\n                  return 'rgba(var(--color-theme),0.05)'\n                ]]]\n          img_cell:\n            - width: \"42px\"\n            - heigth: \"42px\"\n            - background-color: &gt;\n                [[[\n                  if (variables.ulm_card_media_player_force_background_color &amp;&amp; variables.ulm_active_state &amp;&amp; !variables.ulm_card_media_player_enable_art) {\n                    var color = variables.ulm_card_media_player_color;\n                    return 'rgba(var(--color-' + color + '),0.2)';\n                  }\n                  return 'rgba(var(--color-theme),0.05)';\n                ]]]\n          icon:\n            - color: |\n                [[[\n                  if(variables.ulm_card_media_player_enable_art &amp;&amp; states[entity.entity_id].attributes.entity_picture != null){\n                    return 'white'\n                  }\n                  if (variables.ulm_card_media_player_force_background_color &amp;&amp; variables.ulm_active_state) {\n                    var color = variables.ulm_card_media_player_color;\n                    return 'rgba(var(--color-' + color + '),1)';\n                  }\n                  return 'rgba(var(--color-theme),0.9)';\n                ]]]\n    item1:\n      card:\n        type: \"custom:button-card\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              variables: &gt;\n                [[[\n                  let vars = variables;\n                  if(variables.ulm_card_media_player_enable_popup) {\n                    vars.ulm_custom_popup = {\n                      'template': 'popup_media_player_infos'\n                    };\n                  }\n                  return vars;\n                ]]]\n              icon: |\n                [[[\n                  var icon = entity.attributes.icon || \"mdi:speaker\";\n                  if(entity.attributes.app_name){\n                    var app = entity.attributes.app_name.toLowerCase();\n                    var icon = {\n                      \"spotify\": \"mdi:spotify\",\n                      \"google podcasts\": \"mdi:google-podcast\",\n                      \"plex\": \"mdi:plex\",\n                      \"soundcloud\": \"mdi:soundcloud\",\n                      \"youtube music\": \"mdi:youtube\",\n                      \"oto music\": \"mdi:music-circle\",\n                      \"pandora\": \"mdi:pandora\",\n                      \"netflix\": \"mdi:netflix\",\n                      \"hulu\": \"mdi:hulu\",\n                      \"bluetooth audio\": \"mdi:bluetooth\"\n                    }\n                  }\n                  return variables.ulm_card_media_player_icon || icon[app];\n                ]]]\n              styles:\n                icon:\n                  - color: |\n                      [[[\n                        var color = variables.ulm_card_media_player_color;\n                        var active_color = 'rgba(var(--color-theme),0.2)'\n                        if (variables.ulm_active_state){\n                          active_color = 'rgba(var(--color-' + color + '),1)';\n                        }\n                        return variables.ulm_card_media_player_enable_art &amp;&amp; states[entity.entity_id].attributes.entity_picture != null\n                        ? 'white'\n                        : active_color\n                      ]]]\n                img_cell:\n                  - background-color: |\n                      [[[\n                        var color = variables.ulm_card_media_player_color;\n                        var active_color = 'rgba(var(--color-theme),0.05)'\n                        if (variables.ulm_active_state){\n                          active_color = 'rgba(var(--color-' + color + '),0.2)';\n                        }\n                        return variables.ulm_card_media_player_enable_art &amp;&amp; states[entity.entity_id].attributes.entity_picture != null\n                        ? 'rgba(0, 0, 0, 0.2)'\n                        : active_color\n                      ]]]\n                card:\n                  - background: &gt;\n                      [[[\n                        if(!variables.ulm_card_media_player_enable_art &amp;&amp; variables.ulm_card_media_player_force_background_color &amp;&amp; !hass.themes.darkMode){\n                          return 'rgb(250,250,250)'\n                        }\n                        return 'none'\n                      ]]]\n          item2:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              variables: &gt;\n                [[[\n                  let vars = variables;\n                  if(variables.ulm_card_media_player_enable_popup) {\n                    vars.ulm_custom_popup = {\n                      'template': 'popup_media_player_infos'\n                    };\n                  }\n                  return vars;\n                ]]]\n              label: \"[[[ return variables.ulm_translation_state ]]]\"\n              state:\n                - operator: \"template\"\n                  value: \"[[[ return entity.state == 'off' ]]]\"\n                  name: |\n                    [[[\n                      let name = variables.ulm_card_media_player_name || states[entity.entity_id].attributes.friendly_name;\n                      return name;\n                    ]]]\n                - operator: \"template\"\n                  value: \"[[[ return entity.state == 'standby' ]]]\"\n                  name: |\n                    [[[\n                      let name = variables.ulm_card_media_player_name || states[entity.entity_id].attributes.friendly_name;\n                      return name;\n                    ]]]\n                - operator: \"template\"\n                  value: \"[[[ return entity.state != 'off'  || entity.state != 'standby']]]\"\n                  name: |\n                    [[[\n                      let name = variables.ulm_card_media_player_name || states[entity.entity_id].attributes.friendly_name;\n                      let isIdle = variables.ulm_card_media_player_idle_off &amp;&amp; (entity.state === \"idle\");\n                      if(states[entity.entity_id].attributes.media_title &amp;&amp; !isIdle){\n                          name = states[entity.entity_id].attributes.media_title;\n                      }\n                      return name;\n                    ]]]\n                  label: |\n                    [[[\n                      let label = variables.ulm_translation_on;\n                      let isIdle = variables.ulm_card_media_player_idle_off &amp;&amp; (entity.state === \"idle\");\n                      if (!isIdle) {\n                        if (variables.ulm_card_media_player_more_info &amp;&amp; states[entity.entity_id].attributes.media_artist\n                            &amp;&amp; states[entity.entity_id].attributes.media_album_name ) {\n                            label = states[entity.entity_id].attributes.media_artist + \" \u2022 \" + states[entity.entity_id].attributes.media_album_name;\n                        } else if(states[entity.entity_id].attributes.media_album_name) {\n                            label = states[entity.entity_id].attributes.media_album_name;\n                        } else if (states[entity.entity_id].attributes.media_artist) {\n                            label = states[entity.entity_id].attributes.media_artist\n                        }\n                      }\n\n                      return label;\n                    ]]]\n              styles:\n                label:\n                  - opacity: \"1\"\n                  - filter: \"opacity(100%)\"\n                  - text-shadow: |\n                      [[[\n                        return variables.ulm_card_media_player_enable_art &amp;&amp; states[entity.entity_id].attributes.entity_picture != null\n                        ? '0 0 black'\n                        : 'none'\n                      ]]]\n                  - color: |\n                      [[[\n                        if(variables.ulm_card_media_player_enable_art &amp;&amp; states[entity.entity_id].attributes.entity_picture != null){\n                          return 'white'\n                        }\n                        if (variables.ulm_card_media_player_force_background_color &amp;&amp; variables.ulm_active_state){\n                          return 'rgba(250,250,250,0.5)'\n                        }\n                        return 'rgba(var(--color-theme), .5)'\n                      ]]]\n                name:\n                  - color: |\n                      [[[\n                        if(variables.ulm_card_media_player_enable_art &amp;&amp; states[entity.entity_id].attributes.entity_picture != null){\n                          return 'white'\n                        }\n                        if (variables.ulm_card_media_player_force_background_color &amp;&amp; variables.ulm_active_state){\n                          return 'rgb(250,250,250)'\n                        }\n                        return'rgba(var(--color-theme), 1)'\n                      ]]]\n                  - text-shadow: \"0 0 black\"\n                card:\n                  - padding: \"0px\"\n                  - background: \"none\"\n                  - border-radius: \"0\"\n                  - box-shadow: \"none\"\n    item2:\n      card:\n        type: \"custom:button-card\"\n        template: \"list_4_items\"\n        styles:\n          card:\n            - padding: \"0px\"\n            - background: \"none\"\n            - border-radius: \"0\"\n            - box-shadow: \"none\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              hold_action:\n                action: &gt;\n                  [[[\n                      return variables.ulm_card_media_player_enable_popup ? \"fire-dom-event\" : \"more-info\";\n                  ]]]\n                browser_mod:\n                  service: \"browser_mod.popup\"\n                  data:\n                    large: true\n                    hide_header: true\n                    content:\n                      type: \"custom:button-card\"\n                      template: \"popup_media_player_infos\"\n                      entity: \"[[[ return entity.entity_id ]]]\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"media_player.media_previous_track\"\n                target:\n                  entity_id: \"[[[ return variables.ulm_card_media_player_player_controls_entity ]]]\"\n              icon: \"mdi:skip-previous\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              styles:\n                card:\n                  - background-color: |\n                      [[[\n                        if(variables.ulm_card_media_player_enable_art &amp;&amp; states[entity.entity_id].attributes.entity_picture != null){\n                          return 'rgba(0, 0, 0, 0.2)'\n                        }\n                        if(!hass.themes.darkMode &amp;&amp; variables.ulm_card_media_player_force_background_color){\n                          if (variables.ulm_active_state){\n                            return 'rgb(250,250,250)'\n                          }\n                        }\n                        return 'rgba(var(--color-theme),0.05)'\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        if (variables.ulm_card_media_player_force_background_color &amp;&amp; variables.ulm_active_state &amp;&amp; !variables.ulm_card_media_player_enable_art) {\n                          var color = variables.ulm_card_media_player_color;\n                          return 'rgba(var(--color-' + color + '),0.2)';\n                        }\n                        return 'rgba(var(--color-theme),0.05)';\n                      ]]]\n                icon:\n                  - color: |\n                      [[[\n                        if(variables.ulm_card_media_player_enable_art &amp;&amp; states[entity.entity_id].attributes.entity_picture != null){\n                          return 'white'\n                        }\n                        if (variables.ulm_card_media_player_force_background_color &amp;&amp; variables.ulm_active_state) {\n                          var color = variables.ulm_card_media_player_color;\n                          return 'rgba(var(--color-' + color + '),1)';\n                        }\n                        return 'rgba(var(--color-theme),0.9)';\n                      ]]]\n          item2:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              entity: \"[[[ return variables.ulm_card_media_player_player_controls_entity ]]]\"\n              hold_action:\n                action: &gt;\n                  [[[\n                      return variables.ulm_card_media_player_enable_popup ? \"fire-dom-event\" : \"more-info\";\n                  ]]]\n                browser_mod:\n                  service: \"browser_mod.popup\"\n                  data:\n                    large: true\n                    hide_header: true\n                    content:\n                      type: \"custom:button-card\"\n                      template: \"popup_media_player_infos\"\n                      entity: \"[[[ return entity.entity_id; ]]]\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"[[[ return (entity.attributes?.media_duration &gt; 0) ? 'media_player.media_play_pause' : entity.state =='playing' ? 'media_player.media_stop' : 'media_player.media_play']]]\"\n                target:\n                  entity_id: \"[[[ return variables.ulm_card_media_player_player_controls_entity ]]]\"\n              icon: \"[[[ return (entity.attributes?.media_duration &gt; 0) ? 'mdi:pause' : 'mdi:stop' ]]]\"\n              state:\n                - value: \"playing\"\n                  icon: \"mdi:pause\"\n                - value: \"paused\"\n                  icon: \"mdi:play\"\n                - value: \"off\"\n                  icon: \"mdi:play\"\n                - value: \"standby\"\n                  icon: \"mdi:play\"\n                - value: \"idle\"\n                  icon: \"mdi:play\"\n              styles:\n                card:\n                  - background-color: |\n                      [[[\n                        if(variables.ulm_card_media_player_enable_art &amp;&amp; states[entity.entity_id].attributes.entity_picture != null){\n                          return 'rgba(0, 0, 0, 0.2)'\n                        }\n                        if(!hass.themes.darkMode &amp;&amp; variables.ulm_card_media_player_force_background_color){\n                          if (variables.ulm_active_state){\n                            return 'rgb(250,250,250)'\n                          }\n                        }\n                        return 'rgba(var(--color-theme),0.05)'\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        if (variables.ulm_card_media_player_force_background_color &amp;&amp; variables.ulm_active_state &amp;&amp; !variables.ulm_card_media_player_enable_art) {\n                          var color = variables.ulm_card_media_player_color;\n                          return 'rgba(var(--color-' + color + '),0.2)';\n                        }\n                        return 'rgba(var(--color-theme),0.05)';\n                      ]]]\n                icon:\n                  - color: |\n                      [[[\n                        if(variables.ulm_card_media_player_enable_art &amp;&amp; states[entity.entity_id].attributes.entity_picture != null){\n                          return 'white'\n                        }\n                        if (variables.ulm_card_media_player_force_background_color &amp;&amp; variables.ulm_active_state) {\n                          var color = variables.ulm_card_media_player_color;\n                          return 'rgba(var(--color-' + color + '),1)';\n                        }\n                        return 'rgba(var(--color-theme),0.9)';\n                      ]]]\n          item3:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              hold_action:\n                action: &gt;\n                  [[[\n                      return variables.ulm_card_media_player_enable_popup ? \"fire-dom-event\" : \"more-info\";\n                  ]]]\n                browser_mod:\n                  service: \"browser_mod.popup\"\n                  data:\n                    large: true\n                    hide_header: true\n                    content:\n                      type: \"custom:button-card\"\n                      template: \"popup_media_player_infos\"\n                      entity: \"[[[ return entity.entity_id; ]]]\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"media_player.media_next_track\"\n                target:\n                  entity_id: \"[[[ return variables.ulm_card_media_player_player_controls_entity ]]]\"\n              icon: \"mdi:skip-next\"\n              styles:\n                card:\n                  - background-color: |\n                      [[[\n                        if(variables.ulm_card_media_player_enable_art &amp;&amp; states[entity.entity_id].attributes.entity_picture != null){\n                          return 'rgba(0, 0, 0, 0.2)'\n                        }\n                        if(!hass.themes.darkMode &amp;&amp; variables.ulm_card_media_player_force_background_color){\n                          if (variables.ulm_active_state){\n                            return 'rgb(250,250,250)'\n                          }\n                        }\n                        return 'rgba(var(--color-theme),0.05)'\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        if (variables.ulm_card_media_player_force_background_color &amp;&amp; variables.ulm_active_state &amp;&amp; !variables.ulm_card_media_player_enable_art) {\n                          var color = variables.ulm_card_media_player_color;\n                          return 'rgba(var(--color-' + color + '),0.2)';\n                        }\n                        return 'rgba(var(--color-theme),0.05)';\n                      ]]]\n                icon:\n                  - color: |\n                      [[[\n                        if(variables.ulm_card_media_player_enable_art &amp;&amp; states[entity.entity_id].attributes.entity_picture != null){\n                          return 'white'\n                        }\n                        if (variables.ulm_card_media_player_force_background_color &amp;&amp; variables.ulm_active_state) {\n                          var color = variables.ulm_card_media_player_color;\n                          return 'rgba(var(--color-' + color + '),1)';\n                        }\n                        return 'rgba(var(--color-theme),0.9)';\n                      ]]]\n          item4:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              icon: \"mdi:playlist-music\"\n              entity: \"[[[ return entity.entity_id; ]]]\"\n              styles:\n                card:\n                  - background-color: |\n                      [[[\n                        if(variables.ulm_card_media_player_enable_art &amp;&amp; states[entity.entity_id].attributes.entity_picture != null){\n                          return 'rgba(0, 0, 0, 0.2)'\n                        }\n                        if(!hass.themes.darkMode &amp;&amp; variables.ulm_card_media_player_force_background_color){\n                          if (variables.ulm_active_state){\n                            return 'rgb(250,250,250)'\n                          }\n                        }\n                        return 'rgba(var(--color-theme),0.05)'\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        if (variables.ulm_card_media_player_force_background_color &amp;&amp; variables.ulm_active_state &amp;&amp; !variables.ulm_card_media_player_enable_art) {\n                          var color = variables.ulm_card_media_player_color;\n                          return 'rgba(var(--color-' + color + '),0.2)';\n                        }\n                        return 'rgba(var(--color-theme),0.05)';\n                      ]]]\n                icon:\n                  - color: |\n                      [[[\n                        if(variables.ulm_card_media_player_enable_art &amp;&amp; states[entity.entity_id].attributes.entity_picture != null){\n                          return 'white'\n                        }\n                        if (variables.ulm_card_media_player_force_background_color &amp;&amp; variables.ulm_active_state) {\n                          var color = variables.ulm_card_media_player_color;\n                          return 'rgba(var(--color-' + color + '),1)';\n                        }\n                        return 'rgba(var(--color-theme),0.9)';\n                      ]]]\n              hold_action:\n                action: &gt;\n                  [[[\n                      return variables.ulm_card_media_player_enable_popup &amp;&amp; entity.attributes?.source_list ? \"fire-dom-event\" : \"more-info\";\n                  ]]]\n                browser_mod:\n                  service: \"browser_mod.popup\"\n                  data:\n                    large: true\n                    hide_header: true\n                    content:\n                      type: \"custom:button-card\"\n                      template: \"popup_media_player_source_card\"\n                      entity: \"[[[ return entity.entity_id; ]]]\"\n              tap_action:\n                action: &gt;\n                  [[[\n                      return variables.ulm_card_media_player_enable_popup &amp;&amp; entity.attributes?.source_list ? \"fire-dom-event\" : \"more-info\";\n                  ]]]\n                browser_mod:\n                  service: \"browser_mod.popup\"\n                  data:\n                    large: true\n                    hide_header: true\n                    style: |\n                      --popup-background-color: var(--primary-background-color);\n                      --popup-border-radius: 20px;\n                      --popup-padding-x: 24px;\n                      --popup-padding-y: 20px;\n                      --popup-max-width: auto\n                      --popup-min-width: 800px;\n                    card_mod:\n                      style:\n                        ha-dialog$: |\n                          @media (max-width: 800px){\n                            div.mdc-dialog__container {\n                              --mdc-dialog-min-width: 100vw;\n                              --mdc-dialog-max-width: 100vw;\n                              --mdc-dialog-min-height: 100%;\n                              --ha-dialog-border-radius: 0px;\n                            }\n                          }\n                    content:\n                      type: \"custom:button-card\"\n                      template: \"popup_media_player_source_card\"\n                      entity: \"[[[ return entity.entity_id; ]]]\"\n    item3:\n      card:\n        type: \"custom:my-slider\"\n        entity: \"[[[ return entity.entity_id ]]]\"\n        radius: \"14px\"\n        height: \"42px\"\n        mainSliderColor: |\n          [[[\n            var color = variables.ulm_card_media_player_color;\n            if(variables.ulm_card_media_player_enable_art &amp;&amp; states[entity.entity_id].attributes.entity_picture != null){\n              return 'rgba(0, 0, 0, 0.5)'\n            }\n            if (variables.ulm_card_media_player_force_background_color &amp;&amp; variables.ulm_active_state) {\n              return 'rgb(250,250,250)';\n            }\n            return 'rgba(var(--color-' + color + '),1)'\n          ]]]\n        secondarySliderColor: |\n          [[[\n            var color = variables.ulm_card_media_player_color;\n            if(variables.ulm_card_media_player_enable_art &amp;&amp; states[entity.entity_id].attributes.entity_picture != null){\n              return 'rgba(0, 0, 0, 0.3)'\n            }\n            if (variables.ulm_card_media_player_force_background_color) {\n              return 'rgba(var(--color-' + color + '),0.3)';\n            }\n            return 'rgba(var(--color-' + color + '),0.2)'\n          ]]]\n        mainSliderColorOff: \"rgba(var(--color-theme),0.05)\"\n        secondarySliderColorOff: \"rgba(var(--color-theme),0.05)\"\n        thumbHorizontalPadding: \"0px\"\n        thumbVerticalPadding: \"0px\"\n        thumbWidth: \"0px\"\n        card_mod:\n          style: |\n            ha-card {\n              border-radius: 14px;\n              background-color: transparent;\n              box-shadow: none;\n            }\n    item4:\n      card:\n        type: \"custom:button-card\"\n        template: \"list_3_items\"\n        styles:\n          card:\n            - padding: \"0px\"\n            - background: \"none\"\n            - border-radius: \"0\"\n            - box-shadow: \"none\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              entity: \"[[[ return variables.ulm_card_media_player_player_controls_entity ]]]\"\n              hold_action:\n                action: &gt;\n                  [[[\n                      return variables.ulm_card_media_player_enable_popup ? \"fire-dom-event\" : \"more-info\";\n                  ]]]\n                browser_mod:\n                  service: \"browser_mod.popup\"\n                  data:\n                    large: true\n                    hide_header: true\n                    content:\n                      type: \"custom:button-card\"\n                      template: \"popup_media_player_infos\"\n                      entity: \"[[[ return entity.entity_id; ]]]\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"media_player.volume_mute\"\n                target:\n                  entity_id: \"[[[ return variables.ulm_card_media_player_player_controls_entity ]]]\"\n                data:\n                  is_volume_muted: \"[[[ return (states[entity.entity_id].attributes.is_volume_muted) ? false : true; ]]]\"\n              icon: \"mdi:volume-mute\"\n              styles:\n                card:\n                  - background-color: |\n                      [[[\n                        if(variables.ulm_card_media_player_enable_art &amp;&amp; states[entity.entity_id].attributes.entity_picture != null){\n                          return 'rgba(0, 0, 0, 0.2)'\n                        }\n                        if(!hass.themes.darkMode &amp;&amp; variables.ulm_card_media_player_force_background_color){\n                          if (variables.ulm_active_state){\n                            return 'rgb(250,250,250)'\n                          }\n                        }\n                        return 'rgba(var(--color-theme),0.05)'\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        if (variables.ulm_card_media_player_force_background_color &amp;&amp; variables.ulm_active_state &amp;&amp; !variables.ulm_card_media_player_enable_art) {\n                          var color = variables.ulm_card_media_player_color;\n                          return 'rgba(var(--color-' + color + '),0.2)';\n                        }\n                        return 'rgba(var(--color-theme),0.05)';\n                      ]]]\n                icon:\n                  - color: |\n                      [[[\n                        if(variables.ulm_card_media_player_enable_art &amp;&amp; states[entity.entity_id].attributes.entity_picture != null){\n                          return 'white'\n                        }\n                        if (variables.ulm_card_media_player_force_background_color &amp;&amp; variables.ulm_active_state) {\n                          var color = variables.ulm_card_media_player_color;\n                          return 'rgba(var(--color-' + color + '),1)';\n                        }\n                        return 'rgba(var(--color-theme),0.9)';\n                      ]]]\n          item2:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              entity: \"[[[ return variables.ulm_card_media_player_player_controls_entity ]]]\"\n              hold_action:\n                action: &gt;\n                  [[[\n                      return variables.ulm_card_media_player_enable_popup ? \"fire-dom-event\" : \"more-info\";\n                  ]]]\n                browser_mod:\n                  service: \"browser_mod.popup\"\n                  data:\n                    large: true\n                    hide_header: true\n                    content:\n                      type: \"custom:button-card\"\n                      template: \"popup_media_player_infos\"\n                      entity: \"[[[ return entity.entity_id; ]]]\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"media_player.volume_set\"\n                target:\n                  entity_id: \"[[[ return variables.ulm_card_media_player_player_controls_entity ]]]\"\n                data:\n                  volume_level: |\n                    [[[\n                      var volume = states[entity.entity_id].attributes.volume_level;\n                      if (variables.ulm_card_media_player_enable_volume_adjust != 0) {\n                          volume = states[entity.entity_id].attributes.volume_level - variables.ulm_card_media_player_enable_volume_adjust;\n                      } else {\n                          if (states[entity.entity_id].attributes.device_class === \"tv\") {\n                              volume = states[entity.entity_id].attributes.volume_level - 0.01;\n                          }\n                          if (states[entity.entity_id].attributes.device_class === \"speaker\") {\n                              volume = states[entity.entity_id].attributes.volume_level - 0.05;\n                          }\n                          if (states[entity.entity_id].attributes.device_class === \"receiver\") {\n                              volume = states[entity.entity_id].attributes.volume_level - 0.025;\n                          } else {\n                              volume = states[entity.entity_id].attributes.volume_level - 0.025;\n                          }\n                      }\n                      return volume;\n                    ]]]\n              icon: \"mdi:volume-minus\"\n              styles:\n                card:\n                  - background-color: |\n                      [[[\n                        if(variables.ulm_card_media_player_enable_art &amp;&amp; states[entity.entity_id].attributes.entity_picture != null){\n                          return 'rgba(0, 0, 0, 0.2)'\n                        }\n                        if(!hass.themes.darkMode &amp;&amp; variables.ulm_card_media_player_force_background_color){\n                          if (variables.ulm_active_state){\n                            return 'rgb(250,250,250)'\n                          }\n                        }\n                        return 'rgba(var(--color-theme),0.05)'\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        if (variables.ulm_card_media_player_force_background_color &amp;&amp; variables.ulm_active_state &amp;&amp; !variables.ulm_card_media_player_enable_art) {\n                          var color = variables.ulm_card_media_player_color;\n                          return 'rgba(var(--color-' + color + '),0.2)';\n                        }\n                        return 'rgba(var(--color-theme),0.05)';\n                      ]]]\n                icon:\n                  - color: |\n                      [[[\n                        if(variables.ulm_card_media_player_enable_art &amp;&amp; states[entity.entity_id].attributes.entity_picture != null){\n                          return 'white'\n                        }\n                        if (variables.ulm_card_media_player_force_background_color &amp;&amp; variables.ulm_active_state) {\n                          var color = variables.ulm_card_media_player_color;\n                          return 'rgba(var(--color-' + color + '),1)';\n                        }\n                        return 'rgba(var(--color-theme),0.9)';\n                      ]]]\n          item3:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              entity: \"[[[ return variables.ulm_card_media_player_player_controls_entity ]]]\"\n              hold_action:\n                action: &gt;\n                  [[[\n                      return variables.ulm_card_media_player_enable_popup ? \"fire-dom-event\" : \"more-info\";\n                  ]]]\n                browser_mod:\n                  service: \"browser_mod.popup\"\n                  data:\n                    large: true\n                    hide_header: true\n                    content:\n                      type: \"custom:button-card\"\n                      template: \"popup_media_player_infos\"\n                      entity: \"[[[ return entity.entity_id; ]]]\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"media_player.volume_set\"\n                target:\n                  entity_id: \"[[[ return variables.ulm_card_media_player_player_controls_entity ]]]\"\n                data:\n                  volume_level: |\n                    [[[\n                      var volume = states[entity.entity_id].attributes.volume_level;\n                      if (variables.ulm_card_media_player_enable_volume_adjust != 0) {\n                          volume = states[entity.entity_id].attributes.volume_level + variables.ulm_card_media_player_enable_volume_adjust;\n                      } else {\n                          if (states[entity.entity_id].attributes.device_class === \"tv\") {\n                              volume = states[entity.entity_id].attributes.volume_level + 0.01;\n                          }\n                          if (states[entity.entity_id].attributes.device_class === \"speaker\") {\n                              volume = states[entity.entity_id].attributes.volume_level + 0.05;\n                          }\n                          if (states[entity.entity_id].attributes.device_class === \"receiver\") {\n                              volume = states[entity.entity_id].attributes.volume_level + 0.025;\n                          } else {\n                              volume = states[entity.entity_id].attributes.volume_level + 0.025;\n                          }\n                      }\n                      return volume;\n                    ]]]\n              icon: \"mdi:volume-plus\"\n              styles:\n                card:\n                  - background-color: |\n                      [[[\n                        if(variables.ulm_card_media_player_enable_art &amp;&amp; states[entity.entity_id].attributes.entity_picture != null){\n                          return 'rgba(0, 0, 0, 0.2)'\n                        }\n                        if(!hass.themes.darkMode &amp;&amp; variables.ulm_card_media_player_force_background_color){\n                          if (variables.ulm_active_state){\n                            return 'rgb(250,250,250)'\n                          }\n                        }\n                        return 'rgba(var(--color-theme),0.05)'\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        if (variables.ulm_card_media_player_force_background_color &amp;&amp; variables.ulm_active_state &amp;&amp; !variables.ulm_card_media_player_enable_art) {\n                          var color = variables.ulm_card_media_player_color;\n                          return 'rgba(var(--color-' + color + '),0.2)';\n                        }\n                        return 'rgba(var(--color-theme),0.05)';\n                      ]]]\n                icon:\n                  - color: |\n                      [[[\n                        if(variables.ulm_card_media_player_enable_art &amp;&amp; states[entity.entity_id].attributes.entity_picture != null){\n                          return 'white'\n                        }\n                        if (variables.ulm_card_media_player_force_background_color &amp;&amp; variables.ulm_active_state) {\n                          var color = variables.ulm_card_media_player_color;\n                          return 'rgba(var(--color-' + color + '),1)';\n                        }\n                        return 'rgba(var(--color-theme),0.9)';\n                      ]]]\n</code></pre>"},{"location":"usage/cards/card_navigate/","title":"Navigate Card","text":""},{"location":"usage/cards/card_navigate/#description","title":"Description","text":"<p>The <code>card_navigate</code> is for navigating inside your HA dashboard(s).</p>"},{"location":"usage/cards/card_navigate/#variables","title":"Variables","text":"Variable Default Required Notes ulm_card_navigate_path The path to your lovelace dashboard ulm_card_navigate_title Title to show for the link ulm_card_navigate_icon Icon to show ulm_card_navigate_color Blue No Color of Icon"},{"location":"usage/cards/card_navigate/#usage","title":"Usage","text":"<pre><code>- type: custom:button-card\n  template: card_navigate\n  variables:\n    ulm_card_navigate_path: /ui-lovelace-minimalist/media\n    ulm_card_navigate_title: Media\n    ulm_card_navigate_icon: mdi:television\n    ulm_card_navigate_color: var(--color-red)\n</code></pre> Template Code card_navigate.yaml<pre><code>---\n### Card Navigate ###\ncard_navigate:\n  template:\n    - \"icon_only\"\n  tap_action:\n    action: \"navigate\"\n    navigation_path: \"[[[ return variables.ulm_card_navigate_path; ]]]\"\n  variables:\n    ulm_card_navigate_color: \"var(--color-blue)\"\n  label: \"[[[ return variables.ulm_card_navigate_title; ]]]\"\n  icon: \"[[[ return variables.ulm_card_navigate_icon; ]]]\"\n  styles:\n    icon:\n      - color: &gt;\n          [[[\n            let color = variables.ulm_card_navigate_color;\n            return \"rgba(\" + color + \",0.7)\"\n          ]]]\n    label:\n      - align-self: \"center\"\n      - font-size: \"14px\"\n      - filter: \"opacity(100%)\"\n    grid:\n      - grid-template-columns: \"min-content min-content\"\n</code></pre>"},{"location":"usage/cards/card_person/","title":"Person Card","text":""},{"location":"usage/cards/card_person/#description","title":"Description","text":"<p>The <code>card_person</code> shows if a person is <code>home</code> or <code>not_home</code>. If you have setup other zones, it will show these as well.</p>"},{"location":"usage/cards/card_person/#variables","title":"Variables","text":"Variable Default Required Notes entity The person entity ulm_card_person_entity The person entity ulm_card_person_use_entity_picture If you set this to true, the card shows the entity picture from your user, otherwise (set to false) shows the icon. Default is false. ulm_card_person_icon mdi:face-man Sets the icon to display if entity picture not shown. ulm_card_person_battery Battery sensor shown in the upper right corner ulm_card_person_eta Sensor with ETA info from integrations like: Waze, Google and HERE ulm_address Show an address as label, add an entity with a geo location"},{"location":"usage/cards/card_person/#usage","title":"Usage","text":"<pre><code>- type: 'custom:button-card'\n  template: card_person\n  entity: person.username\n  variables:\n    ulm_card_person_entity: person.username\n    ulm_card_person_use_entity_picture: true\n    ulm_card_person_icon: mdi:face-woman\n    ulm_card_person_battery: sensor.battery_iphone\n    ulm_card_person_eta: sensor.waze_travel_time_person\n    ulm_address: sensor.s10_mike_gegeocodeerde_locatie\n</code></pre> Template Code card_person.yaml<pre><code>---\n### Card Person ###\ncard_person:\n  template:\n    - \"icon_info_bg\"\n    - \"ulm_translation_engine\"\n  variables:\n    ulm_card_person_use_entity_picture: false\n    ulm_card_person_icon: \"mdi:face-man\"\n    ulm_address: \"\"\n  triggers_update:\n    - \"[[[ return variables.ulm_card_person_entity ]]]\"\n    - \"[[[ return variables.ulm_card_person_eta ]]]\"\n    - \"[[[ return variables.ulm_address ]]]\"\n  tap_action:\n    action: \"more-info\"\n  show_label: true\n  show_name: true\n  label: &gt;\n    [[[\n      let translation = helpers.localize(entity)\n      var eta = \"\"\n      if (variables.ulm_card_person_eta &amp;&amp; entity.state != 'home'){\n        eta = \" | \" + helpers.localize(states[variables.ulm_card_person_eta]);\n      }\n      if (variables.ulm_address){\n        return helpers.localize(states[variables.ulm_address]) + eta;\n      }\n      return translation + eta\n    ]]]\n  name: \"[[[ return entity.attributes.friendly_name ]]]\"\n  entity: \"[[[ return variables.ulm_card_person_entity; ]]]\"\n  icon: \"[[[ return variables.ulm_card_person_icon; ]]]\"\n  show_entity_picture: \"[[[ return variables.ulm_card_person_use_entity_picture ]]]\"\n  entity_picture:\n    \"[[[ return variables.ulm_card_person_use_entity_picture ? entity.attributes.entity_picture\\\n    \\ : null ]]]\"\n  styles:\n    icon:\n      - color: \"rgba(var(--color-theme),0.9)\"\n      - width: &gt;\n          [[[\n            return !variables.ulm_card_person_use_entity_picture ? \"20px\" : \"42px\";\n          ]]]\n      - place-self: &gt;\n          [[[\n            return !variables.ulm_card_person_use_entity_picture ? \"center\" : \"stretch stretch\";\n          ]]]\n    custom_fields:\n      notification:\n        - border-radius: \"50%\"\n        - position: \"absolute\"\n        - left: \"38px\"\n        - top: \"8px\"\n        - height: \"16px\"\n        - width: \"16px\"\n        - border: \"2px solid var(--card-background-color)\"\n        - font-size: \"12px\"\n        - line-height: \"14px\"\n        - background-color: &gt;\n            [[[\n              return (entity.state !== 'home') ? \"rgba(var(--color-green),1)\" : \"rgba(var(--color-blue),1)\";\n            ]]]\n      info:\n        - position: \"absolute\"\n        - right: \"6px\"\n        - top: \"6px\"\n        - width: \"25px\"\n        - height: \"25px\"\n  custom_fields:\n    notification: &gt;\n      [[[\n        if (entity.state == 'home') {\n            return '&lt;ha-icon icon=\"mdi:home-variant\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;';\n        } else {\n            for (let st in states) {\n                if (st.startsWith(\"zone.\")) {\n                    if (states[st]?.attributes?.persons?.includes(entity.state) &amp;&amp; !states[st]?.attributes?.passive) {\n                        var icon = states[st].attributes.icon !== null ? states[st].attributes.icon : 'mdi:help-circle';\n                        return '&lt;ha-icon icon=\"' + icon + '\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;';\n                    }\n                }\n            }\n        }\n        return '&lt;ha-icon icon=\"mdi:home-minus\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;';\n      ]]]\n    info: |\n      [[[\n        if(variables.ulm_card_person_battery){\n        const battery = Math.round(states[variables.ulm_card_person_battery].state/1);\n        const radius = 20.5; const circumference = radius * 2 * Math.PI;\n        return `&lt;svg viewBox=\"0 0 50 50\"&gt;&lt;circle cx=\"25\" cy=\"25\" r=\"${radius}\"\n        stroke=\"green\" stroke-width=\"3\" fill=\"none\"\n        style=\"transform: rotate(-90deg); transform-origin: 50% 50%;\n        stroke-dasharray: ${circumference};\n        stroke-dashoffset: ${circumference - battery / 100 * circumference};\" /&gt;\n        &lt;text x=\"50%\" y=\"54%\" fill=\"var(--primary-text-color)\" font-size=\"16\" font-weight= \"bold\"\n        text-anchor=\"middle\" alignment-baseline=\"middle\"&gt;\n        ${battery}&lt;tspan font-size=\"10\"&gt;%&lt;/tspan&gt;&lt;/text&gt;&lt;/svg&gt;`;\n        }\n      ]]]\n</code></pre>"},{"location":"usage/cards/card_power_outlet/","title":"Power Outlet Card","text":""},{"location":"usage/cards/card_power_outlet/#description","title":"Description","text":"<p>This is the <code>power-outlet-card</code>. It shows you the state of a power outlet, and if configured, the actual power consumption of the power outlet.</p>"},{"location":"usage/cards/card_power_outlet/#variables","title":"Variables","text":"Variable Default Required Notes entity ulm_card_power_outlet_name Set custom Name ulm_card_power_outlet_icon Set custom Icon ulm_card_power_outlet_consumption_sensor If you set this sensor, the <code>power-outlet-card</code> shows the energy consumption next to the state. ulm_card_power_outlet_color <code>yellow</code> Set Custom Color ulm_card_power_outlet_force_background_color <code>false</code> Set <code>ulm_card_power_outlet_color</code> as background color in active state `"},{"location":"usage/cards/card_power_outlet/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: card_power_outlet\n  variables:\n    ulm_card_power_outlet_consumption_sensor: sensor.power_outlet_livingroom_consumption\n    ulm_card_power_outlet_name: Power Outlet Livingroom\n  entity: switch.power_outlet_livingroom\n</code></pre> Template Code card_power_outlet.yaml<pre><code>---\n### Card Power Outlet ###\ncard_power_outlet:\n  template:\n    - \"icon_more_info_new\"\n    - \"ulm_translation_engine\"\n  variables:\n    ulm_card_power_outlet_consumption_sensor:\n    ulm_card_power_outlet_name: \"[[[ return entity.attributes.friendly_name ]]]\"\n    ulm_card_power_outlet_icon: \"[[[ return entity.attributes.icon ]]]\"\n    ulm_outlet_power_enable_popup: false\n    ulm_card_power_outlet_color: \"yellow\"\n    ulm_card_power_outlet_force_background_color: false\n  state:\n    - operator: \"template\"\n      value: \"[[[ return variables.ulm_active_state ]]]\"\n      styles:\n        card:\n          - background-color: &gt;\n              [[[\n                if (variables.ulm_card_power_outlet_force_background_color) {\n                  var color = variables.ulm_card_power_outlet_color;\n                  return 'rgba(var(--color-' + color + '),var(--opacity-bg))';\n                }\n              ]]]\n  triggers_update:\n    - \"[[[ return variables.ulm_card_power_outlet_consumption_sensor ]]]\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              icon: \"[[[ return variables.ulm_card_power_outlet_icon ]]]\"\n              variables: &gt;\n                [[[\n                  let vars = variables;\n\n                  if(variables.ulm_outlet_power_enable_popup) {\n                    vars.ulm_custom_popup = {\n                      'template': 'popup_power_outlet_stats',\n                      'popup_variables': {'ulm_popup_power_outlet_sensor1': variables.ulm_popup_power_outlet_sensor1,\n                        'ulm_popup_power_outlet_sensor2': variables.ulm_popup_power_outlet_sensor2,\n                        'ulm_popup_power_outlet_graph_sensor': variables.ulm_popup_power_outlet_graph_sensor}\n                    };\n                  }\n                  return vars;\n                ]]]\n              styles:\n                icon:\n                  - color: &gt;\n                      [[[\n                        var color = variables.ulm_card_power_outlet_color;\n                        if (variables.ulm_active_state){\n                          return 'rgba(var(--color-' + color + '),1)';\n                        }\n                        return 'rgba(var(--color-theme),0.2)';\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        var color = variables.ulm_card_power_outlet_color;\n                        if (variables.ulm_active_state){\n                          return 'rgba(var(--color-' + color + '),0.2)';\n                        }\n                        return 'rgba(var(--color-theme),0.05)';\n                      ]]]\n          item2:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              name: \"[[[ return variables.ulm_card_power_outlet_name ]]]\"\n              label: |-\n                [[[\n                  if (entity.state === \"on\" &amp;&amp; variables.ulm_card_power_outlet_consumption_sensor !== null) {\n                    return variables.ulm_translation_state + \" \u2022 \" + states[variables.ulm_card_power_outlet_consumption_sensor].state + \"W\";\n                  } else {\n                    return variables.ulm_translation_state;\n                  }\n                ]]]\n              variables: &gt;\n                [[[\n                  let vars = variables;\n\n                  if(variables.ulm_outlet_power_enable_popup) {\n                    vars.ulm_custom_popup = {\n                      'template': 'popup_power_outlet_stats',\n                      'popup_variables': {'ulm_popup_power_outlet_sensor1': variables.ulm_popup_power_outlet_sensor1,\n                        'ulm_popup_power_outlet_sensor2': variables.ulm_popup_power_outlet_sensor2,\n                        'ulm_popup_power_outlet_graph_sensor': variables.ulm_popup_power_outlet_graph_sensor}\n                    };\n                  }\n                  return vars;\n                ]]]\n              state:\n                - operator: \"template\"\n                  value: \"[[[ return variables.ulm_active_state ]]]\"\n                  styles:\n                    name:\n                      - color: &gt;\n                          [[[\n                              if (variables.ulm_card_power_outlet_force_background_color) {\n                                  return 'rgb(250,250,250)';\n                              }\n                          ]]]\n                    label:\n                      - color: &gt;\n                          [[[\n                              if (variables.ulm_card_power_outlet_force_background_color) {\n                                  return 'rgb(250,250,250)';\n                              }\n                          ]]]\n</code></pre>"},{"location":"usage/cards/card_room/","title":"Room Card","text":""},{"location":"usage/cards/card_room/#description","title":"Description","text":"<p>This is the <code>room-card</code>, used to show the state of single room in a quick glance. The card has support for up to 4 subicons at the right side of the card. These can be configured using custom colors and tap actions.</p>"},{"location":"usage/cards/card_room/#variables","title":"Variables","text":"Variable Default Required Notes Requirement label_use_temperature <code>true</code> Define whether the label should show the current room temperatureThe temperature should be provide by either a <code>temperature</code> or <code>current_temperature</code> attribute or by the entity state label_use_brightness <code>false</code> Define whether the label should show the current room brightness of the lightsRequires <code>label_use_temperature</code> to be false entity_1 a <code>room_entity</code> object (see below) entity_2 a <code>room_entity</code> object (see below) entity_3 a <code>room_entity</code> object (see below) entity_4 a <code>room_entity</code> object (see below)"},{"location":"usage/cards/card_room/#room-entity","title":"Room entity","text":"Variable Default Required Notes Requirement entity_id The entity_id of the status icon templates List of the additional button card templates to apply to this icon tap_action tap_action for the icon (see button card documentation for options) hold_action tap_action for the icon (see button card documentation for options)"},{"location":"usage/cards/card_room/#default-card-options","title":"Default card options","text":"<p>All the options from the button card are still available for the large room card. If you want to tweak this card a little bit more, below are some examples. The full list can be found here: link</p> Options Default Required Notes Requirement entity The entity_id for the large card icon Icon to display. Defaults to the entity icon tap_action Define the type of action on click, if undefined, toggle will be used.See Action hold_action Define the type of action on hold, if undefined, nothing happens See Action label Change the label text title Change the title text"},{"location":"usage/cards/card_room/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template:\n    - card_room\n    - red_no_state\n  name: Bathroom\n  entity: light.bathroom\n  icon: mdi:shower-head\n  tap_action:\n    action: navigate\n    navigation_path: \"/ui-lovelace-minimalist/bathroom\"\n  variables:\n    label_use_temperature: false\n    label_use_brightness: true\n    entity_1:\n      entity_id: light.bathroom\n      templates:\n        - yellow_on\n      tap_action:\n        action: toggle\n    entity_2:\n      entity_id: binary_sensor.badkamer_motion_sensor\n      templates:\n        - blue_on\n      tap_action:\n        action: none\n    entity_3:\n      entity_id: input_boolean.badkamer_motionsensor_enabled\n      templates:\n        - green_on\n        - red_off\n      tap_action:\n        action: toggle\n    entity_4:\n      entity_id: input_boolean.bath_mode\n      templates:\n        - pink_on\n      tap_action:\n        action: toggle\n</code></pre> Template Code card_room.yaml<pre><code>---\ncard_room:\n  template:\n    - \"ulm_translation_engine\"\n  variables:\n    label_use_temperature: true\n    label_use_brightness: false\n  double_tap_action:\n    action: \"perform-action\"\n    perform_action: \"input_select.select_option\"\n    target:\n      entity_id: \"[[[ return variables.ulm_input_select ]]]\"\n    data:\n      option: \"[[[ return variables.ulm_input_select_option ]]]\"\n  color: \"var(--google-grey-500)\"\n  size: \"45%\"\n  aspect_ratio: \"1/1\"\n  show_icon: true\n  show_label: true\n  show_name: true\n  icon: \"mdi:sofa-single\"\n  label: |-\n    [[[\n      if (variables.label_use_temperature) {\n        return (entity?.attributes?.current_temperature || entity?.attributes?.temperature || entity?.attributes?.device_temperature || entity?.state || '-') + (entity?.attributes?.unit_of_measurement || '\u00b0C');\n      } else if (variables.label_use_brightness &amp;&amp; entity?.state == \"on\" &amp;&amp; entity?.attributes?.brightness != null) {\n        let bri = Math.round(entity?.attributes?.brightness / 2.55);\n        return (bri ? bri : \"0\") + \"%\";\n      }\n      return variables.ulm_translation_state;\n    ]]]\n  state:\n    - value: \"unavailable\"\n      styles:\n        custom_fields:\n          notification:\n            - border-radius: \"50%\"\n            - border: \"2px solid var(--card-background-color)\"\n            - width: \"24.5px\"\n            - height: \"24.5px\"\n            - position: \"absolute\"\n            - left: \"50%\"\n            - top: \"50%\"\n            - transform: \"translate(-50%,-50%)\"\n            - margin-top: \"35%\"\n            - margin-left: \"-35%\"\n            - line-height: 0\n            - display: \"grid\"\n            - background-color: \"[[[ return 'rgba(var(--color-red),1)'; ]]]\"\n  styles:\n    icon:\n      - color: \"rgba(var(--color-theme),0.2)\"\n    label:\n      - justify-self: \"start\"\n      - align-self: \"start\"\n      - font-weight: \"bold\"\n      - font-size: \"14px\"\n      - filter: \"opacity(40%)\"\n      - margin-left: \"12px\"\n      - max-width: \"[[[ return `calc(100% - (12px + ${!variables?.entity_1 &amp;&amp; !variables?.entity_2 ? 5 : 0}px))`; ]]]\"\n      - text-overflow: \"ellipsis\"\n      - overflow: \"hidden\"\n      - margin-top: \"[[[ return !variables?.entity_1 ? '-24%' : '-10%'; ]]]\"\n    name:\n      - justify-self: \"start\"\n      - align-self: \"end\"\n      - font-weight: \"bold\"\n      - font-size: \"18px\"\n      - margin-left: \"12px\"\n      - margin-bottom: \"[[[ return !variables?.entity_1 ? (!variables?.entity_2 ? '15.8%' : '24%') : '10%'; ]]]\"\n      - max-width: \"[[[ return `calc(100% - (12px + ${!variables?.entity_2 ? 5 : 0}px))`; ]]]\"\n      - text-overflow: \"ellipsis\"\n      - overflow: \"hidden\"\n    state:\n      - justify-self: \"start\"\n      - font-weight: \"bold\"\n      - font-size: \"12px\"\n      - filter: \"opacity(40%)\"\n      - margin-left: \"6px\"\n    img_cell:\n      - background-color: \"rgba(var(--color-theme),0.05)\"\n      - border-radius: \"50%\"\n      - width: \"75%\"\n      - height: \"75%\"\n      - max-width: \"none\"\n      - max-height: \"none\"\n      - position: \"absolute\"\n      - left: \"50%\"\n      - top: \"50%\"\n      - transform: \"translate(-50%,-50%)\"\n      - margin-top: \"25%\"\n      - margin-left: \"-25%\"\n    grid:\n      - grid-template-areas: \"[[[ return !variables?.entity_1 ? (!variables?.entity_2 ? `'n n n' 'l l i3' 'i i i4'` : `'n n i2' 'l l i3' 'i i i4'`) : `'n n n i1' 'l l l i2' 'i i . i3' 'i i . i4'`; ]]]\"\n      - grid-template-columns: \"[[[ return !variables?.entity_1 ? '1fr 1fr 1fr' : '1fr 1fr 1fr 1fr'; ]]]\"\n      - grid-template-rows: \"[[[ return !variables?.entity_1 ? '1fr 1fr 1fr' : '1fr 1fr 1fr 1fr'; ]]]\"\n      - justify-items: \"center\"\n    card:\n      - border-radius: \"20px\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"5px\"\n    custom_fields:\n      i1: &amp;widget_icon_room_styling\n        - border-radius: \"50%\"\n        - width: \"80%\"\n        - height: \"80%\"\n        - line-height: 0\n        - display: \"grid\"\n      i2: *widget_icon_room_styling\n      i3: *widget_icon_room_styling\n      i4: *widget_icon_room_styling\n  custom_fields:\n    notification: &gt;\n      [[[\n        if (entity?.state == 'unavailable'){\n          return '&lt;ha-icon icon=\"mdi:exclamation\" style=\"width: 50%; height: 50%; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;';\n        }\n      ]]]\n\n    i1:\n      card:\n        type: \"custom:button-card\"\n        template: &gt;\n          [[[\n            let templates = [ 'widget_icon_room' ];\n            if (variables?.entity_1?.templates?.length) {\n              templates.push(...variables.entity_1.templates);\n            }\n            return templates;\n          ]]]\n        variables: \"[[[ return variables?.entity_1; ]]]\"\n        state:\n          - operator: \"template\"\n            value: \"[[[ return !variables.entity_1; ]]]\"\n            styles:\n              card:\n                - display: \"none\"\n        entity: \"[[[ return variables?.entity_1?.entity_id; ]]]\"\n\n    i2:\n      card:\n        type: \"custom:button-card\"\n        template: &gt;\n          [[[\n            let templates = [ 'widget_icon_room' ];\n            if (variables?.entity_2?.templates?.length) {\n              templates.push(...variables.entity_2.templates);\n            }\n            return templates;\n          ]]]\n        variables: \"[[[ return variables?.entity_2; ]]]\"\n        state:\n          - operator: \"template\"\n            value: \"[[[ return !variables.entity_2; ]]]\"\n            styles:\n              card:\n                - display: \"none\"\n        entity: \"[[[ return variables?.entity_2?.entity_id; ]]]\"\n\n    i3:\n      card:\n        type: \"custom:button-card\"\n        template: &gt;\n          [[[\n            let templates = [ 'widget_icon_room' ];\n            if (variables?.entity_3?.templates?.length) {\n              templates.push(...variables.entity_3.templates);\n            }\n            return templates;\n          ]]]\n        variables: \"[[[ return variables?.entity_3; ]]]\"\n        state:\n          - operator: \"template\"\n            value: \"[[[ return !variables.entity_3; ]]]\"\n            styles:\n              card:\n                - display: \"none\"\n        entity: \"[[[ return variables?.entity_3?.entity_id; ]]]\"\n\n    i4:\n      card:\n        type: \"custom:button-card\"\n        template: &gt;\n          [[[\n            let templates = [ 'widget_icon_room' ];\n            if (variables?.entity_4?.templates?.length) {\n              templates.push(...variables.entity_4.templates);\n            }\n            return templates;\n          ]]]\n        variables: \"[[[ return variables?.entity_4; ]]]\"\n        state:\n          - operator: \"template\"\n            value: \"[[[ return !variables.entity_4; ]]]\"\n            styles:\n              card:\n                - display: \"none\"\n        entity: \"[[[ return variables?.entity_4?.entity_id; ]]]\"\n\nwidget_icon_room:\n  variables:\n    tap_action:\n      action: \"toggle\"\n    hold_action:\n      action: \"more-info\"\n  tap_action:\n    action: \"[[[ return variables?.tap_action?.action ? variables.tap_action.action : 'none'; ]]]\"\n    entity: \"[[[ return variables.tap_action.entity; ]]]\"\n    navigation_path: \"[[[ return variables.tap_action.navigation_path; ]]]\"\n    url_path: \"[[[ return variables.tap_action.url_path; ]]]\"\n    perform_action: \"[[[ return variables.tap_action.service; ]]]\"\n    data: \"[[[ return variables.tap_action.service_data; ]]]\"\n  hold_action:\n    action: \"[[[ return variables?.hold_action?.action ? variables.hold_action.action : 'none'; ]]]\"\n    entity: \"[[[ return variables.hold_action.entity; ]]]\"\n    navigation_path: \"[[[ return variables.hold_action.navigation_path; ]]]\"\n    url_path: \"[[[ return variables.hold_action.url_path; ]]]\"\n    perform_action: \"[[[ return variables.hold_action.service; ]]]\"\n    data: \"[[[ return variables.hold_action.service_data; ]]]\"\n  size: \"15px\"\n  color: \"var(--google-grey)\"\n  show_icon: true\n  show_name: false\n  styles:\n    icon:\n      - width: \"50%\"\n      - height: \"50%\"\n      - line-height: \"0\"\n      - color: \"rgba(var(--color-theme),0.2)\"\n    img_cell:\n      - border-radius: \"50%\"\n      - background-color: \"rgba(var(--color-theme),0.05)\"\n    grid:\n      - grid-template-areas: \"'i'\"\n    card:\n      - height: \"100%\"\n      - box-shadow: \"none\"\n      - padding: \"0px\"\n      - border-radius: \"50%\"\n</code></pre>"},{"location":"usage/cards/card_scenes/","title":"Scenes Card","text":""},{"location":"usage/cards/card_scenes/#description","title":"Description","text":"<p>This card is part of the Welcome Scenes card and can be used separately to only show the scene pills. It has the same features set as the pills in the Welcome Scenes card.</p>"},{"location":"usage/cards/card_scenes/#variables","title":"Variables","text":"Variable Default Required Notes entity_1 auto-entities Can be any common type of entity  if no entity is specified defaults to auto-entities entity_2 auto-entities Can be any common type of entity  if no entity is specified defaults to auto-entities entity_3 auto-entities Can be any common type of entity  if no entity is specified defaults to auto-entities entity_4 auto-entities Can be any common type of entity  if no entity is specified defaults to auto-entities entity_5 auto-entities Can be any common type of entity  if no entity is specified defaults to auto-entities entity_6 none Can be any common type of entity entity_7 none Can be any common type of entity"},{"location":"usage/cards/card_scenes/#entity-variables","title":"Entity Variables","text":"Variable Default Required Notes _entity_id Support almost all types of entities  Scenes do always show as off _icon The icon to show _name The name to show _color Random Color of the icon  Can choose between: <code>blue</code>, <code>red</code>, <code>green</code>, <code>yellow</code>, <code>pink</code>, <code>purple</code>  If not specified, it will take a random color _state <code>on</code> or <code>playing</code> Define <code>input_select</code> state or give manual state for pill to be full _nav_path Navigate to another view  Overrides other types of actions"},{"location":"usage/cards/card_scenes/#usage","title":"Usage","text":"<p>You can set 1 to 7 entities to show 1 to 7 pills dynamically  If set none it uses <code>auto-entities</code> with max 5 pills</p> <pre><code>- type: \"custom:button-card\"\n  template: \"card_scenes_welcome\"\n  variables:\n    entity_1:\n      entity_id: \"&lt;YOUR_ENTITY&gt;\"\n      icon: \"mdi:YOUR_ICON\" #OPTIONAL\n      name: \"YOUR_NAME\" #OPTIONAL\n      color: \"blue\"\n    entity_2:\n      entity_id: \"&lt;YOUR_ENTITY&gt;\"\n      icon: \"mdi:YOUR_ICON\" #OPTIONAL\n      name: \"YOUR_NAME\" #OPTIONAL\n      color: \"red\"\n    entity_3:\n      entity_id: \"&lt;YOUR_ENTITY&gt;\"\n      icon: \"mdi:YOUR_ICON\" #OPTIONAL\n      name: \"YOUR_NAME\" #OPTIONAL\n      color: \"green\"\n    entity_4:\n      entity_id: \"&lt;YOUR_ENTITY&gt;\"\n      icon: \"mdi:YOUR_ICON\" #OPTIONAL\n      name: \"YOUR_NAME\" #OPTIONAL\n      color: \"purple\"\n    entity_5:\n      entity_id: \"&lt;YOUR_ENTITY&gt;\"\n      icon: \"mdi:YOUR_ICON\" #OPTIONAL\n      name: \"YOUR_NAME\" #OPTIONAL\n      color: \"yellow\"\n    entity_6:\n      entity_id: \"&lt;YOUR_ENTITY&gt;\"\n      icon: \"mdi:YOUR_ICON\" #OPTIONAL\n      name: \"YOUR_NAME\" #OPTIONAL\n      color: \"pink\"\n    entity_7:\n      entity_id: \"&lt;YOUR_ENTITY&gt;\"\n      icon: \"mdi:YOUR_ICON\" #OPTIONAL\n      name: \"YOUR_NAME\" #OPTIONAL\n      color: \"yellow\"\n</code></pre> Auto-entities <pre><code>- type: \"custom:button-card\"\n  template: \"card_scenes_welcome\"\n</code></pre> Template Code card_welcome_scenes.yaml<pre><code>---\ncard_scenes_welcome:\n  show_icon: false\n  show_name: true\n  show_label: false\n  variables:\n    entity_1:\n      entity_id: \"\"\n      color: &gt;\n        [[[\n          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];\n          var color = colors[Math.floor(Math.random() * colors.length)];\n          return color;\n        ]]]\n    entity_2:\n      entity_id: \"\"\n      color: &gt;\n        [[[\n          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];\n          var color = colors[Math.floor(Math.random() * colors.length)];\n          return color;\n        ]]]\n    entity_3:\n      entity_id: \"\"\n      color: &gt;\n        [[[\n          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];\n          var color = colors[Math.floor(Math.random() * colors.length)];\n          return color;\n        ]]]\n    entity_4:\n      entity_id: \"\"\n      color: &gt;\n        [[[\n          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];\n          var color = colors[Math.floor(Math.random() * colors.length)];\n          return color;\n        ]]]\n    entity_5:\n      entity_id: \"\"\n      color: &gt;\n        [[[\n          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];\n          var color = colors[Math.floor(Math.random() * colors.length)];\n          return color;\n        ]]]\n    entity_6:\n      entity_id: \"\"\n      color: &gt;\n        [[[\n          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];\n          var color = colors[Math.floor(Math.random() * colors.length)];\n          return color;\n        ]]]\n    entity_7:\n      entity_id: \"\"\n      color: &gt;\n        [[[\n          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];\n          var color = colors[Math.floor(Math.random() * colors.length)];\n          return color;\n        ]]]\n  styles:\n    grid:\n      - grid-template-areas: &gt;\n          [[[\n            var pills = []\n            const entities = [variables.entity_1?.entity_id, variables.entity_2?.entity_id, variables.entity_3?.entity_id, variables.entity_4?.entity_id, variables.entity_5?.entity_id, variables.entity_6?.entity_id, variables.entity_7?.entity_id]\n            function entity_check(item) {\n                if (item != \"\") {\n                    pills.push(\"item\" + (pills.length+1))\n                }\n            }\n            entities.forEach(entity_check)\n            return pills.join(\" \")\n          ]]]\n      - display: \"flex\"\n      - grid-template-rows: \"min-content\"\n      - justify-content: \"space-evenly\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n      - overflow: \"visible\"\n    custom_fields:\n      item1:\n        - display: \"[[[ return (variables.entity_1.entity_id != '') ? 'block' : 'none' ]]]\"\n      item2:\n        - display: \"[[[ return (variables.entity_2.entity_id != '') ? 'block' : 'none' ]]]\"\n      item3:\n        - display: \"[[[ return (variables.entity_3.entity_id != '') ? 'block' : 'none' ]]]\"\n      item4:\n        - display: \"[[[ return (variables.entity_4.entity_id != '') ? 'block' : 'none' ]]]\"\n      item5:\n        - display: \"[[[ return (variables.entity_5.entity_id != '') ? 'block' : 'none' ]]]\"\n      item6:\n        - display: \"[[[ return (variables.entity_6.entity_id != '') ? 'block' : 'none' ]]]\"\n      item7:\n        - display: \"[[[ return (variables.entity_7.entity_id != '') ? 'block' : 'none' ]]]\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        template: \"card_scenes_pill_welcome\"\n        variables: \"[[[ return variables.entity_1; ]]]\"\n        entity: \"[[[ return variables.entity_1.entity_id ]]]\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return variables.entity_1.entity_id ]]]\"\n              icon: \"[[[ return variables.entity_1.icon ]]]\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return variables.entity_1.entity_id ]]]\"\n              name: \"[[[ return variables.entity_1.name ]]]\"\n    item2:\n      card:\n        type: \"custom:button-card\"\n        template: \"card_scenes_pill_welcome\"\n        variables: \"[[[ return variables.entity_2; ]]]\"\n        entity: \"[[[ return variables.entity_2.entity_id ]]]\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return variables.entity_2.entity_id ]]]\"\n              icon: \"[[[ return variables.entity_2.icon ]]]\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return variables.entity_2.entity_id ]]]\"\n              name: \"[[[ return variables.entity_2.name ]]]\"\n    item3:\n      card:\n        type: \"custom:button-card\"\n        template: \"card_scenes_pill_welcome\"\n        variables: \"[[[ return variables.entity_3; ]]]\"\n        entity: \"[[[ return variables.entity_3.entity_id ]]]\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return variables.entity_3.entity_id ]]]\"\n              icon: \"[[[ return variables.entity_3.icon ]]]\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return variables.entity_3.entity_id ]]]\"\n              name: \"[[[ return variables.entity_3.name ]]]\"\n    item4:\n      card:\n        type: \"custom:button-card\"\n        template: \"card_scenes_pill_welcome\"\n        variables: \"[[[ return variables.entity_4; ]]]\"\n        entity: \"[[[ return variables.entity_4.entity_id ]]]\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return variables.entity_4.entity_id ]]]\"\n              icon: \"[[[ return variables.entity_4.icon ]]]\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return variables.entity_4.entity_id ]]]\"\n              name: \"[[[ return variables.entity_4.name ]]]\"\n    item5:\n      card:\n        type: \"custom:button-card\"\n        template: \"card_scenes_pill_welcome\"\n        variables: \"[[[ return variables.entity_5; ]]]\"\n        entity: \"[[[ return variables.entity_5.entity_id ]]]\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return variables.entity_5.entity_id ]]]\"\n              icon: \"[[[ return variables.entity_5.icon ]]]\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return variables.entity_5.entity_id ]]]\"\n              name: \"[[[ return variables.entity_5.name ]]]\"\n    item6:\n      card:\n        type: \"custom:button-card\"\n        template: \"card_scenes_pill_welcome\"\n        variables: \"[[[ return variables.entity_6; ]]]\"\n        entity: \"[[[ return variables.entity_6.entity_id ]]]\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return variables.entity_6.entity_id ]]]\"\n              icon: \"[[[ return variables.entity_6.icon ]]]\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return variables.entity_6.entity_id ]]]\"\n              name: \"[[[ return variables.entity_6.name ]]]\"\n    item7:\n      card:\n        type: \"custom:button-card\"\n        template: \"card_scenes_pill_welcome\"\n        variables: \"[[[ return variables.entity_7; ]]]\"\n        entity: \"[[[ return variables.entity_7.entity_id ]]]\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return variables.entity_7.entity_id ]]]\"\n              icon: \"[[[ return variables.entity_7.icon ]]]\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return variables.entity_7.entity_id ]]]\"\n              name: \"[[[ return variables.entity_7.name ]]]\"\n</code></pre>"},{"location":"usage/cards/card_script/","title":"Script Card","text":""},{"location":"usage/cards/card_script/#description","title":"Description","text":"<p>This card starts/runs a script. You can configure icon and text.</p>"},{"location":"usage/cards/card_script/#variables","title":"Variables","text":"Variable Default Required Notes ulm_card_script_title Name to show for the script. ulm_card_script_icon Icon to show for the script. tap_action_action Only call-service is allowed here. tap_action_service Let the script run by turning it on. tap_action_service_data This is the service_data needed by your script. That can be an entity_id and/or some variables."},{"location":"usage/cards/card_script/#usage","title":"Usage","text":"<pre><code>- type: 'custom:button-card'\n  template: card_script\n  variables:\n    ulm_card_script_title: Romantic lights\n    ulm_card_script_icon: 'mdi:candle'\n  tap_action:\n    action: call-service\n    service: script.turn_on\n    service_data:\n      entity_id: script.romantic_livingroom_lights\n</code></pre> Template Code card_script.yaml<pre><code>---\n### Card Script ###\ncard_script:\n  template:\n    - \"icon_only\"\n  label: \"[[[ return variables.ulm_card_script_title; ]]]\"\n  icon: \"[[[ return variables.ulm_card_script_icon; ]]]\"\n  styles:\n    icon:\n      - color: \"rgba(var(--color-blue),0.7)\"\n    label:\n      - align-self: \"center\"\n      - font-size: \"14px\"\n      - filter: \"opacity(100%)\"\n    img_cell:\n      - background-color: \"rgba(var(--color-blue), 0.2)\"\n    grid:\n      - grid-template-columns: \"min-content min-content\"\n</code></pre>"},{"location":"usage/cards/card_thermostat/","title":"Thermostat Card","text":""},{"location":"usage/cards/card_thermostat/#description","title":"Description","text":"<p>This is the <code>thermostat-card</code>, used to toggle a climate entity. Shows state of the thermostat and, if available, current temperature.</p> <p>This documentation refers to the new \"All in one\" thermostat card. This card merges the following one :</p> <ul> <li>legacy <code>card_thermostat</code> (the old one)</li> <li>custom <code>custom_card_heat_pump</code> by Kam</li> <li>custom <code>custom_card_mpse_thermostat</code> by mpse</li> <li>custom <code>custom_card_httpedo13_thermostat</code> by httpedo13</li> <li>custom <code>custom_card_httpedo13_thermostat_with_buttons</code> by httpedo13</li> <li>custom <code>custom_card_httpedo13_thermostat_with_buttons_collapse</code> by httpedo13</li> </ul> <p>Warning</p> <p>This card has backward compatibility with older template except custom names and icons. It means variables like <code>ulm_card_XXX_name</code> and <code>ulm_card_XXX_icon</code> must be replaced by <code>ulm_card_thermostat_name</code> and <code>ulm_card_thermostat_icon</code>. To use <code>popup_thermostat</code> you need to set the variable <code>ulm_card_thermostat_enable_popup</code> to <code>true</code>. This is a different approach as the other <code>popup_cards</code> use.</p>"},{"location":"usage/cards/card_thermostat/#variables","title":"Variables","text":"Variable/Entity Default Required Notes Requirement entity Your HA entity ulm_card_thermostat_name <code>friendly_name</code> Customize name ulm_card_thermostat_icon <code>mdi:thermometer</code> Customize icon ulm_card_thermostat_enable_collapse <code>false</code> Collapse controls when off Need <code>ulm_card_thermostat_enable_controls: true</code> ulm_card_thermostat_enable_controls <code>false</code> Enable temperature control ulm_card_thermostat_enable_hvac_modes <code>false</code> Enable HVAC modes control ulm_card_thermostat_enable_background_color <code>false</code> Enable background color when cooling or heating ulm_card_thermostat_enable_display_temperature <code>false</code> Display  current temperature on top right ulm_card_thermostat_enable_horizontal <code>false</code> Enable horizontal card Need <code>ulm_card_thermostat_enable_controls: true</code> ulm_card_thermostat_enable_popup <code>false</code> Enable <code>popup_thermostat</code> ulm_card_thermostat_fan_entity <code>null</code> <code>fan</code> entity for climate if separate entity ulm_card_thermostat_minimum_temp_spread <code>1</code> Minimum temperature spread between low and high temperature when in <code>heat_cool</code> mode ulm_card_thermostat_temp_step <code>false</code> Set the step size for increasing and decreasing temperature"},{"location":"usage/cards/card_thermostat/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: card_thermostat\n  entity: climate.hvac\n  variables:\n    ulm_card_thermostat_enable_collapse: true\n    ulm_card_thermostat_enable_controls: true\n    ulm_card_thermostat_enable_hvac_modes: true\n    ulm_card_thermostat_enable_popup: true\n</code></pre> Template Code card_thermostat.yaml<pre><code>---\n### Card Thermostat ###\ncard_thermostat:\n  template:\n    - \"ulm_translation_engine\"\n    - \"icon_more_info_new\"\n  variables:\n    ulm_card_thermostat_name: \"[[[ return entity.attributes.friendly_name ]]]\"\n    ulm_card_thermostat_icon: \"[[[ return 'mdi:thermometer' ]]]\"\n    ulm_card_thermostat_enable_collapse: false\n    ulm_card_thermostat_enable_controls: false\n    ulm_card_thermostat_enable_hvac_modes: false\n    ulm_card_thermostat_enable_background_color: false\n    ulm_card_thermostat_enable_display_temperature: false\n    ulm_card_thermostat_enable_horizontal: false\n    ulm_card_thermostat_enable_popup: false\n    ulm_card_thermostat_fan_entity: null\n    ulm_card_thermostat_minimum_temp_spread: 1\n    ulm_card_thermostat_preset_mode: false\n  show_icon: false\n  show_name: false\n  show_label: false\n  state:\n    - operator: \"template\"\n      value: &gt;\n        [[[\n          return (entity.attributes.hvac_action == 'heating' &amp;&amp; variables.ulm_card_thermostat_enable_background_color)\n        ]]]\n      styles:\n        card:\n          - background-color: \"rgba(255,165,0,0.75)\"\n    - operator: \"template\"\n      value: &gt;\n        [[[\n          return (entity.attributes.hvac_action == 'cooling' &amp;&amp; variables.ulm_card_thermostat_enable_background_color)\n        ]]]\n      styles:\n        card:\n          - background-color: \"rgba(0,191,255,0.75)\"\n    - operator: \"template\"\n      value: &gt;\n        [[[\n          return entity.state != 'off'\n        ]]]\n      styles:\n        card:\n          - background-color: \"rgba(var(--color-background-yellow),var(--opacity-bg))\"\n  styles:\n    grid:\n      - grid-template-areas: &gt;\n          [[[\n                var areas = [];\n                if (variables.ulm_card_thermostat_enable_horizontal) {\n                  return \"\\\"item1 item2\\\"\";\n                }\n                if (variables.ulm_card_thermostat_enable_display_temperature) {\n                    areas.push(\"item1 item4\");\n                } else {\n                  areas.push(\"item1 item1\");\n                }\n                if ( !(variables.ulm_card_thermostat_enable_collapse &amp;&amp; entity.state == \"off\") &amp;&amp; variables.ulm_card_thermostat_enable_controls) {\n                    areas.push(\"item2 item2\");\n                }\n                if ( !(variables.ulm_card_thermostat_enable_collapse &amp;&amp; entity.state == \"off\") &amp;&amp; variables.ulm_card_thermostat_enable_controls &amp;&amp; entity.attributes.target_temp_high != null) {\n                    areas.push(\"low_temp_adjustment low_temp_adjustment\");\n                }\n                if ( !(variables.ulm_card_thermostat_enable_collapse &amp;&amp; entity.state == \"off\") &amp;&amp; variables.ulm_card_thermostat_enable_hvac_modes) {\n                    areas.push(\"item3 item3\");\n                }\n                return \"\\\"\" + areas.join(\"\\\" \\\"\") + \"\\\"\";\n          ]]]\n      - grid-template-columns: &gt;\n          [[[\n                  return variables.ulm_card_thermostat_enable_horizontal ? \"1fr 1fr\" : \"2fr 1fr\";\n          ]]]\n      - grid-template-rows: &gt;\n          [[[\n                var rows = [];\n                rows.push(\"min-content\");\n                if (variables.ulm_card_thermostat_enable_horizontal) {\n                  return \"min-content\";\n                }\n                if ( !(variables.ulm_card_thermostat_enable_collapse &amp;&amp; entity.state == \"off\") &amp;&amp; variables.ulm_card_thermostat_enable_controls) {\n                    rows.push(\"min-content\");\n                }\n                if ( !(variables.ulm_card_thermostat_enable_collapse &amp;&amp; entity.state == \"off\") &amp;&amp; variables.ulm_card_thermostat_enable_controls &amp;&amp; entity.attributes.target_temp_high != null) {\n                    rows.push(\"min-content\");\n                }\n                if ( !(variables.ulm_card_thermostat_enable_collapse &amp;&amp; entity.state == \"off\") &amp;&amp; variables.ulm_card_thermostat_enable_hvac_modes) {\n                    rows.push(\"min-content\");\n                }\n                return rows.join(\" \");\n          ]]]\n      - row-gap: \"12px\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n    custom_fields:\n      item2:\n        - display: &gt;\n            [[[\n                if ( !(variables.ulm_card_thermostat_enable_collapse &amp;&amp; entity.state == \"off\") &amp;&amp; variables.ulm_card_thermostat_enable_controls) {\n                      return \"block\";\n                  } else {\n                      return \"none\";\n                  }\n            ]]]\n      low_temp_adjustment:\n        - display: &gt;\n            [[[\n                if ( !(variables.ulm_card_thermostat_enable_collapse &amp;&amp; entity.state == \"off\") &amp;&amp; variables.ulm_card_thermostat_enable_controls &amp;&amp; entity.attributes.target_temp_high != null) {\n                      return \"block\";\n                  } else {\n                      return \"none\";\n                  }\n            ]]]\n      item3:\n        - display: &gt;\n            [[[\n                if (variables.ulm_card_thermostat_enable_horizontal) {\n                  return \"none\";\n                }\n                if ( !(variables.ulm_card_thermostat_enable_collapse &amp;&amp; entity.state == \"off\") &amp;&amp; variables.ulm_card_thermostat_enable_hvac_modes) {\n                  return \"block\";\n                } else {\n                  return \"none\";\n                }\n            ]]]\n      item4:\n        - display: &gt;\n            [[[\n                if (variables.ulm_card_thermostat_enable_horizontal) {\n                  return \"none\";\n                }\n                if (variables.ulm_card_thermostat_enable_display_temperature) {\n                  return \"block\";\n                } else {\n                  return \"none\";\n                }\n            ]]]\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              variables: &gt;\n                [[[\n                  let vars = variables;\n\n                  if(variables.ulm_card_thermostat_enable_popup) {\n                    vars.ulm_custom_popup = {\n                      'template': 'popup_thermostat_temperature',\n                      'popup_variables': {'ulm_card_thermostat_preset_mode': variables.ulm_card_thermostat_preset_mode }\n                    };\n                  }\n                  return vars;\n                ]]]\n              icon: \"[[[ return variables.ulm_card_thermostat_icon ]]]\"\n              state:\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return (entity.attributes.hvac_action == 'heating')\n                    ]]]\n                  styles:\n                    icon:\n                      - color: \"rgba(var(--color-red),1)\"\n                    img_cell:\n                      - background-color: \"rgba(var(--color-red),0.2)\"\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return (entity.attributes.hvac_action == 'cooling')\n                    ]]]\n                  styles:\n                    icon:\n                      - color: \"rgba(var(--color-blue),1)\"\n                    img_cell:\n                      - background-color: \"rgba(var(--color-blue),0.2)\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              variables: &gt;\n                [[[\n                  let vars = variables;\n\n                  if(variables.ulm_card_thermostat_enable_popup) {\n                    vars.ulm_custom_popup = {\n                      'template': 'popup_thermostat_temperature',\n                      'popup_variables': {'ulm_card_thermostat_preset_mode': variables.ulm_card_thermostat_preset_mode }\n                    };\n                  }\n                  return vars;\n                ]]]\n              name: \"[[[ return variables.ulm_card_thermostat_name ]]]\"\n              label: &gt;-\n                [[[\n                    var label = variables.ulm_translation_state;\n                    if((entity.attributes.temperature || entity.attributes.target_temp_high != null) &amp;&amp; !variables.ulm_card_thermostat_enable_display_temperature){\n                      return variables.ulm_translation_state;\n                    }\n                    return label;\n                ]]]\n    item2:\n      card:\n        type: \"custom:button-card\"\n        template: \"list_3_items\"\n        styles:\n          card:\n            - background: \"none\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              icon: \"mdi:minus\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"climate.set_temperature\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n                data:\n                  target_temp_low: |\n                    [[[\n                      if (entity.attributes.target_temp_low == null) {\n                        return 0;\n                      } else {\n                        const unit = hass.config.unit_system.temperature\n                        const step = variables.ulm_card_thermostat_temp_step || entity.attributes.target_temp_step || (unit == '\u00b0F' ? 1.0 : 0.5)\n                        const new_temp =  (parseFloat(entity.attributes.target_temp_high) - step)\n                        return (new_temp - variables.ulm_card_thermostat_minimum_temp_spread &lt; entity.attributes.target_temp_low ? new_temp - variables.ulm_card_thermostat_minimum_temp_spread : entity.attributes.target_temp_low);\n                      }\n                    ]]]\n                  target_temp_high: |\n                    [[[\n                      if (entity.attributes.target_temp_low == null) {\n                        return 0;\n                      } else {\n                        const unit = hass.config.unit_system.temperature\n                        const step = variables.ulm_card_thermostat_temp_step || entity.attributes.target_temp_step || (unit == '\u00b0F' ? 1.0 : 0.5)\n                        return (parseFloat(entity.attributes.target_temp_high) - step)\n                      }\n                    ]]]\n                  temperature: |\n                    [[[\n                      if (entity.attributes.temperature == null) {\n                        return 0;\n                      } else {\n                        const unit = hass.config.unit_system.temperature\n                        const step = variables.ulm_card_thermostat_temp_step || entity.attributes.target_temp_step || (unit == '\u00b0F' ? 1.0 : 0.5)\n                        return (parseFloat(states[entity.entity_id].attributes.temperature) - step)\n                      }\n                    ]]]\n              state:\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') &amp;&amp; variables.ulm_card_thermostat_enable_background_color\n                    ]]]\n                  styles:\n                    card:\n                      - background-color: \"rgba(var(--color-theme),0.15)\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              show_icon: false\n              show_name: false\n              show_label: true\n              entity: \"[[[ return entity.entity_id ]]]\"\n              label: |-\n                [[[\n                    var temperature = entity.attributes.temperature || entity.attributes.target_temp_high;\n                    if (temperature == null) {\n                      var temperature = '-';\n                    }\n                    return temperature + hass.config.unit_system.temperature;\n                ]]]\n              styles:\n                card:\n                  - background: \"none\"\n                  - box-shadow: \"none\"\n          item3:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              icon: \"mdi:plus\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"climate.set_temperature\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n                data:\n                  target_temp_low: |\n                    [[[\n                      if (entity.attributes.target_temp_low == null) {\n                        return 0;\n                      } else {\n                        return entity.attributes.target_temp_low;\n                      }\n                    ]]]\n                  target_temp_high: |\n                    [[[\n                      if (entity.attributes.target_temp_high == null) {\n                        return 0;\n                      } else {\n                        const unit = hass.config.unit_system.temperature\n                        const step = variables.ulm_card_thermostat_temp_step || entity.attributes.target_temp_step || (unit == '\u00b0F' ? 1.0 : 0.5)\n                        return (parseFloat(entity.attributes.target_temp_high) + step)\n                      }\n                    ]]]\n                  temperature: |\n                    [[[\n                      if (entity.attributes.temperature == null) {\n                        return 0;\n                      } else {\n                        const unit = hass.config.unit_system.temperature\n                        const step = variables.ulm_card_thermostat_temp_step || entity.attributes.target_temp_step || (unit == '\u00b0F' ? 1.0 : 0.5)\n                        return (parseFloat(states[entity.entity_id].attributes.temperature) + step)\n                      }\n                    ]]]\n              state:\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') &amp;&amp; variables.ulm_card_thermostat_enable_background_color\n                    ]]]\n                  styles:\n                    card:\n                      - background-color: \"rgba(var(--color-theme),0.15)\"\n    low_temp_adjustment:\n      card:\n        type: \"custom:button-card\"\n        template: \"list_3_items\"\n        styles:\n          card:\n            - background: \"none\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              icon: \"mdi:minus\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"climate.set_temperature\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n                data:\n                  target_temp_low: |\n                    [[[\n                      const unit = hass.config.unit_system.temperature\n                      const step = variables.ulm_card_thermostat_temp_step || entity.attributes.target_temp_step || (unit == '\u00b0F' ? 1.0 : 0.5)\n                      return (parseFloat(entity.attributes.target_temp_low) - step)\n                    ]]]\n                  target_temp_high: \"[[[ return entity.attributes.target_temp_high ]]]\"\n              state:\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') &amp;&amp; variables.ulm_card_thermostat_enable_background_color\n                    ]]]\n                  styles:\n                    card:\n                      - background-color: \"rgba(var(--color-theme),0.15)\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              show_icon: false\n              show_name: false\n              show_label: true\n              entity: \"[[[ return entity.entity_id ]]]\"\n              label: |-\n                [[[\n                    var temperature = entity.attributes.target_temp_low;\n                    if (temperature == null) {\n                      var temperature = '-';\n                    }\n                    return temperature + hass.config.unit_system.temperature;\n                ]]]\n              styles:\n                card:\n                  - background: \"none\"\n                  - box-shadow: \"none\"\n          item3:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              icon: \"mdi:plus\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"climate.set_temperature\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n                data:\n                  target_temp_low: |\n                    [[[\n                      const unit = hass.config.unit_system.temperature\n                      const step = variables.ulm_card_thermostat_temp_step || entity.attributes.target_temp_step || (unit == '\u00b0F' ? 1.0 : 0.5)\n                      return (parseFloat(entity.attributes.target_temp_low) + step)\n                    ]]]\n                  target_temp_high: |\n                    [[[\n                      const unit = hass.config.unit_system.temperature\n                      const step = variables.ulm_card_thermostat_temp_step || entity.attributes.target_temp_step || (unit == '\u00b0F' ? 1.0 : 0.5)\n                      const new_temp = (parseFloat(entity.attributes.target_temp_low) + step)\n                      return (new_temp + variables.ulm_card_thermostat_minimum_temp_spread &gt; entity.attributes.target_temp_high ? new_temp + variables.ulm_card_thermostat_minimum_temp_spread : entity.attributes.target_temp_high)\n                    ]]]\n              state:\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') &amp;&amp; variables.ulm_card_thermostat_enable_background_color\n                    ]]]\n                  styles:\n                    card:\n                      - background-color: \"rgba(var(--color-theme),0.15)\"\n    item3:\n      card:\n        type: \"custom:button-card\"\n        styles:\n          grid:\n            - grid-template-areas: &gt;\n                [[[\n                      var areas = [];\n                      if (states[entity.entity_id].attributes.hvac_modes.includes(\"auto\")) {\n                          areas.push(\"auto\");\n                      }\n                      if (states[entity.entity_id].attributes.hvac_modes.includes(\"heat\")) {\n                          areas.push(\"heat\");\n                      }\n                      if (states[entity.entity_id].attributes.hvac_modes.includes(\"cool\")) {\n                          areas.push(\"cool\");\n                      }\n                      if (states[entity.entity_id].attributes.hvac_modes.includes(\"dry\")) {\n                          areas.push(\"dry\");\n                      }\n                      if (states[entity.entity_id].attributes.hvac_modes.includes(\"heat_cool\")) {\n                          areas.push(\"heat_cool\");\n                      }\n                      if (states[entity.entity_id].attributes.hvac_modes.includes(\"fan_only\")) {\n                          areas.push(\"fan_only\");\n                      }\n                      if (!states[entity.entity_id].attributes.hvac_modes.includes(\"fan_only\") &amp;&amp; (variables.ulm_card_thermostat_fan_entity !== null)) {\n                          areas.push(\"fan_entity_only\");\n                      }\n                      return \"\\\"\" + areas.join(\" \") + \"\\\"\";\n                ]]]\n            - grid-template-columns: &gt;\n                [[[\n                      var columns = [];\n                      if (states[entity.entity_id].attributes.hvac_modes.includes(\"auto\")) {\n                          columns.push(\"1fr\");\n                      }\n                      if (states[entity.entity_id].attributes.hvac_modes.includes(\"heat\")) {\n                          columns.push(\"1fr\");\n                      }\n                      if (states[entity.entity_id].attributes.hvac_modes.includes(\"cool\")) {\n                          columns.push(\"1fr\");\n                      }\n                      if (states[entity.entity_id].attributes.hvac_modes.includes(\"dry\")) {\n                          columns.push(\"1fr\");\n                      }\n                      if (states[entity.entity_id].attributes.hvac_modes.includes(\"heat_cool\")) {\n                          columns.push(\"1fr\");\n                      }\n                      if (states[entity.entity_id].attributes.hvac_modes.includes(\"fan_only\")) {\n                          columns.push(\"1fr\");\n                      }\n                      if (!states[entity.entity_id].attributes.hvac_modes.includes(\"fan_only\") &amp;&amp; (variables.ulm_card_thermostat_fan_entity !== null)) {\n                          columns.push(\"1fr\");\n                      }\n                      return columns.join(\" \");\n                ]]]\n            - grid-template-rows: \"min-content\"\n            - column-gap: \"7px\"\n          card:\n            - box-shadow: \"none\"\n            - padding: \"0px\"\n            - background: \"none\"\n          custom_fields:\n            auto:\n              - display: &gt;\n                  [[[\n                    if (states[entity.entity_id].attributes.hvac_modes.includes(\"auto\")) {\n                        return \"block\";\n                    } else {\n                        return \"none\";\n                    }\n                  ]]]\n            heat:\n              - display: &gt;\n                  [[[\n                    if (states[entity.entity_id].attributes.hvac_modes.includes(\"heat\")) {\n                        return \"block\";\n                    } else {\n                        return \"none\";\n                    }\n                  ]]]\n            cool:\n              - display: &gt;\n                  [[[\n                    if (states[entity.entity_id].attributes.hvac_modes.includes(\"cool\")) {\n                        return \"block\";\n                    } else {\n                        return \"none\";\n                    }\n                  ]]]\n            dry:\n              - display: &gt;\n                  [[[\n                    if (states[entity.entity_id].attributes.hvac_modes.includes(\"dry\")) {\n                        return \"block\";\n                    } else {\n                        return \"none\";\n                    }\n                  ]]]\n            heat_cool:\n              - display: &gt;\n                  [[[\n                    if (states[entity.entity_id].attributes.hvac_modes.includes(\"heat_cool\")) {\n                        return \"block\";\n                    } else {\n                        return \"none\";\n                    }\n                  ]]]\n            fan_only:\n              - display: &gt;\n                  [[[\n                    if (states[entity.entity_id].attributes.hvac_modes.includes(\"fan_only\")) {\n                        return \"block\";\n                    } else {\n                        return \"none\";\n                    }\n                  ]]]\n            fan_entity_only:\n              - display: &gt;\n                  [[[\n                    if (!states[entity.entity_id].attributes.hvac_modes.includes(\"fan_only\") &amp;&amp; (variables.ulm_card_thermostat_fan_entity !== null)) {\n                        return \"block\";\n                    } else {\n                        return \"none\";\n                    }\n                  ]]]\n        custom_fields:\n          auto:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              icon: \"mdi:autorenew\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"climate.set_hvac_mode\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n                data:\n                  hvac_mode: \"auto\"\n              state:\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return entity.state == \"auto\"\n                    ]]]\n                  styles:\n                    card:\n                      - background-color: \"rgba(var(--color-green),0.5)\"\n                    icon:\n                      - color: \"rgba(var(--color-green),1)\"\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') &amp;&amp; variables.ulm_card_thermostat_enable_background_color\n                    ]]]\n                  styles:\n                    card:\n                      - background-color: \"rgba(var(--color-theme),0.15)\"\n          heat:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              icon: \"mdi:fire\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"climate.set_hvac_mode\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n                data:\n                  hvac_mode: \"heat\"\n              state:\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return entity.state == \"heat\"\n                    ]]]\n                  styles:\n                    card:\n                      - background-color: \"rgba(var(--color-red),0.5)\"\n                    icon:\n                      - color: \"rgba(var(--color-red),1)\"\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') &amp;&amp; variables.ulm_card_thermostat_enable_background_color\n                    ]]]\n                  styles:\n                    card:\n                      - background-color: \"rgba(var(--color-theme),0.15)\"\n          cool:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              icon: \"mdi:snowflake\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"climate.set_hvac_mode\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n                data:\n                  hvac_mode: \"cool\"\n              state:\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return entity.state == \"cool\"\n                    ]]]\n                  styles:\n                    card:\n                      - background-color: \"rgba(var(--color-blue),0.5)\"\n                    icon:\n                      - color: \"rgba(var(--color-blue),1)\"\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') &amp;&amp; variables.ulm_card_thermostat_enable_background_color\n                    ]]]\n                  styles:\n                    card:\n                      - background-color: \"rgba(var(--color-theme),0.15)\"\n          dry:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              icon: \"mdi:water\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"climate.set_hvac_mode\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n                data:\n                  hvac_mode: \"dry\"\n              state:\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return entity.state == \"dry\"\n                    ]]]\n                  styles:\n                    card:\n                      - background-color: \"rgba(var(--color-yellow),0.5)\"\n                    icon:\n                      - color: \"rgba(var(--color-yellow),1)\"\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') &amp;&amp; variables.ulm_card_thermostat_enable_background_color\n                    ]]]\n                  styles:\n                    card:\n                      - background-color: \"rgba(var(--color-theme),0.15)\"\n          heat_cool:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              icon: \"mdi:sun-snowflake\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"climate.set_hvac_mode\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n                data:\n                  hvac_mode: \"heat_cool\"\n              state:\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return entity.state == \"heat_cool\"\n                    ]]]\n                  styles:\n                    card:\n                      - background-color: \"rgba(var(--color-purple),0.5)\"\n                    icon:\n                      - color: \"rgba(var(--color-purple),1)\"\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') &amp;&amp; variables.ulm_card_thermostat_enable_background_color\n                    ]]]\n                  styles:\n                    card:\n                      - background-color: \"rgba(var(--color-theme),0.15)\"\n          fan_only:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              icon: \"mdi:fan\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"climate.set_hvac_mode\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n                data:\n                  hvac_mode: \"fan_only\"\n              state:\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return entity.state == \"fan_only\"\n                    ]]]\n                  styles:\n                    card:\n                      - background-color: \"rgba(var(--color-theme),0.5)\"\n                    icon:\n                      - color: \"rgba(var(--color-green),1)\"\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') &amp;&amp; variables.ulm_card_thermostat_enable_background_color\n                    ]]]\n                  styles:\n                    card:\n                      - background-color: \"rgba(var(--color-theme),0.15)\"\n          fan_entity_only:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              icon: \"mdi:fan\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"fan.toggle\"\n                target:\n                  entity_id: \"[[[ return variables.ulm_card_thermostat_fan_entity !== null ? states[variables.ulm_card_thermostat_fan_entity].entity_id : null ]]]\"\n              state:\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return ((variables.ulm_card_thermostat_fan_entity !== null) &amp;&amp; states[variables.ulm_card_thermostat_fan_entity].state == 'on')\n                    ]]]\n                  styles:\n                    card:\n                      - background-color: \"rgba(var(--color-theme),0.5)\"\n                    icon:\n                      - color: \"rgba(var(--color-green),1)\"\n                - operator: \"template\"\n                  value: &gt;\n                    [[[\n                      return (entity.attributes.hvac_action == 'cooling' || entity.attributes.hvac_action == 'heating') &amp;&amp; variables.ulm_card_thermostat_enable_background_color\n                    ]]]\n                  styles:\n                    card:\n                      - background-color: \"rgba(var(--color-theme),0.15)\"\n    item4:\n      card:\n        type: \"custom:button-card\"\n        show_icon: false\n        show_name: false\n        show_label: true\n        entity: \"[[[ return entity.entity_id ]]]\"\n        label: |-\n          [[[\n              var temperature = entity.attributes.current_temperature;\n              if (temperature == null) {\n                var temperature = '-';\n              }\n              return temperature + hass.config.unit_system.temperature;\n          ]]]\n        styles:\n          card:\n            - background: \"none\"\n            - box-shadow: \"none\"\n</code></pre>"},{"location":"usage/cards/card_title/","title":"Title Card","text":""},{"location":"usage/cards/card_title/#description","title":"Description","text":"<p>Titles (and optionally subtitles) are used to separate different areas in your design. You can use only a title, only a subtitle or both at once.</p>"},{"location":"usage/cards/card_title/#variables","title":"Variables","text":"Variable Default Required Notes name This is a main title (either title or subtitle is required) label This is a subtitle (either title or subtitle is required)"},{"location":"usage/cards/card_title/#usage","title":"Usage","text":"<pre><code>- type: 'custom:button-card'\n  template: card_title\n  name: My Title\n  label: 'Subtitle'\n</code></pre> Template Code card_title.yaml<pre><code>---\n### Card Title ###\ncard_title:\n  tap_action:\n    action: \"none\"\n  show_icon: false\n  show_label: true\n  show_name: true\n  styles:\n    card:\n      - background-color: \"rgba(0,0,0,0)\"\n      - box-shadow: \"none\"\n      - height: \"auto\"\n      - width: \"auto\"\n      - margin-top: \"6px\"\n      - margin-left: \"18px\"\n      - margin-bottom: \"0px\"\n      - padding: \"6px\"\n    grid:\n      - grid-template-areas: \"'n' 'l'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content min-content\"\n    name:\n      - justify-self: \"start\"\n      - font-weight: \"bold\"\n      - font-size: \"1.5rem\"\n    label:\n      - justify-self: \"start\"\n      - font-weight: \"bold\"\n      - font-size: \"1rem\"\n      - opacity: \"0.4\"\n</code></pre>"},{"location":"usage/cards/card_vacuum/","title":"Vacuum Card","text":""},{"location":"usage/cards/card_vacuum/#description","title":"Description","text":"<p>This is a card to control your Robot-vacuum. It has support for all vacuums which use the services <code>vacuum.start</code>, <code>vacuum.stop</code>, <code>vacuum.return_to_base</code> and <code>vacuum.locate</code></p>"},{"location":"usage/cards/card_vacuum/#variables","title":"Variables","text":"Variable Default Required Notes entity <code>vacuum.*</code> <code>ulm_card_vacuum_name</code> Add a custom name <code>ulm_card_vacuum_icon</code> Add a custom MDI icon <code>ulm_card_vacuum_label</code> Add a custom label <code>ulm_card_vacuum_room</code> Add a script to clean a specific room <code>ulm_card_vacuum_room_icon</code> Add custom icon to the room script <code>ulm_card_vacuum_camera</code> Add a camera entity to the card to show the vacuum map <code>ulm_card_vacuum_camera_toggle</code> Only show the camera entity while cleaning ulm_card_vacuum_color state based Set Custom Color ulm_card_vacuum_force_background_color <code>false</code> Set <code>ulm_card_vacuum_color</code> as background color in active state `"},{"location":"usage/cards/card_vacuum/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: \"card_vacuum\"\n  entity: \"vacuum.&lt;Your_Vacuum&gt;\"\n\n- type: \"custom:button-card\"\n  template: \"card_vacuum\"\n  entity: \"vacuum.&lt;Your_Vacuum&gt;\"\n  variables:\n    ulm_card_vacuum_room: \"script.clean_kitchen\"\n    ulm_card_vacuum_room_icon: \"mdi:table-chair\"\n    ulm_card_vacuum_camera: \"camera.vacuum_map\"\n    ulm_card_vacuum_camera_toggle: true\n</code></pre> Template Code card_vacuum.yaml<pre><code>---\n### Card Vacuum ###\ncard_vacuum:\n  show_name: false\n  show_icon: false\n  show_label: false\n  template:\n    - \"icon_more_info_new\"\n    - \"ulm_translation_engine\"\n  variables:\n    ulm_card_vacuum_name: \"[[[ return entity.attributes.friendly_name ]]]\"\n    ulm_card_vacuum_icon: \"[[[ return entity.attributes.icon ]]]\"\n    ulm_card_vacuum_room:\n    ulm_card_vacuum_room_icon: \"[[[ return entity.attributes.icon ]]]\"\n    ulm_card_vacuum_camera: \"\"\n    ulm_card_vacuum_enable_popup: false\n    ulm_card_vacuum_camera_toggle: false\n    ulm_card_vacuum_force_background_color: false\n    ulm_card_vacuum_color: &gt;\n      [[[\n        var state = entity.state.toLowerCase();\n        var colors = {\n          \"cleaning\": \"blue\",\n          \"mowing\": \"blue\",\n          \"paused\": \"green\",\n          \"mopping\": \"yellow\",\n          \"returning\": \"purple\",\n          \"error\": \"red\",\n          \"default\": \"theme\"\n        }\n        return (colors[state] || colors[\"default\"]);\n      ]]]\n  triggers_update:\n    - \"[[[ return variables.ulm_card_vacuum_camera ]]]\"\n  state:\n    - operator: \"template\"\n      value: \"[[[ return variables.ulm_active_state ]]]\"\n      styles:\n        card:\n          - background-color: &gt;\n              [[[\n                  if (variables.ulm_card_vacuum_color) {\n                    if (variables.ulm_card_vacuum_force_background_color) {\n                      var color = variables.ulm_card_vacuum_color;\n                      return 'rgba(var(--color-' + color + '),var(--opacity-bg))';\n                    }\n                  }\n              ]]]\n  styles:\n    grid:\n      - grid-template-areas: &gt;\n          [[[\n            let map = \"'item1' 'map' 'item2'\"\n            if(variables.ulm_card_vacuum_camera != \"\"){\n              if(variables.ulm_card_vacuum_camera_toggle){\n                if(entity.state.toLowerCase() === 'cleaning' || entity.state.toLowerCase() === 'mopping' || entity.state.toLowerCase() === 'mowing'){\n                  return map;\n                }\n              } else {\n                 return map;\n              }\n            }\n            return \"'item1' 'item2'\"\n          ]]]\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: &gt;\n          [[[\n            let map = \"repeat(3, min-content)\"\n            if(variables.ulm_card_vacuum_camera != \"\"){\n              if(variables.ulm_card_vacuum_camera_toggle){\n                if(entity.state.toLowerCase() === 'cleaning' || entity.state.toLowerCase() === 'mopping' || entity.state.toLowerCase() === 'mowing'){\n                  return map;\n                }\n              } else {\n                 return map;\n              }\n            }\n            return \"repeat(2, min-content)\"\n          ]]]\n      - row-gap: \"12px\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n      - background-color: &gt;\n          [[[\n            if(hass.themes.darkMode){\n              return \"variables.ulm_card_vacuum_color\" + \", 0.1)\";\n              }\n          ]]]\n    custom_fields:\n      map:\n        - display: &gt;\n            [[[\n              let map = \"block\"\n              if(variables.ulm_card_vacuum_camera != \"\"){\n                if(variables.ulm_card_vacuum_camera_toggle){\n                  if(entity.state.toLowerCase() === 'cleaning' || entity.state.toLowerCase() === 'mopping' || entity.state.toLowerCase() === 'mowing'){\n                    return map;\n                  }\n                } else {\n                  return map;\n                }\n              }\n              return \"none\"\n            ]]]\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              icon: \"[[[ return variables.ulm_card_vacuum_icon ]]]\"\n              variables: &gt;\n                [[[\n                  let vars = variables;\n                  if(variables.ulm_card_vacuum_enable_popup) {\n                    vars.ulm_custom_popup = {\n                      'template': 'popup_vacuum_map',\n                      'popup_variables': {'ulm_card_vacuum_camera': variables.ulm_card_vacuum_camera }\n                    };\n                  }\n                  return vars;\n                ]]]\n              styles:\n                icon:\n                  - color: &gt;\n                      [[[\n                        var color = variables.ulm_card_vacuum_color;\n                        if(color == 'theme' || !variables.ulm_active_state){\n                          return 'rgba(var(--color-theme),0.2)';\n                        }\n                        return 'rgba(var(--color-' + color + '),1)';\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        var color = variables.ulm_card_vacuum_color;\n                        if(color == 'theme' || !variables.ulm_active_state){\n                          return 'rgba(var(--color-theme),0.05)';\n                        }\n                        return 'rgba(var(--color-' + color + '),0.2)';\n                      ]]]\n          item2:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              variables: &gt;\n                [[[\n                  let vars = variables;\n                  if(variables.ulm_card_vacuum_enable_popup) {\n                    vars.ulm_custom_popup = {\n                      'template': 'popup_vacuum_map',\n                      'popup_variables': {'ulm_card_vacuum_camera': variables.ulm_card_vacuum_camera }\n                    };\n                  }\n                  return vars;\n                ]]]\n              name: \"[[[ return variables.ulm_card_vacuum_name ]]]\"\n              label: &gt;\n                [[[\n                  let label = entity.attributes.friendly_name\n                  if(variables.ulm_card_vacuum_label){\n                    label = variables.ulm_card_vacuum_label;\n                  } else {\n                    label = variables.ulm_translation_state;\n                  }\n                  return label;\n                ]]]\n              state:\n                - operator: \"template\"\n                  value: \"[[[ return variables.ulm_active_state ]]]\"\n                  styles:\n                    name:\n                      - color: &gt;\n                          [[[\n                              if (variables.ulm_card_vacuum_force_background_color) {\n                                  return 'rgb(250,250,250)';\n                              }\n                          ]]]\n                    label:\n                      - color: &gt;\n                          [[[\n                              if (variables.ulm_card_vacuum_force_background_color) {\n                                  return 'rgb(250,250,250)';\n                              }\n                          ]]]\n    map:\n      card:\n        type: \"custom:button-card\"\n        show_name: false\n        show_icon: false\n        show_label: false\n        entity: \"[[[ return variables.ulm_card_vacuum_camera ]]]\"\n        show_entity_picture: \"true\"\n        styles:\n          card:\n            - box-shadow: \"none\"\n          icon:\n            - border-radius: \"20px\"\n            - width: \"100%\"\n    item2:\n      card:\n        type: \"custom:button-card\"\n        template: &gt;\n          [[[ return variables.ulm_card_vacuum_room ? \"list_4_items\" : \"list_3_items\"; ]]]\n        styles:\n          card:\n            - background: \"none\"\n            - border-radius: \"0\"\n          custom_fields:\n            item4:\n              - display: &gt;\n                  [[[ return variables.ulm_card_vacuum_room ? \"block\" : \"none\"; ]]]\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              icon: \"mdi:play\"\n              styles:\n                card:\n                  - background-color: &gt;\n                      [[[\n                        if(!hass.themes.darkMode &amp;&amp; variables.ulm_card_vacuum_force_background_color &amp;&amp; variables.ulm_active_state){\n                          return 'rgb(250,250,250)'\n                        }\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        var color = variables.ulm_card_vacuum_color;\n                        if (variables.ulm_card_vacuum_force_background_color &amp;&amp; variables.ulm_active_state) {\n                          return 'rgba(var(--color-' + color + '),0.2)';\n                        }\n                          return 'rgba(var(--color-theme),0.05)';\n                      ]]]\n                icon:\n                  - color: &gt;\n                      [[[\n                        var color = variables.ulm_card_vacuum_color;\n                        if (variables.ulm_card_vacuum_force_background_color &amp;&amp; variables.ulm_active_state) {\n                          return 'rgba(var(--color-' + color + '),1)';\n                        }\n                          return 'rgba(var(--color-theme),0.9)';\n                      ]]]\n              state:\n                - operator: \"template\"\n                  value: \"[[[ return ['cleaning','mopping','mowing'].includes(entity.state.toLowerCase()) ]]]\"\n                  icon: \"mdi:stop\"\n                  tap_action:\n                    action: \"perform-action\"\n                    perform_action: \"vacuum.stop\"\n                    target:\n                      entity_id: \"[[[ return entity.entity_id ]]]\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: &gt;\n                  [[[\n                    return ['cleaning','mopping','mowing'].includes(entity.state.toLowerCase()) ? \"vacuum.stop\" : \"vacuum.start\";\n                  ]]]\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              icon: \"mdi:home-map-marker\"\n              styles:\n                card:\n                  - background-color: &gt;\n                      [[[\n                        if(!hass.themes.darkMode &amp;&amp; variables.ulm_card_vacuum_force_background_color &amp;&amp; variables.ulm_active_state){\n                          return 'rgb(250,250,250)'\n                        }\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        var color = variables.ulm_card_vacuum_color;\n                        if (variables.ulm_card_vacuum_force_background_color &amp;&amp; variables.ulm_active_state) {\n                          return 'rgba(var(--color-' + color + '),0.2)';\n                        }\n                          return 'rgba(var(--color-theme),0.05)';\n                      ]]]\n                icon:\n                  - color: &gt;\n                      [[[\n                        var color = variables.ulm_card_vacuum_color;\n                        if (variables.ulm_card_vacuum_force_background_color &amp;&amp; variables.ulm_active_state) {\n                          return 'rgba(var(--color-' + color + '),1)';\n                        }\n                          return 'rgba(var(--color-theme),0.9)';\n                      ]]]\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"vacuum.return_to_base\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n          item3:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              icon: \"mdi:map-marker\"\n              styles:\n                card:\n                  - background-color: &gt;\n                      [[[\n                        if(!hass.themes.darkMode &amp;&amp; variables.ulm_card_vacuum_force_background_color &amp;&amp; variables.ulm_active_state){\n                          return 'rgb(250,250,250)'\n                        }\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        var color = variables.ulm_card_vacuum_color;\n                        if (variables.ulm_card_vacuum_force_background_color &amp;&amp; variables.ulm_active_state) {\n                          return 'rgba(var(--color-' + color + '),0.2)';\n                        }\n                          return 'rgba(var(--color-theme),0.05)';\n                      ]]]\n                icon:\n                  - color: &gt;\n                      [[[\n                        var color = variables.ulm_card_vacuum_color;\n                        if (variables.ulm_card_vacuum_force_background_color &amp;&amp; variables.ulm_active_state) {\n                          return 'rgba(var(--color-' + color + '),1)';\n                        }\n                          return 'rgba(var(--color-theme),0.9)';\n                      ]]]\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"vacuum.locate\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n          item4:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              entity: \"[[[ return variables.ulm_card_vacuum_room ]]]\"\n              icon: \"[[[ return variables.ulm_card_vacuum_room_icon ]]]\"\n              styles:\n                card:\n                  - background-color: &gt;\n                      [[[\n                        if(!hass.themes.darkMode &amp;&amp; variables.ulm_card_vacuum_force_background_color &amp;&amp; variables.ulm_active_state){\n                          return 'rgb(250,250,250)'\n                        }\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        var color = variables.ulm_card_vacuum_color;\n                        if (variables.ulm_card_vacuum_force_background_color &amp;&amp; variables.ulm_active_state) {\n                          return 'rgba(var(--color-' + color + '),0.2)';\n                        }\n                          return 'rgba(var(--color-theme),0.05)';\n                      ]]]\n                icon:\n                  - color: &gt;\n                      [[[\n                        var color = variables.ulm_card_vacuum_color;\n                        if (variables.ulm_card_vacuum_force_background_color &amp;&amp; variables.ulm_active_state) {\n                          return 'rgba(var(--color-' + color + '),1)';\n                        }\n                          return 'rgba(var(--color-theme),0.9)';\n                      ]]]\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"script.turn_on\"\n                target:\n                  entity_id: \"[[[ return variables.ulm_card_vacuum_room ]]]\"\n</code></pre>"},{"location":"usage/cards/card_vertical_button/","title":"Vertical Button Card","text":""},{"location":"usage/cards/card_vertical_button/#description","title":"Description","text":"<p>Card <code>card_vertical_button</code> can be used in different ways. The primary usage is to switch between scenes or toggle a scene on/off. The secondary use is to toggle a switch or light. It's intended to be used with helper entities, either input_select or input_boolean.</p> <p>You connect the card to either an input_select (toggle between scenes) or input_boolean (toggle one scene) and the button will change the state of these entities. The final step is to create an automation that triggers on the state change and then runs the actions you want, apply a scene or interact with other entities.</p> <p>The variable <code>ulm_card_vertical_button_state</code> needs to be used together with input_select to tie a specific state to the button.</p>"},{"location":"usage/cards/card_vertical_button/#variables","title":"Variables","text":"Variable Default Required Notes ulm_card_vertical_button_state on Compare the entity state value with this value, ex: the button will be on if the entity.state == state (only required with input_select) ulm_card_vertical_button_color blue color for the when the button is on. The color names are defined in the theme. The following colors are supported: blue, green, yellow, pink, red, purple"},{"location":"usage/cards/card_vertical_button/#usage","title":"Usage","text":"<pre><code>- type: 'custom:button-card'\n  template: card_vertical_button\n  entity: input_select.test_vertical_buttons\n  name: Away\n  icon: mdi:television-classic\n  show_last_changed: true\n  variables:\n    ulm_card_vertical_button_state: Away\n    ulm_card_vertical_button_color: green\n</code></pre> Template Code card_vertical_button.yaml<pre><code>---\n### VERTICAL BUTTONS (fka SCENES) ###\ncard_vertical_button:\n  variables:\n    ulm_card_vertical_button_color: \"blue\"\n    ulm_card_vertical_button_state: \"on\"\n  show_label: true\n  label: \"\"\n  name: |\n    [[[\n      if( entity.entity_id.startsWith(\"input_select.\") )\n        return variables.ulm_card_vertical_button_state;\n      else if( entity.entity_id.startsWith(\"input_boolean.\") )\n        return \"\";\n      return entity.state;\n    ]]]\n  styles:\n    icon:\n      - color: \"rgba(var(--color-theme),0.2)\"\n    label:\n      - justify-self: \"center\"\n      - align-self: \"start\"\n      - font-weight: \"bolder\"\n      - font-size: \"12px\"\n      - filter: \"opacity(40%)\"\n    name:\n      - margin-top: \"10px\"\n      - justify-self: \"center\"\n      - font-weight: \"bold\"\n      - font-size: \"14px\"\n    img_cell:\n      - background-color: \"rgba(var(--color-theme),0.05)\"\n      - border-radius: \"50%\"\n      - place-self: \"center\"\n      - width: \"42px\"\n      - height: \"42px\"\n    grid:\n      - grid-template-areas: \"'i' 'n' 'l'\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"10px 0px 8px 0px\"\n  size: \"20px\"\n  state:\n    - operator: \"template\"\n      value: |\n        [[[\n          return entity.state == variables.ulm_card_vertical_button_state;\n        ]]]\n      styles:\n        icon:\n          - color: \"[[[ return `rgba(var(--color-${variables.ulm_card_vertical_button_color}), 1)`; ]]]\"\n        label:\n          - color: \"[[[ return `rgba(var(--color-${variables.ulm_card_vertical_button_color}-text), 1)`; ]]]\"\n        name:\n          - color: \"[[[ return `rgba(var(--color-${variables.ulm_card_vertical_button_color}-text), 1)`; ]]]\"\n        img_cell:\n          - background-color: \"[[[ return `rgba(var(--color-${variables.ulm_card_vertical_button_color}), 0.2)`; ]]]\"\n        card:\n          - background-color: \"[[[ return `rgba(var(--color-background-${variables.ulm_card_vertical_button_color}), var(--opacity-bg))`; ]]]\"\n  tap_action:\n    action: \"perform-action\"\n    perform_action: |\n      [[[\n        if( entity.entity_id.startsWith(\"input_select.\") )\n          return \"input_select.select_option\";\n        if( entity.entity_id.startsWith(\"input_boolean.\") )\n          return \"input_boolean.toggle\";\n        if( entity.entity_id.startsWith(\"switch.\") )\n          return \"switch.toggle\";\n        if( entity.entity_id.startsWith(\"light.\") )\n          return \"light.toggle\";\n        if( entity.entity_id.startsWith(\"automation.\") )\n          return \"automation.toggle\";\n        if( entity.entity_id.startsWith(\"input_button.\") )\n          return \"input_button.press\";\n        if( entity.entity_id.startsWith(\"fan.\") )\n          return \"fan.toggle\";\n        if( entity.entity_id.startsWith(\"vacuum.\") )\n          return \"vacuum.toggle\";\n        if( entity.entity_id.startsWith(\"script.\") )\n          return \"script.toggle\";\n        if( entity.entity_id.startsWith(\"button.\") )\n          return \"button.press\";\n        if( entity.entity_id.startsWith(\"lock.\") )\n          if(entity.state == \"locked\")\n            return \"lock.unlock\";\n          else\n            return \"lock.lock\";\n        // If we need to support other entities we can add these options here.\n        return \"\";\n      ]]]\n    target:\n      entity_id: \"[[[ return entity.entity_id; ]]]\"\n    data:\n      option: |\n        [[[\n          if( entity.entity_id.startsWith(\"input_select.\") )\n            return variables.ulm_card_vertical_button_state;\n        ]]]\n</code></pre>"},{"location":"usage/cards/card_weather/","title":"Weather Card","text":""},{"location":"usage/cards/card_weather/#description","title":"Description","text":"<p>This is a card based on simple-weather-card to show your weather. simple-weather-card lovelace resources must be installed for this one!</p>"},{"location":"usage/cards/card_weather/#variables","title":"Variables","text":"Variable Default Required Notes entity your weather entity ulm_card_weather_name <code>friendly_name</code> customize display name ulm_card_weather_primary_info <code>extrema</code> customize primary info. Set to <code>false</code> to disable. See simple-weather-card for more information ulm_card_weather_secondary_info <code>precipitation</code> customize secondary info. Set to <code>false</code> to disable. See simple-weather-card for more information ulm_card_weather_backdrop <code>false</code> add backdrop. See simple-weather-card for more information ulm_card_weather_custom customize weather data. See simple-weather-card"},{"location":"usage/cards/card_weather/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: card_weather\n  entity: weather.my_local_weather\n  variables:\n    ulm_card_weather_name: \" \"\n    ulm_card_weather_primary_info:\n      - wind_speed\n      - precipitation_probability\n    ulm_card_weather_backdrop:\n      fade: true\n    ulm_card_weather_custom:\n      - temp: sensor.temperature\n</code></pre> Template Code card_weather.yaml<pre><code>---\n### Card Weather ###\ncard_weather:\n  template:\n    - \"ulm_actions_card_overlay\"\n  variables:\n    ulm_card_weather_backdrop: false\n    ulm_card_weather_primary_info: \"extrema\"\n    ulm_card_weather_secondary_info: \"precipitation\"\n    ulm_card_weather_custom:\n      - temp: \"[[[ return entity.attributes.temperature ]]]\"\n  show_icon: false\n  show_name: false\n  show_label: false\n  styles:\n    grid:\n      - grid-template-areas: \"'item1'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content\"\n      - row-gap: \"12px\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"0px\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:simple-weather-card\"\n        entity: \"[[[ return entity.entity_id; ]]]\"\n        name: \"[[[ return variables.ulm_card_weather_name || entity.attributes.friendly_name ]]]\"\n        primary_info: \"[[[ return variables.ulm_card_weather_primary_info ]]]\"\n        secondary_info: \"[[[ return variables.ulm_card_weather_secondary_info ]]]\"\n        backdrop: \"[[[ return variables.ulm_card_weather_backdrop ]]]\"\n        custom: \"[[[ return variables?.ulm_card_weather_custom ]]]\"\n        card_mod:\n          style: |\n            ha-card {\n              border-radius: 14px;\n              box-shadow: none;\n            }\n            ha-card.type-custom-simple-weather-card {\n              padding: 24px;\n            }\n            ha-card[bg].type-custom-simple-weather-card{\n              color: white;\n            }\n            ha-card.type-custom-simple-weather-card .weather__info {\n              text-align: left\n            }\n</code></pre>"},{"location":"usage/cards/card_weather_ulm/","title":"Weather Card ULM","text":""},{"location":"usage/cards/card_weather_ulm/#description","title":"Description","text":"<p>This is a card to show your weather without usage of custom resources.</p>"},{"location":"usage/cards/card_weather_ulm/#variables","title":"Variables","text":"Variable Default Required Notes entity your weather entity ulm_card_weather_ulm_enable_popup <code>false</code>"},{"location":"usage/cards/card_weather_ulm/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: \"card_weather_ulm\"\n  entity: \"weather.lieusaint\"\n  variables:\n    ulm_card_weather_ulm_enable_popup: true\n</code></pre> Template Code card_weather.yaml<pre><code>---\n### Card Weather ULM ###\ncard_weather_ulm:\n  template:\n    - \"icon_more_info_new\"\n    - \"ulm_translation_engine\"\n  variables:\n    ulm_card_weather_ulm_enable_popup: false\n    ulm_weather_popup_surpress_first_forecast: false\n  show_icon: false\n  show_name: false\n  show_label: false\n  styles:\n    grid:\n      - grid-template-areas: \"'item1' 'item2'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"1fr 1fr\"\n      - row-gap: \"12px\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              icon: |\n                [[[\n                  var state = entity.state;\n                  var icon = {\n                    \"clear-night\": \"mdi:weather-night\",\n                    \"cloudy\": \"mdi:weather-cloudy\",\n                    \"exceptional\": \"mdi:weather-sunny-alert\",\n                    \"fog\": \"mdi:weather-fog\",\n                    \"hail\": \"mdi:weather-hail\",\n                    \"lightning\": \"mdi:weather-lightning\",\n                    \"lightning-rainy\": \"mdi:weather-lightning-rainy\",\n                    \"partlycloudy\": \"mdi:weather-partly-cloudy\",\n                    \"pouring\": \"mdi:weather-pouring\",\n                    \"rainy\": \"mdi:weather-rainy\",\n                    \"snowy\": \"mdi:weather-snowy\",\n                    \"snowy-rainy\": \"mdi:weather-snowy-rainy\",\n                    \"sunny\": \"mdi:weather-sunny\",\n                    \"windy\": \"mdi:weather-windy\",\n                    \"default\": \"mdi:crosshairs-question\"\n                    }\n                  return (icon[state] || icon[\"default\"]);\n                ]]]\n              variables: &gt;\n                [[[\n                  let vars = variables;\n\n                  if(variables.ulm_card_weather_ulm_enable_popup) {\n                    vars.ulm_custom_popup = {\n                      'template': 'popup_weather_forecast',\n                      'popup_variables': {'ulm_weather_popup_surpress_first_forecast': variables.ulm_weather_popup_surpress_first_forecast}\n                    };\n                  }\n                  return vars;\n                ]]]\n              styles:\n                icon:\n                  - color: &gt;\n                      [[[\n                        var state = entity.state;\n                        var icon = {\n                          \"clear-night\": \"rgba(var(--color-yellow),1)\",\n                          \"cloudy\": \"rgba(var(--color-blue),1)\",\n                          \"exceptional\": \"rgba(var(--color-red),1)\",\n                          \"fog\": \"rgba(var(--color-grey),1)\",\n                          \"hail\": \"rgba(var(--color-blue),1)\",\n                          \"lightning\": \"rgba(var(--color-blue),1)\",\n                          \"lightning-rainy\": \"rgba(var(--color-blue),1)\",\n                          \"partlycloudy\": \"rgba(var(--color-yellow),1)\",\n                          \"pouring\": \"rgba(var(--color-grey),1)\",\n                          \"rainy\": \"rgba(var(--color-blue),1)\",\n                          \"snowy\": \"rgba(var(--color-blue),1)\",\n                          \"snowy-rainy\": \"rgba(var(--color-blue),1)\",\n                          \"sunny\": \"rgba(var(--color-yellow),1)\",\n                          \"windy\": \"rgba(var(--color-grey),1)\",\n                          \"default\": \"rgba(var(--color-grey),1)\",\n                          }\n                        return (icon[state] || icon[\"default\"]);\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        var state = entity.state;\n                        var icon = {\n                          \"clear-night\": \"rgba(var(--color-yellow),0.2)\",\n                          \"cloudy\": \"rgba(var(--color-blue),0.2)\",\n                          \"exceptional\": \"rgba(var(--color-red),0.2)\",\n                          \"fog\": \"rgba(var(--color-grey),0.2)\",\n                          \"hail\": \"rgba(var(--color-blue),0.2)\",\n                          \"lightning\": \"rgba(var(--color-blue),0.2)\",\n                          \"lightning-rainy\": \"rgba(var(--color-blue),0.2)\",\n                          \"partlycloudy\": \"rgba(var(--color-yellow),0.2)\",\n                          \"pouring\": \"rgba(var(--color-grey),0.2)\",\n                          \"rainy\": \"rgba(var(--color-blue),0.2)\",\n                          \"snowy\": \"rgba(var(--color-blue),0.2)\",\n                          \"snowy-rainy\": \"rgba(var(--color-blue),0.2)\",\n                          \"sunny\": \"rgba(var(--color-yellow),0.2)\",\n                          \"windy\": \"rgba(var(--color-grey),0.2)\",\n                          \"default\": \"rgba(var(--color-grey),0.2)\",\n                          }\n                        return (icon[state] || icon[\"default\"]);\n                      ]]]\n          item2:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              show_state: true\n              styles:\n                grid:\n                  - grid-template-areas: \"'i n' 'i s'\"\n              variables: &gt;\n                [[[\n                  let vars = variables;\n\n                  if(variables.ulm_card_weather_ulm_enable_popup) {\n                    vars.ulm_custom_popup = {\n                      'template': 'popup_weather_forecast',\n                      'popup_variables': {'ulm_weather_popup_surpress_first_forecast': variables.ulm_weather_popup_surpress_first_forecast}\n                    };\n                  }\n                  return vars;\n                ]]]\n    item2:\n      card:\n        type: \"custom:button-card\"\n        template: \"list_2_items\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              icon: \"mdi:water\"\n              tap_action:\n                action: \"none\"\n              layout: \"icon_state\"\n              show_state: false\n              show_units: false\n              show_name: false\n              custom_fields:\n                item: \"[[[ return entity.attributes.humidity + '%' ]]]\"\n              styles:\n                grid:\n                  - grid-template-areas: \"'i item'\"\n                  - grid-template-columns: \"40% 60%\"\n                card:\n                  - box-shadow: \"none\"\n                  - padding: \"0px\"\n                  - background-color: \"rgba(var(--color-theme),0.05)\"\n                  - border-radius: \"14px\"\n                  - place-self: \"center\"\n                  - height: \"42px\"\n                icon:\n                  - color: \"rgba(var(--color-theme),0.9)\"\n                img_cell:\n                  - justify-content: \"right\"\n                custom_fields:\n                  item:\n                    - text-align: \"left\"\n                    - font-size: \"1rem\"\n              size: \"20px\"\n              color: \"var(--google-grey)\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              icon: \"mdi:thermometer\"\n              tap_action:\n                action: \"none\"\n              layout: \"icon_state\"\n              show_state: false\n              show_units: false\n              show_name: false\n              custom_fields:\n                item: \"[[[ return entity.attributes.temperature + entity.attributes.temperature_unit ]]]\"\n              styles:\n                grid:\n                  - grid-template-areas: \"'i item'\"\n                  - grid-template-columns: \"45% 55%\"\n                card:\n                  - box-shadow: \"none\"\n                  - padding: \"0px\"\n                  - background-color: \"rgba(var(--color-theme),0.05)\"\n                  - border-radius: \"14px\"\n                  - place-self: \"center\"\n                  - height: \"42px\"\n                icon:\n                  - color: \"rgba(var(--color-theme),0.9)\"\n                img_cell:\n                  - justify-content: \"right\"\n                custom_fields:\n                  item:\n                    - text-align: \"left\"\n                    - font-size: \"1rem\"\n              size: \"20px\"\n              color: \"var(--google-grey)\"\n</code></pre>"},{"location":"usage/cards/card_welcome_scenes/","title":"Welcome Scenes Card","text":""},{"location":"usage/cards/card_welcome_scenes/#description","title":"Description","text":"<p>This is a card which shows the basic needs for your dashboard. This card can generate itself automatically. It is also included in the preview-dashboard which comes with a fresh installation of UI-Minimalist.</p>"},{"location":"usage/cards/card_welcome_scenes/#variables","title":"Variables","text":"Variable Default Required Notes ulm_card_welcome_scenes_collapse Enables the collapse function.  requires an <code>input_boolean</code> to track the state ulm_weather This is your weather provider.  Example: <code>weather.your_provider</code> ulm_language Language of your system You can set a different format with the BCP-47 language tags  Example: <code>\"en-US\"</code> or just <code>\"en\"</code> entity_1 auto-entities Can be any common type of entity  if no entity is specified defaults to auto-entities entity_2 auto-entities Can be any common type of entity  if no entity is specified defaults to auto-entities entity_3 auto-entities Can be any common type of entity  if no entity is specified defaults to auto-entities entity_4 auto-entities Can be any common type of entity  if no entity is specified defaults to auto-entities entity_5 auto-entities Can be any common type of entity  if no entity is specified defaults to auto-entities entity_6 none Can be any common type of entity entity_7 none Can be any common type of entity"},{"location":"usage/cards/card_welcome_scenes/#entity-variables","title":"Entity Variables","text":"Variable Default Required Notes _entity_id Support almost all types of entities  Scenes do always show as off _icon The icon to show _name The name to show _color Random Color of the icon  Can choose between: <code>blue</code>, <code>red</code>, <code>green</code>, <code>yellow</code>, <code>pink</code>, <code>purple</code>  If not specified, it will take a random color _state <code>on</code> or <code>playing</code> Define <code>input_select</code> state or give manual state for pill to be full _nav_path Navigate to another view  Overrides other types of actions _service_data Data to be passed through to data_service. Useful for running scripts with custom fields/parameters"},{"location":"usage/cards/card_welcome_scenes/#requirement-collapse-function","title":"Requirement Collapse Function","text":"<p>This feature is fully optional. It requires some more manual configuration! You need to create a <code>input_boolean</code> in HA to track the state. See Docs. Furthermore, you need to add the <code>input_boolean</code> to the variable <code>ulm_card_welcome_scenes_collapse</code> and to either the <code>entity</code> or <code>triggers_update</code> to make sure it directly refreshes the state.</p> <p>Warning</p> <p>Do not use <code>triggers_update: \"all\"</code>! This will lead to unwanted behavior with the random colors generator.</p>"},{"location":"usage/cards/card_welcome_scenes/#usage","title":"Usage","text":"<p>You can set 1 to 7 entities to show 1 to 7 pills dynamically  If set none it uses <code>auto-entities</code> with max 5 pills</p> <pre><code>- type: \"custom:button-card\"\n  template: \"card_welcome_scenes\"\n  #triggers_update: input_boolean.&lt;Your_boolean&gt;\n  #entity: input_boolean.&lt;Your_boolean&gt;\n  variables:\n    ulm_card_welcome_scenes_collapse: input_boolean.&lt;Your_boolean&gt; #OPTIONAl --&gt; uncomment also entity or triggers_update\n    ulm_weather: \"weather.YOUR_WEATHERPROVIDER\"\n    entity_1:\n      entity_id: \"&lt;YOUR_ENTITY&gt;\"\n      icon: \"mdi:YOUR_ICON\" #OPTIONAL\n      name: \"YOUR_NAME\" #OPTIONAL\n      color: \"blue\"\n    entity_2:\n      entity_id: \"&lt;YOUR_ENTITY&gt;\"\n      icon: \"mdi:YOUR_ICON\" #OPTIONAL\n      name: \"YOUR_NAME\" #OPTIONAL\n      color: \"red\"\n    entity_3:\n      entity_id: \"&lt;YOUR_ENTITY&gt;\"\n      icon: \"mdi:YOUR_ICON\" #OPTIONAL\n      name: \"YOUR_NAME\" #OPTIONAL\n      color: \"green\"\n    entity_4:\n      entity_id: \"&lt;YOUR_ENTITY&gt;\"\n      icon: \"mdi:YOUR_ICON\" #OPTIONAL\n      name: \"YOUR_NAME\" #OPTIONAL\n      color: \"purple\"\n    entity_5:\n      entity_id: \"&lt;YOUR_ENTITY&gt;\"\n      icon: \"mdi:YOUR_ICON\" #OPTIONAL\n      name: \"YOUR_NAME\" #OPTIONAL\n      color: \"yellow\"\n    entity_6:\n      entity_id: \"&lt;YOUR_ENTITY&gt;\"\n      icon: \"mdi:YOUR_ICON\" #OPTIONAL\n      name: \"YOUR_NAME\" #OPTIONAL\n      color: \"pink\"\n    entity_7:\n      entity_id: \"&lt;YOUR_ENTITY&gt;\"\n      icon: \"mdi:YOUR_ICON\" #OPTIONAL\n      name: \"YOUR_NAME\" #OPTIONAL\n      color: \"yellow\"\n</code></pre> Auto-entities <pre><code>- type: \"custom:button-card\"\n  template: \"card_welcome_scenes\"\n  #triggers_update: input_boolean.&lt;Your_boolean&gt;\n  #entity: input_boolean.&lt;Your_boolean&gt;\n  variables:\n    ulm_card_welcome_scenes_collapse: input_boolean.&lt;Your_boolean&gt; #OPTIONAl --&gt; uncomment also entity or triggers_update\n    ulm_weather: \"weather.YOUR_WEATHERPROVIDER\"\n</code></pre> Random Colors <pre><code>- type: \"custom:button-card\"\n  template: \"card_welcome_scenes\"\n  #triggers_update: input_boolean.&lt;Your_boolean&gt;\n  #entity: input_boolean.&lt;Your_boolean&gt;\n  variables:\n    ulm_card_welcome_scenes_collapse: input_boolean.&lt;Your_boolean&gt; #OPTIONAl --&gt; uncomment also entity or triggers_update\n    ulm_weather: \"weather.YOUR_WEATHERPROVIDER\"\n    entity_1:\n      entity_id: \"&lt;YOUR_ENTITY&gt;\"\n      icon: \"mdi:YOUR_ICON\" #OPTIONAL\n      name: \"YOUR_NAME\" #OPTIONAL\n    entity_2:\n      entity_id: \"&lt;YOUR_ENTITY&gt;\"\n      icon: \"mdi:YOUR_ICON\" #OPTIONAL\n      name: \"YOUR_NAME\" #OPTIONAL\n    entity_3:\n      entity_id: \"&lt;YOUR_ENTITY&gt;\"\n      icon: \"mdi:YOUR_ICON\" #OPTIONAL\n      name: \"YOUR_NAME\" #OPTIONAL\n    entity_4:\n      entity_id: \"&lt;YOUR_ENTITY&gt;\"\n      icon: \"mdi:YOUR_ICON\" #OPTIONAL\n      name: \"YOUR_NAME\" #OPTIONAL\n    entity_5:\n      entity_id: \"&lt;YOUR_ENTITY&gt;\"\n      icon: \"mdi:YOUR_ICON\" #OPTIONAL\n      name: \"YOUR_NAME\" #OPTIONAL\n    entity_6:\n      entity_id: \"&lt;YOUR_ENTITY&gt;\"\n      icon: \"mdi:YOUR_ICON\" #OPTIONAL\n      name: \"YOUR_NAME\" #OPTIONAL\n    entity_7:\n      entity_id: \"&lt;YOUR_ENTITY&gt;\"\n      icon: \"mdi:YOUR_ICON\" #OPTIONAL\n      name: \"YOUR_NAME\" #OPTIONAL\n</code></pre> Template Code card_welcome_scenes.yaml<pre><code>---\ncard_welcome_scenes:\n  variables:\n    ulm_weather: \"[[[ return variables.ulm_weather]]]\"\n    ulm_language: \"[[[ return hass['language']; ]]]\"\n    entity_1:\n      entity_id: \"\"\n      color: &gt;\n        [[[\n          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];\n          var color = colors[Math.floor(Math.random() * colors.length)];\n          return color;\n        ]]]\n    entity_2:\n      entity_id: \"\"\n      color: &gt;\n        [[[\n          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];\n          var color = colors[Math.floor(Math.random() * colors.length)];\n          return color;\n        ]]]\n    entity_3:\n      entity_id: \"\"\n      color: &gt;\n        [[[\n          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];\n          var color = colors[Math.floor(Math.random() * colors.length)];\n          return color;\n        ]]]\n    entity_4:\n      entity_id: \"\"\n      color: &gt;\n        [[[\n          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];\n          var color = colors[Math.floor(Math.random() * colors.length)];\n          return color;\n        ]]]\n    entity_5:\n      entity_id: \"\"\n      color: &gt;\n        [[[\n          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];\n          var color = colors[Math.floor(Math.random() * colors.length)];\n          return color;\n        ]]]\n    entity_6:\n      entity_id: \"\"\n      color: &gt;\n        [[[\n          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];\n          var color = colors[Math.floor(Math.random() * colors.length)];\n          return color;\n        ]]]\n    entity_7:\n      entity_id: \"\"\n      color: &gt;\n        [[[\n          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];\n          var color = colors[Math.floor(Math.random() * colors.length)];\n          return color;\n        ]]]\n  template:\n    - \"ulm_language_variables\"\n    - \"ulm_translation_engine\"\n  show_icon: false\n  show_name: false\n  show_label: true\n  styles:\n    grid:\n      - grid-template-areas: &gt;\n          [[[\n            if(variables.ulm_card_welcome_scenes_collapse &amp;&amp; states[variables.ulm_card_welcome_scenes_collapse].state == 'on'){\n              return \"\\'item1\\' \\'item2\\' \";\n            } else {\n              return \"\\'item1\\' \\'item2\\' \\'item3\\' \\'item4\\'\";\n            }\n          ]]]\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content min-content\"\n      - row-gap: \"0px\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"10px\"\n    custom_fields:\n      item3:\n        - display: &gt;\n            [[[\n              if(variables.ulm_card_welcome_scenes_collapse &amp;&amp; states[variables.ulm_card_welcome_scenes_collapse].state == 'on'){\n                return \"none\";\n              } else {\n                return \"block\";\n              }\n            ]]]\n      item4:\n        - display: &gt;\n            [[[\n              if(variables.ulm_card_welcome_scenes_collapse &amp;&amp; states[variables.ulm_card_welcome_scenes_collapse].state == 'on'){\n                return \"none\";\n              } else {\n                return \"block\";\n              }\n            ]]]\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        template: \"card_topbar_welcome\"\n        variables:\n          ulm_card_welcome_scenes_collapse: \"[[[ return variables.ulm_card_welcome_scenes_collapse ]]]\"\n          ulm_weather: \"[[[ return variables.ulm_weather]]]\"\n          ulm_language: \"[[[ return variables.ulm_language ]]]\"\n        styles:\n          card:\n            - border-radius: \"none\"\n            - box-shadow: \"none\"\n            - padding: \"4px\"\n    item2:\n      card:\n        type: \"custom:button-card\"\n        show_icon: false\n        show_label: false\n        show_name: true\n        show_entity_picture: false\n        name: |\n          [[[\n            var today = new Date();\n            var time = today.getHours()\n            let welcome = '';\n            if (time &gt;= '18'){\n              welcome = variables.ulm_evening;\n            } else if (time &gt;= '12'){\n              welcome = variables.ulm_afternoon;\n            } else if (time &gt;= '5'){\n              welcome = variables.ulm_morning;\n            } else {\n              welcome = variables.ulm_hello;\n            }\n            return welcome + ', ' + '   &lt;br&gt;' + user.name + '!';\n          ]]]\n        styles:\n          name:\n            - align-self: \"start\"\n            - justify-self: \"start\"\n            - font-weight: \"bold\"\n            - font-size: \"24px\"\n            - margin-left: \"16px\"\n          grid:\n            - grid-template-areas: \"'i n' 'i l'\"\n            - grid-template-columns: \"min-content auto\"\n            - grid-template-rows: \"min-content min-content\"\n            - text-align: \"start\"\n          card:\n            - box-shadow: \"none\"\n            - padding-bottom: \"8px\"\n    item3:\n      card:\n        type: \"custom:button-card\"\n        show_icon: true\n        show_label: true\n        show_name: true\n        show_entity_picture: false\n        name: \"[[[ return variables.ulm_translation_scenes ]]]\"\n        icon: \"mdi:dots-vertical\"\n        styles:\n          icon:\n            - height: \"20px\"\n            - filter: \"opacity(50%)\"\n          name:\n            - align-self: \"start\"\n            - justify-self: \"start\"\n            - font-weight: \"bold\"\n            - font-size: \"18px\"\n            - margin-left: \"16px\"\n          grid:\n            - grid-template-areas: \"'n i'\"\n            - grid-template-columns: \"6fr 1fr\"\n            - grid-template-rows: \"min-content min-content\"\n            - text-align: \"start\"\n          card:\n            - box-shadow: \"none\"\n            - padding-bottom: \"0px\"\n            - bottom: \"10px\"\n    item4:\n      card:\n        type: \"custom:button-card\"\n        template: &gt;\n          [[[\n            if(variables?.entity_1?.entity_id != \"\"){\n              return 'card_scenes_welcome'\n            } else {\n              return 'card_scenes_welcome_auto'\n            }\n          ]]]\n        styles:\n          card:\n            - border-radius: \"none\"\n            - box-shadow: \"none\"\n            - padding: \"4px\"\n        variables:\n          entity_1: \"[[[ return variables.entity_1]]]\"\n          entity_2: \"[[[ return variables.entity_2]]]\"\n          entity_3: \"[[[ return variables.entity_3]]]\"\n          entity_4: \"[[[ return variables.entity_4]]]\"\n          entity_5: \"[[[ return variables.entity_5]]]\"\n          entity_6: \"[[[ return variables.entity_6]]]\"\n          entity_7: \"[[[ return variables.entity_7]]]\"\ncard_title_welcome:\n  tap_action:\n    action: \"none\"\n  show_icon: false\n  show_label: true\n  show_name: true\n  styles:\n    card:\n      - background-color: \"rgba(0,0,0,0)\"\n      - box-shadow: \"none\"\n      - height: \"auto\"\n      - width: \"auto\"\n      - margin-top: \"-10px\"\n      - margin-left: \"16px\"\n      - margin-bottom: \"-15px\"\n    grid:\n      - grid-template-areas: \"'n' 'l'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content min-content\"\n    name:\n      - justify-self: \"start\"\n      - font-weight: \"bold\"\n      - font-size: \"20px\"\n    label:\n      - justify-self: \"start\"\n      - font-weight: \"bold\"\n      - font-size: \"1rem\"\n      - opacity: \"0.4\"\n\n# pill\ncard_scenes_pill_welcome:\n  show_icon: false\n  show_label: false\n  show_name: false\n  state:\n    - operator: \"template\"\n      value: &gt;\n        [[[\n          return (entity?.state !== 'on' &amp;&amp; entity?.state !== 'playing' &amp;&amp; entity?.state != variables?.state)\n        ]]]\n      styles:\n        card:\n          - overflow: \"visible\"\n          - box-shadow: \"none\"\n  styles:\n    grid:\n      - grid-template-areas: \"'item1' 'item2'\"\n      - grid-template-columns: \"min-content\"\n      - grid-template-rows: \"1fr 1fr\"\n      - row-gap: \"12px\"\n      - justify-items: \"center\"\n      - column-gap: \"auto\"\n    card:\n      - border-radius: \"50px\"\n      - place-self: \"center\"\n      - width: \"52px\"\n      - height: \"84px\"\n      - box-shadow: &gt;\n          [[[\n            if (hass.themes.darkMode){\n              return \"0px 2px 4px 0px rgba(0,0,0,0.80)\";\n            } else {\n              return \"var(--box-shadow)\";\n            }\n          ]]]\n  color: \"var(--google-grey)\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        show_icon: true\n        show_label: false\n        show_name: false\n        tap_action:\n          action: &gt;\n            [[[\n              if(variables?.nav_path){\n                return \"navigate\"\n              }\n              return \"perform-action\"\n            ]]]\n          perform_action: &gt;\n            [[[\n              if(entity?.entity_id.startsWith(\"scene.\")){\n                return \"scene.turn_on\"\n              }\n              if(entity?.entity_id.startsWith(\"media_player.\")){\n                return \"media_player.media_play_pause\"\n              }\n              if(entity?.entity_id.startsWith(\"input_select.\")){\n                return \"input_select.select_option\"\n              }\n              if(entity?.entity_id.startsWith(\"script.\")){\n                return entity.entity_id\n              }\n              return \"homeassistant.toggle\"\n            ]]]\n          navigation_path: \"[[[ return variables?.nav_path; ]]]\"\n          target: |\n            [[[\n              if(typeof(entity) !== 'undefined' &amp;&amp; entity !== undefined){\n                return { entity_id: entity?.entity_id };\n              }\n            ]]]\n          data: |\n            [[[\n              if (variables.service_data){\n                return variables.service_data\n              }\n              if(typeof(entity) !== 'undefined' &amp;&amp; entity !== undefined){\n                if( entity?.entity_id.startsWith(\"input_select.\") )\n                  return { option: variables.state };\n              }\n            ]]]\n        styles:\n          grid:\n            - grid-template-areas: \"i\"\n          icon:\n            - color: &gt;\n                [[[\n                  var color = variables?.color\n                  if(hass.themes.darkMode){var color = \"#FAFAFA\";}\n                  return `rgba(var(--color-${color}), 1)`;\n                ]]]\n            - width: \"20px\"\n          img_cell:\n            - background-color: &gt;\n                [[[\n                  var color = variables?.color\n                  var opacity = '0.20'\n                  if(hass.themes.darkMode){var opacity = '1'}\n                  return `rgba(var(--color-${color}), ${opacity})`;\n                ]]]\n            - border-radius: \"50%\"\n            - width: \"42px\"\n            - height: \"42px\"\n          card:\n            - box-shadow: \"none\"\n            - border-radius: \"50px\"\n            - padding: \"5px\"\n        state:\n          - operator: \"template\"\n            value: &gt;\n              [[[\n                return (entity?.state !== 'on' &amp;&amp; entity?.state !== 'playing' &amp;&amp; entity?.state != variables?.state)\n              ]]]\n            styles:\n              card:\n                - overflow: \"visible\"\n                - box-shadow: &gt;\n                    [[[\n                      if (hass.themes.darkMode){\n                        return \"0px 2px 4px 0px rgba(0,0,0,0.80)\";\n                      } else {\n                        return \"var(--box-shadow)\";\n                      }\n                    ]]]\n    item2:\n      card:\n        type: \"custom:button-card\"\n        show_icon: false\n        show_label: false\n        tap_action:\n          action: &gt;\n            [[[\n              if(variables?.nav_path){\n                return \"navigate\"\n              }\n              return \"perform-action\"\n            ]]]\n          navigation_path: \"[[[ return variables?.nav_path; ]]]\"\n          perform_action: &gt;\n            [[[\n              if(entity?.entity_id.startsWith(\"scene.\")){\n                return \"scene.turn_on\"\n              }\n              if(entity?.entity_id.startsWith(\"media_player.\")){\n                return \"media_player.media_play_pause\"\n              }\n              if(entity?.entity_id.startsWith(\"input_select.\")){\n                return \"input_select.select_option\"\n              }\n              if(entity?.entity_id.startsWith(\"script.\")){\n                return entity.entity_id\n              }\n              return \"homeassistant.toggle\"\n            ]]]\n          target: |\n            [[[\n              if(typeof(entity) !== 'undefined' &amp;&amp; entity !== undefined){\n                return { entity_id: entity?.entity_id };\n              }\n            ]]]\n          data: |\n            [[[\n              if (variables.service_data){\n                return variables.service_data\n              }\n              if(typeof(entity) !== 'undefined' &amp;&amp; entity !== undefined){\n                if( entity?.entity_id.startsWith(\"input_select.\") )\n                  return { option: variables.state };\n              }\n            ]]]\n        styles:\n          grid:\n            - grid-template-areas: \"n\"\n          name:\n            - justify-self: \"center\"\n            - font-weight: \"bold\"\n            - font-size: \"9.5px\"\n            - padding-bottom: \"7px\"\n            - overflow: \"[[[return (entity?.state !== 'on' &amp;&amp; entity?.state !== 'playing' &amp;&amp; entity?.state != variables?.state) ? 'visible' : 'hidden']]]\"\n          card:\n            - box-shadow: \"none\"\n            - padding: \"0px 5px 5px 5px\"\n            - margin-top: \"-5px\"\n            - border-radius: \"50px\"\n            - overflow: \"[[[return (entity?.state !== 'on' &amp;&amp; entity?.state !== 'playing' &amp;&amp; entity?.state != variables?.state) ? 'visible' : 'hidden']]]\"\ncard_topbar_welcome:\n  show_icon: false\n  show_name: false\n  show_label: false\n  styles:\n    grid:\n      - grid-template-areas: \"item1 item2 item3\"\n      - justify-content: \"space-between\"\n      - display: \"flex\"\n    card:\n      - border-radius: \"none\"\n      - box-shadow: \"none\"\n      - padding: \"12px\"\n      - background: \"none\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        template: \"chips\"\n        entity: \"[[[ return variables.ulm_card_welcome_scenes_collapse ]]]\"\n        icon: \"mdi:chevron-up\"\n        show_icon: true\n        styles:\n          grid:\n            - grid-template-areas: \"'i'\"\n        state:\n          - value: \"on\"\n            icon: \"mdi:chevron-down\"\n            styles:\n              icon:\n                - color: \"rgb(var(--color-theme))\"\n        tap_action:\n          action: \"perform-action\"\n          perform_action: \"input_boolean.toggle\"\n          target:\n            entity_id: \"[[[ return variables.ulm_card_welcome_scenes_collapse ]]]\"\n    item2:\n      card:\n        type: \"custom:button-card\"\n        template: \"chip_weather_date\"\n        entity: \"[[[ return variables.ulm_weather]]]\"\n        variables:\n          ulm_weather: \"[[[ return variables.ulm_weather ]]]\"\n          ulm_language: \"[[[ return variables.ulm_language ]]]\"\n        styles:\n          card:\n            - width: \"100px\"\n    item3:\n      card:\n        type: \"custom:button-card\"\n        tap_action:\n          action: \"navigate\"\n          navigation_path: \"/config/dashboard\"\n        template: \"chip_mdi_icon_only\"\n        variables:\n          ulm_chip_mdi_icon_only_icon: \"mdi:cog-outline\"\n        styles:\n          card:\n            - align-self: \"end\"\n# auto-entities\ncard_scenes_welcome_auto:\n  show_icon: false\n  show_name: true\n  show_label: false\n  variables:\n    colors: &gt;\n      [[[\n        var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];\n        var color = colors[Math.floor(Math.random() * colors.length)];\n        return color;\n      ]]]\n  styles:\n    grid:\n      - grid-template-areas: \"item1\"\n      - display: \"flex\"\n      - justify-content: \"center\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:auto-entities\"\n        card:\n          type: \"grid\"\n          columns: 5\n          square: false\n        card_param: \"cards\"\n        sort:\n          count: 5\n        filter:\n          include:\n            - domain: \"light\"\n              options:\n                type: \"custom:button-card\"\n                template: \"card_scenes_pill_welcome\"\n                custom_fields:\n                  item1:\n                    card:\n                      type: \"custom:button-card\"\n                      entity: \"this.entity_id\"\n                      styles:\n                        icon:\n                          - color: &gt;\n                              [[[\n                                var color = variables.colors\n                                if(hass.themes.darkMode){var color = \"#FAFAFA\";}\n                                return `rgba(var(--color-${color}), 1)`;\n                              ]]]\n                          - width: \"20px\"\n                        img_cell:\n                          - background-color: &gt;\n                              [[[\n                                var color = variables.colors\n                                var opacity = '0.20'\n                                if(hass.themes.darkMode){var opacity = '1'}\n                                return `rgba(var(--color-${color}), ${opacity})`;\n                              ]]]\n                  item2:\n                    card:\n                      type: \"custom:button-card\"\n                      entity: \"this.entity_id\"\n</code></pre>"},{"location":"usage/chips/chip_alarm/","title":"Alarm Chip","text":""},{"location":"usage/chips/chip_alarm/#description","title":"Description","text":"<p>Alarm <code>chip</code> that displays alarm armed and disarmed state with colored icon.</p>"},{"location":"usage/chips/chip_alarm/#variables","title":"Variables","text":"Variable Default Required Notes entity entity of your alarm_control_panel"},{"location":"usage/chips/chip_alarm/#usage","title":"Usage","text":"<pre><code>- type: 'custom:button-card'\n  template: chip_alarm\n  entity: alarm_control_panel.alarm\n</code></pre> Template Code chip_alarm.yaml<pre><code>---\n### chip_alarm ###\nchip_alarm:\n  template:\n    - \"chip_icon_label\"\n    - \"ulm_translation_engine\"\n  label: \"[[[ return variables.ulm_translation_state ]]]\"\n  icon: |\n    [[[\n      var state = entity.state.toLowerCase();\n      var alarm_icon = {\n        \"default\": \"mdi:shield-outline\",\n        \"armed_home\": \"mdi:shield-home\",\n        \"armed_away\": \"mdi:shield-lock\",\n        \"armed_night\": \"mdi:shield-moon\",\n        \"disarmed\": \"mdi:shield-off\",\n        \"arming\": \"mdi:shield\",\n        \"triggered\": \"mdi:shield-alert\"\n      }\n      return (alarm_icon[state] || alarm_icon[\"default\"]);\n    ]]]\n  styles:\n    icon:\n      - color: |\n          [[[\n            var state = entity.state.toLowerCase();\n            var alarm_color = {\n              \"default\": \"var(--google-yellow)\",\n              \"armed_home\": \"var(--google-red)\",\n              \"armed_away\": \"var(--google-red)\",\n              \"armed_night\": \"var(--google-red)\",\n              \"disarmed\": \"var(--google-green)\",\n              \"arming\": \"var(--google-yellow)\",\n              \"triggered\": \"var(--google-red)\"\n            }\n            return (alarm_color[state] || alarm_color[\"default\"]);\n          ]]]\n</code></pre>"},{"location":"usage/chips/chip_back/","title":"Back Chip","text":""},{"location":"usage/chips/chip_back/#description","title":"Description","text":"<p>This is a <code>back-button</code>, primarily used if you switch between views and want a convenient way back.</p>"},{"location":"usage/chips/chip_back/#variables","title":"Variables","text":"Variable Default Required Notes ulm_chip_back_path /ui-lovelace-minimalist/0 Set the navigation path to your default view, eg. ui-lovelace-minimalist/home or lovelace. Not required if you run a default installation with HACS."},{"location":"usage/chips/chip_back/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: chip_back\n  variables:\n    ulm_chip_back_path: /ui-lovelace-minimalist/home\n</code></pre> Template Code chip_back.yaml<pre><code>---\n### Chip Back ###\nchip_back:\n  template: \"chips\"\n  variables:\n    ulm_chip_back_path: &gt;\n      [[[\n        return hass[\"panelUrl\"];\n      ]]]\n  tap_action:\n    action: \"navigate\"\n    navigation_path: \"[[[ return variables.ulm_chip_back_path; ]]]\"\n  show_icon: true\n  icon: \"mdi:arrow-left\"\n  styles:\n    grid:\n      - grid-template-areas: \"'i'\"\n</code></pre>"},{"location":"usage/chips/chip_icon_double_state/","title":"Icon Double State Chip","text":""},{"location":"usage/chips/chip_icon_double_state/#description","title":"Description","text":"<p>This <code>chip</code> displays can display an icon and value of two entities.</p>"},{"location":"usage/chips/chip_icon_double_state/#variables","title":"Variables","text":"Variable Default Required Notes ulm_chip_icon_double_state_icon This is the icon to show. See icons to read more about the used unicode <code>emojis</code>. ulm_chip_icon_double_state_entity_1 This is the <code>entity</code> to display in first position ulm_chip_icon_double_state_entity_2 This is the <code>entity</code> to display in second position ulm_chip_navigate_path The <code>path</code> to your view"},{"location":"usage/chips/chip_icon_double_state/#usage","title":"Usage","text":"<pre><code>- type: 'custom:button-card'\n  template: chip_icon_double_state\n  variables:\n    ulm_chip_icon_double_state_icon: '\ud83d\udcbb'\n    ulm_chip_icon_double_state_entity_1: sensor.nas_disk_used\n    ulm_chip_icon_double_state_entity_2: sensor.nas_cpu_load\n    ulm_chip_navigate_path: /lovelace-minimalist-ui/0\n</code></pre> Template Code chip_icon_double_state.yaml<pre><code>---\n### Chip Icon Double State ###\nchip_icon_double_state:\n  template: \"chips\"\n  tap_action:\n    action: \"navigate\"\n    navigation_path: \"[[[ return variables.ulm_chip_navigate_path; ]]]\"\n  triggers_update:\n    - \"[[[ return variables.ulm_chip_icon_double_state_entity_1 ]]]\"\n    - \"[[[ return variables.ulm_chip_icon_double_state_entity_2 ]]]\"\n  label: |\n    [[[\n      var icon = \"\u2754\";\n      if (variables.ulm_chip_icon_double_state_icon){\n        var icon = variables.ulm_chip_icon_double_state_icon;\n      }\n      var state1 = \"\";\n      if (states[variables.ulm_chip_icon_double_state_entity_1].state){\n        var state1 = helpers.localize(states[variables.ulm_chip_icon_double_state_entity_1])\n      }\n      var state2 = \"\";\n      if (states[variables.ulm_chip_icon_double_state_entity_2].state){\n        var state2 = helpers.localize(states[variables.ulm_chip_icon_double_state_entity_2])\n      }\n      return icon + \" \" + state1 + \" \u2022 \" + state2;\n    ]]]\n</code></pre>"},{"location":"usage/chips/chip_icon_label/","title":"Icon Label Chip","text":""},{"location":"usage/chips/chip_icon_label/#description","title":"Description","text":"<p>This <code>chip</code> displays an icon using mdi and a label.</p>"},{"location":"usage/chips/chip_icon_label/#variables","title":"Variables","text":"Variable Default Required Notes icon Icon to display label Label to display"},{"location":"usage/chips/chip_icon_label/#usage","title":"Usage","text":"<pre><code>- type: 'custom:button-card'\n  template: chip_icon_label\n  label: Label\n  icon: 'mdi:heart'\n</code></pre> Template Code chip_icon_label.yaml<pre><code>---\n## Chips Icon Label ###\nchip_icon_label:\n  template: \"chips\"\n  show_icon: true\n  size: \"100%\"\n  styles:\n    card:\n      - padding-top: \"6px\"\n      - padding-button: \"6px\"\n      - padding-left: \"12px\"\n    grid:\n      - grid-template-areas: \"'i l'\"\n      - grid-template-columns: \"max_content auto\"\n      - grid-template-rows: \"min-content\"\n    img_cell:\n      - place-self: \"center\"\n      - width: \"14px\"\n      - height: \"24px\"\n    label:\n      - font-size: \"12px\"\n      - margin-left: \"0px\"\n      - margin-top: \"0px\"\n</code></pre>"},{"location":"usage/chips/chip_icon_only/","title":"Icon Only Chip","text":""},{"location":"usage/chips/chip_icon_only/#description","title":"Description","text":"<p>This <code>chip</code> displays just an icon.</p>"},{"location":"usage/chips/chip_icon_only/#variables","title":"Variables","text":"Variable Default Required Notes ulm_chip_icon_only This is the icon to show. See icons to read more about the used unicode <code>emojis</code>."},{"location":"usage/chips/chip_icon_only/#usage","title":"Usage","text":"<pre><code>- type: 'custom:button-card'\n  template: chip_icon_only\n  variables:\n    ulm_chip_icon_only: '\u2764\ufe0f'\n</code></pre> Template Code chip_icon_only.yaml<pre><code>---\n### Chip Icon Only ###\nchip_icon_only:\n  template: \"chips\"\n  label: |\n    [[[\n      var icon = \"\u2754\";\n      if (variables.ulm_chip_icon_only){\n        var icon = variables.ulm_chip_icon_only;\n      }\n      return icon;\n    ]]]\n</code></pre>"},{"location":"usage/chips/chip_icon_state/","title":"Icon State Chip","text":""},{"location":"usage/chips/chip_icon_state/#description","title":"Description","text":"<p>This <code>chip</code> displays an icon and a label, where the label can be any <code>state</code> of a <code>sensor</code> you configure.</p>"},{"location":"usage/chips/chip_icon_state/#variables","title":"Variables","text":"Variable Default Required Notes ulm_chip_icon_state_icon This is the icon to show. See See icons to read more about the used unicode <code>emojis</code>. ulm_chip_icon_state_entity Enable background"},{"location":"usage/chips/chip_icon_state/#usage","title":"Usage","text":"<pre><code>- type: 'custom:button-card'\n  template: chip_icon_state\n  variables:\n    ulm_chip_icon_state_icon: '\ud83d\udecf\ufe0f'\n    ulm_chip_icon_state_entity: sensor.bed_occupancy\n</code></pre> Template Code chip_icon_state.yaml<pre><code>---\n### Chip Icon State ###\nchip_icon_state:\n  template: \"chips\"\n  triggers_update:\n    - \"[[[ return variables.ulm_chip_icon_state_entity ]]]\"\n  label: |\n    [[[\n      var icon = \"\u2754\";\n      if (variables.ulm_chip_icon_state_icon){\n        var icon = variables.ulm_chip_icon_state_icon;\n      }\n      var state = \"\";\n      if (states[variables.ulm_chip_icon_state_entity].state){\n        var state = helpers.localize(states[variables.ulm_chip_icon_state_entity]);\n      }\n      return icon + \" \" + state;\n    ]]]\n</code></pre>"},{"location":"usage/chips/chip_mdi_icon_only/","title":"Mdi:icon Only Chip","text":""},{"location":"usage/chips/chip_mdi_icon_only/#description","title":"Description","text":"<p>This <code>chip</code> displays an icon using mdi.</p>"},{"location":"usage/chips/chip_mdi_icon_only/#variables","title":"Variables","text":"Variable Default Required Notes ulm_chip_mdi_icon_only_entity <code>entity</code> to link ulm_chip_mdi_icon_only_icon mdi:icon to display ulm_chip_mdi_icon_only_icon_color <code>primary-text-color</code> Allow to change <code>icon</code> color"},{"location":"usage/chips/chip_mdi_icon_only/#usage","title":"Usage","text":"<pre><code>- type: 'custom:button-card'\n  template: chip_mdi_icon_only\n  variables:\n    ulm_chip_mdi_icon_only_entity: binary_sensor.bedroom_master_closed_door\n    ulm_chip_mdi_icon_only_icon: mdi:door\n</code></pre> Template Code chip_mdi_icon_only.yaml<pre><code>---\n### Chip Mdi Icon Only ###\nchip_mdi_icon_only:\n  template: \"chips\"\n  tap_action:\n    action: \"more-info\"\n    entity: \"[[[ return variables.ulm_chip_mdi_icon_only_entity ]]]\"\n  show_icon: true\n  icon: \"[[[ return variables.ulm_chip_mdi_icon_only_icon ]]]\"\n  styles:\n    grid:\n      - grid-template-areas: \"'i'\"\n    icon:\n      - color: \"[[[ return variables.ulm_chip_mdi_icon_only_icon_color; ]]]\"\n</code></pre>"},{"location":"usage/chips/chip_mdi_icon_state/","title":"Mdi:icon State Chip","text":""},{"location":"usage/chips/chip_mdi_icon_state/#description","title":"Description","text":"<p>This <code>chip</code> displays an icon using mdi and <code>state</code> of the chosen <code>entity</code>.</p>"},{"location":"usage/chips/chip_mdi_icon_state/#variables","title":"Variables","text":"Variable Default Required Notes ulm_chip_mdi_icon_state_entity <code>entity</code> to link ulm_chip_mdi_icon_state_icon mdi:icon to display ulm_chip_mdi_icon_state_icon_color <code>primary-text-color</code> Allow to change <code>icon</code> color ulm_chip_mdi_icon_state_label_color <code>primary-text-color</code> Allow to change <code>label</code> color"},{"location":"usage/chips/chip_mdi_icon_state/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: chip_mdi_icon_state\n  variables:\n    ulm_chip_mdi_icon_state_entity: light.kitchen_lights\n    ulm_chip_mdi_icon_state_icon: mdi:lightbulb\n</code></pre> Template Code chip_mdi_icon_state.yaml<pre><code>---\n### Chip Mdi Icon State ###\nchip_mdi_icon_state:\n  template: \"chips\"\n  tap_action:\n    action: \"more-info\"\n  entity: \"[[[ return variables.ulm_chip_mdi_icon_state_entity ]]]\"\n  triggers_update:\n    - \"[[[ return variables.ulm_chip_mdi_icon_state_entity ]]]\"\n  show_icon: true\n  icon: \"[[[ return variables.ulm_chip_mdi_icon_state_icon ]]]\"\n  label: |\n    [[[\n      var state = \"\";\n      if (states[variables.ulm_chip_mdi_icon_state_entity].state){\n        var state = helpers.localize(entity)\n      }\n      return state;\n    ]]]\n  styles:\n    grid:\n      - grid-template-areas: \"'i l'\"\n    icon:\n      - color: \"[[[ return variables.ulm_chip_mdi_icon_state_icon_color; ]]]\"\n    label:\n      - color: \"[[[ return variables.ulm_chip_mdi_icon_state_label_color; ]]]\"\n</code></pre>"},{"location":"usage/chips/chip_navigate/","title":"Navigate Chip","text":""},{"location":"usage/chips/chip_navigate/#description","title":"Description","text":"<p>This <code>chip</code> is a menu button with an icon using mdi.</p>"},{"location":"usage/chips/chip_navigate/#variables","title":"Variables","text":"Variable Default Required Notes ulm_chip_navigate_path <code>path</code> to navigate to ulm_chip_navigate_icon Icon to use ulm_chip_navigate_icon_color <code>primary-text-color</code> Allow to change <code>icon</code> color ulm_chip_navigate_label_color <code>primary-text-color</code> Allow to change <code>label</code> color"},{"location":"usage/chips/chip_navigate/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: chip_navigate\n  label: 'Living Room'\n  variables:\n    ulm_chip_navigate_path: /lovelace-minimalist-test/\n    ulm_chip_navigate_icon: mdi:sofa\n</code></pre> Template Code chip_navigate.yaml<pre><code>---\n### Chip Navigate ###\nchip_navigate:\n  template: \"chips\"\n  tap_action:\n    action: \"navigate\"\n    navigation_path: \"[[[ return variables.ulm_chip_navigate_path; ]]]\"\n  show_icon: true\n  icon: \"[[[ return variables.ulm_chip_navigate_icon; ]]]\"\n  styles:\n    grid:\n      - grid-template-areas: \"'i l'\"\n    icon:\n      - color: \"[[[ return variables.ulm_chip_navigate_icon_color; ]]]\"\n    label:\n      - color: \"[[[ return variables.ulm_chip_navigate_label_color; ]]]\"\n</code></pre>"},{"location":"usage/chips/chip_power_consumption/","title":"Power Consumption Chip","text":""},{"location":"usage/chips/chip_power_consumption/#description","title":"Description","text":"<p>This <code>chip</code> shows you the electric consumption from a sensor. Configurable to show power (kWh) or price (currency).</p>"},{"location":"usage/chips/chip_power_consumption/#variables","title":"Variables","text":"Variable Default Required Notes ulm_chip_electric_consumption Variable / Entry Example Required ulm_chip_electric_consumption sensor.my_electric_power_consumption true. This is your consumed energy. This is the sensor, that shows how many kWhs are consumed. ulm_chip_electric_price This is the price for your consumed energy, if you have such a sensor. This should be a sensor that shows a price in your defined currency. If this variable is not set, the chip shows only the kWhs! If this variable is set the chip shows the price for the consumed energy!"},{"location":"usage/chips/chip_power_consumption/#usage","title":"Usage","text":"<pre><code>- type: 'custom:button-card'\n  template: chip_power_consumption\n  variables:\n    ulm_chip_electric_consumption: sensor.my_electric_power_consumption\n    ulm_chip_electric_price: sensor.my_electric_power_price\n</code></pre> Template Code chip_power_consumption.yaml<pre><code>---\n### Chip Power Consumption ###\nchip_power_consumption:\n  template:\n    - \"chips\"\n    - \"ulm_translation_engine\"\n  triggers_update:\n    - \"[[[ return variables.ulm_chip_electric_price ]]]\"\n    - \"[[[ return variables.ulm_chip_electric_consumption ]]]\"\n  label: |\n    [[[\n      var amount = variables.ulm_chip_electric_price != \"\" ? true : false\n      if (amount){\n        return \"\u26a1 \" +  states[variables.ulm_chip_electric_price].state + variables.ulm_translation_currency;\n      } else {\n        return \"\u26a1 \" +  helpers.localize(states[variables.ulm_chip_electric_consumption]);\n      }\n    ]]]\n</code></pre>"},{"location":"usage/chips/chip_presence_detection/","title":"Presence Detection Chip","text":""},{"location":"usage/chips/chip_presence_detection/#description","title":"Description","text":"<p>This <code>chip</code> shows you the actual presence in your home. Shows residents and guests (guests only if one or more).</p>"},{"location":"usage/chips/chip_presence_detection/#variables","title":"Variables","text":"Variable Default Required Notes ulm_chip_presence_counter_residents This is the sensor that shows your residents counter. ulm_chip_presence_counter_guests This is the sensor that shows your guests counter."},{"location":"usage/chips/chip_presence_detection/#usage","title":"Usage","text":"<pre><code>- type: 'custom:button-card'\n  template: chip_presence_detection\n  variables:\n    ulm_chip_presence_counter_residents: sensor.people_home\n    ulm_chip_presence_counter_guests: sensor.guests_home\n</code></pre> Template Code chip_presence_detection.yaml<pre><code>---\n### Chip Presence Detection ###\nchip_presence_detection:\n  template: \"chips\"\n  triggers_update:\n    - \"[[[ return variables.ulm_chip_presence_counter_residents ]]]\"\n    - \"[[[ return variables.ulm_chip_presence_counter_guests ]]]\"\n  label: |\n    [[[\n      if (!!variables.ulm_chip_presence_counter_guests) {\n        return \"\ud83c\udfe0 \" +  states[variables.ulm_chip_presence_counter_residents].state + \" / \" + states[variables.ulm_chip_presence_counter_guests].state;\n      } else {\n        return \"\ud83c\udfe0 \" +  states[variables.ulm_chip_presence_counter_residents].state;\n      }\n    ]]]\n</code></pre>"},{"location":"usage/chips/chip_temperature/","title":"Temperature Chip","text":""},{"location":"usage/chips/chip_temperature/#description","title":"Description","text":"<p>This <code>chip</code> is to display a weather icon together with the outside and inside temperature, where the latter is optional.</p>"},{"location":"usage/chips/chip_temperature/#variables","title":"Variables","text":"Variable Default Required Notes ulm_chip_temperature_outside This is the sensor that provides your outside temperature. If you want to use eg. a temperature value from your weather provider, you'd need to setup a template sensor first. The state of this sensor should represent a numeric value (\u00b0C or \u00b0F doesn't matter). ulm_chip_temperature_inside This is the sensor that provides your inside temperature. The state of this sensor should represent a numeric value (\u00b0C or \u00b0F doesn't matter). ulm_chip_temperature_weather This is the sensor for your weather entity for showing current weather conditions"},{"location":"usage/chips/chip_temperature/#usage","title":"Usage","text":"<pre><code>- type: 'custom:button-card'\n  template: chip_temperature\n  variables:\n    ulm_chip_temperature_inside: sensor.my_temperature_sensor_inside\n    ulm_chip_temperature_outside: sensor.my_temperature_sensor_outside\n    ulm_chip_temperature_weather: weather.my_weather_provider\n</code></pre> Template Code chip_temperature.yaml<pre><code>---\n### Chip Temperature ###\nchip_temperature:\n  template:\n    - \"chips\"\n    - \"ulm_actions_card\"\n  variables:\n    ulm_card_weather_enable_popup: false\n  triggers_update:\n    - \"[[[ return variables.ulm_chip_temperature_weather ]]]\"\n    - \"[[[ return variables.ulm_chip_temperature_outside ]]]\"\n    - \"[[[ return variables.ulm_chip_temperature_inside ]]]\"\n  label: |\n    [[[\n      var state = states[variables.ulm_chip_temperature_weather].state;\n      var icon = {\n        \"clear-night\": \"\ud83c\udf19\",\n        \"cloudy\": \"\u2601\ufe0f\",\n        \"exceptional\": \"\ud83c\udf1e\",\n        \"fog\": \"\ud83c\udf2b\ufe0f\",\n        \"hail\": \"\u26c8\ufe0f\",\n        \"lightning\": \"\u26a1\",\n        \"lightning-rainy\": \"\u26c8\ufe0f\",\n        \"partlycloudy\": \"\u26c5\",\n        \"pouring\": \"\ud83c\udf27\ufe0f\",\n        \"rainy\": \"\ud83d\udca7\",\n        \"snowy\": \"\u2744\ufe0f\",\n        \"snowy-rainy\": \"\ud83c\udf28\ufe0f\",\n        \"sunny\": \"\u2600\ufe0f\",\n        \"windy\": \"\ud83c\udf2a\ufe0f\",\n        \"default\": \"\ud83c\udf21\ufe0f\"\n        }\n      function convertTemperature(temp) {\n        if (parseFloat(temp) == temp &amp;&amp; Math.floor(temp) != temp) {\n            return parseFloat(temp).toFixed(1);\n        }\n        return temp;\n      }\n      var outside_temp = states[variables.ulm_chip_temperature_outside].state;\n      var inside_temp = null;\n      if (variables.ulm_chip_temperature_inside) {\n        inside_temp = states[variables.ulm_chip_temperature_inside].state;\n      }\n      var label = (icon[state] || icon[\"default\"]) + \" \" + convertTemperature(outside_temp) + \"\u00b0\";\n      if (inside_temp) {\n        label = label + \" / \" + convertTemperature(inside_temp) + \"\u00b0\";\n      }\n      return label;\n    ]]]\n</code></pre>"},{"location":"usage/custom_cards/custom_card_afvalophaling/","title":"Afvalophaling Custom-card","text":""},{"location":"usage/custom_cards/custom_card_afvalophaling/#custom-card-afvalophaling","title":"Custom-card \"Afvalophaling\"","text":"<p>!! Attention !!</p> <p>This card can only be used if the integration \"Home-Assistant-Sensor-Afvalbeheer\" from pippyn is installed.</p>"},{"location":"usage/custom_cards/custom_card_afvalophaling/#credits","title":"Credits","text":"<ul> <li>Author: AndyVRD - 2021</li> <li>Version: 1.0.0</li> </ul>"},{"location":"usage/custom_cards/custom_card_afvalophaling/#changelog","title":"Changelog","text":"1.0.0 Initial release"},{"location":"usage/custom_cards/custom_card_afvalophaling/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template:\n    - card_afvalophaling\n  variables:\n    ulm_card_ophaling_vandaag: \"sensor.limburg_net_afvalophaling_vandaag\"\n    ulm_card_ophaling_morgen: \"sensor.limburg_net_afvalophaling_morgen\"\n    ulm_card_datum_gft: \"sensor.limburg_net_afvalophaling_gft\"\n    ulm_card_datum_pmd: \"sensor.limburg_net_afvalophaling_pmd\"\n    ulm_card_datum_rest: \"sensor.limburg_net_afvalophaling_restafval\"\n    ulm_card_datum_papier: \"sensor.limburg_net_afvalophaling_papier\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_afvalophaling/#requirements","title":"Requirements","text":"<p>Integration from HACS: \"Home-Assistant-Sensor-Afvalbeheer\" from pippyn</p>"},{"location":"usage/custom_cards/custom_card_afvalophaling/#variables","title":"Variables","text":"Variable Example Required Explanation ulm_card_ophaling_vandaag sensor.limburg_net_afvalophaling_vandaag yes Collection(s) for today ulm_card_ophaling_morgen sensor.limburg_net_afvalophaling_morgen yes Collection(s) for tomorrow ulm_card_datum_gft sensor.limburg_net_afvalophaling_gft yes GFT collection date ulm_card_datum_pmd sensor.limburg_net_afvalophaling_pmd yes PMD collection date ulm_card_datum_rest sensor.limburg_net_afvalophaling_rest yes Restafval collection date ulm_card_datum_papier sensor.limburg_net_afvalophaling_papier yes Papier collection date Template Code card_afvalophaling.yaml<pre><code>---\ncard_afvalophaling:\n  template:\n    - \"ulm_language_variables\"\n    - \"icon_info_afvalophaling\"\n    - \"custom_colors\"\n  triggers_update: \"all\"\n  icon: \"mdi:delete\"\n  name: &gt;\n        [[[\n          if((variables.ulm_card_ophaling_vandaag &amp;&amp; states[variables.ulm_card_ophaling_vandaag].state !== 'Geen') ||\n            (variables.ulm_card_ophaling_morgen &amp;&amp; states[variables.ulm_card_ophaling_morgen].state !== 'Geen')) {\n            return variables.ulm_ophaling\n          } else {\n            return variables.ulm_volgende_ophaling\n          }\n        ]]]\n  label: |\n        [[[\n          if(variables.ulm_card_ophaling_vandaag &amp;&amp; states[variables.ulm_card_ophaling_vandaag].state !== 'Geen'){\n            return states[variables.ulm_card_ophaling_vandaag].state\n          }\n\n          if(variables.ulm_card_ophaling_morgen &amp;&amp; states[variables.ulm_card_ophaling_morgen].state !== 'Geen'){\n            return states[variables.ulm_card_ophaling_morgen].state\n          }\n\n          var collections = [];\n          if(variables.ulm_card_datum_rest){\n            collections.push(\"Restafval \" + ' \u2022 ' + states[variables.ulm_card_datum_rest].state);\n          }\n\n          if(variables.ulm_card_datum_papier){\n            collections.push(\"Papier \" + ' \u2022 ' + states[variables.ulm_card_datum_papier].state);\n          }\n\n          if(variables.ulm_card_datum_pmd){\n            collections.push(\"PMD \" + ' \u2022 ' + states[variables.ulm_card_datum_pmd].state);\n          }\n\n          if(variables.ulm_card_datum_gft){\n            collections.push(\"GFT \" + ' \u2022 ' + states[variables.ulm_card_datum_gft].state);\n          }\n\n          if(variables.ulm_card_datum_glas){\n            collections.push(\"Glas \" + ' \u2022 ' + states[variables.ulm_card_datum_glas].state);\n          }\n\n          return collections.join('&lt;br&gt;');\n        ]]]\ncustom_colors:\n  state:\n    - styles:\n        icon:\n          - color: \"rgba(var(--color-green),1)\"\n        img_cell:\n          - background-color: \"rgba(var(--color-green), 0.2)\"\n      value: &gt;\n        [[[\n          return (variables.ulm_card_ophaling_vandaag &amp;&amp; states[variables.ulm_card_ophaling_vandaag].state !== \"Geen\") || (variables.ulm_card_ophaling_morgen &amp;&amp; states[variables.ulm_card_ophaling_morgen].state !== \"Geen\")\n        ]]]\n      icon: \"mdi:recycle\"\n      operator: \"template\"\n    - styles:\n        icon:\n          - color: \"rgba(var(--color-blue),1)\"\n        img_cell:\n          - background-color: \"rgba(var(--color-blue), 0.2)\"\n      value: &gt;\n        [[[\n          return (variables.ulm_card_ophaling_vandaag &amp;&amp; states[variables.ulm_card_ophaling_vandaag].state === \"glas\") || (variables.ulm_card_ophaling_morgen &amp;&amp; states[variables.ulm_card_ophaling_morgen].state === \"glas\")\n        ]]]\n      icon: \"mdi:bottle-wine-outline\"\n      operator: \"template\"\nicon_info_afvalophaling:\n  color: \"var(--google-grey)\"\n  show_icon: \"true\"\n  show_label: \"true\"\n  show_name: \"true\"\n  state:\n    - value: \"unavailable\"\n      styles:\n        icon:\n          - color: \"rgba(var(--color-red),1)\"\n        img_cell:\n          - background-color: \"rgba(var(--color-red), 0.2)\"\n        custom_fields:\n          notification:\n            - border-radius: \"50%\"\n            - position: \"absolute\"\n            - left: \"42px\"\n            - top: \"10px\"\n            - height: \"16px\"\n            - width: \"16px\"\n            - font-size: \"12px\"\n            - line-height: \"14px\"\n            - background-color: &gt;\n                [[[\n                  return \"rgba(var(--color-red),1)\";\n                ]]]\n  styles:\n    icon:\n      - color: \"rgba(var(--color-theme),0.2)\"\n    label:\n      - justify-self: \"start\"\n      - align-self: \"start\"\n      - font-weight: \"bold\"\n      - font-size: \"12px\"\n      - filter: \"opacity(40%)\"\n      - margin-left: \"12px\"\n      - text-align: \"start\"\n    name:\n      - align-self: \"end\"\n      - justify-self: \"start\"\n      - font-weight: \"bold\"\n      - font-size: \"14px\"\n      - margin-left: \"12px\"\n      - margin-bottom: \"4px\"\n    state:\n      - justify-self: \"start\"\n      - align-self: \"start\"\n      - font-weight: \"bold\"\n      - font-size: \"12px\"\n      - filter: \"opacity(40%)\"\n      - margin-left: \"12px\"\n    img_cell:\n      - background-color: \"rgba(var(--color-theme),0.05)\"\n      - border-radius: \"50%\"\n      - place-self: \"center\"\n      - width: \"42px\"\n      - height: \"42px\"\n    grid:\n      - grid-template-areas: \"'i n' 'i l'\"\n      - grid-template-columns: \"min-content auto\"\n      - grid-template-rows: \"min-content min-content\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n  custom_fields:\n    notification: &gt;\n      [[[\n        if ((variables.ulm_card_ophaling_vandaag &amp;&amp; states[variables.ulm_card_ophaling_vandaag].state =='unavailable') ||\n          (variables.ulm_card_ophaling_morgen &amp;&amp; states[variables.ulm_card_ophaling_morgen].state =='unavailable')) {\n          return `&lt;ha-icon icon=\"mdi:help\" style=\"width: 12px; height: 12px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;`\n        }\n      ]]]\n  size: \"20px\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_alarm_time/","title":"Alarm Time Custom-card","text":""},{"location":"usage/custom_cards/custom_card_alarm_time/#custom-card-alarm-time-card","title":"Custom-card \"Alarm Time Card\"","text":"<p>The <code>card_alarm_time</code> you can control a input_datetime entity and a boolean. This card is useful for setting alarms (e.g. wakeup alarm), as you can modify the time and toggle the state of the alarm from one card.</p>"},{"location":"usage/custom_cards/custom_card_alarm_time/#credits","title":"Credits","text":"<p>Author: benbur - 2023 Version: 1.0.0</p> <p>This is built largely on top of the original Input_Datetime Card: Author: sildehoop - 2022 Version: 1.0.0</p>"},{"location":"usage/custom_cards/custom_card_alarm_time/#changelog","title":"Changelog","text":"1.0.0 Initial Release"},{"location":"usage/custom_cards/custom_card_alarm_time/#variables","title":"Variables","text":"Variable Example Required Default Explanation ulm_card_alarm_time_name 'Morning Alarm' no Set Custom Name ulm_card_alarm_time_icon 'mdi:alarm' no Set Custom Icon ulm_card_alarm_time_color 'green' no 'blue' Set Custom Color for Card Elements ulm_card_alarm_time_force_background_color true no false Force Background Color in Light Mode/td&gt;  ulm_card_alarm_time_collapse true no false Make card collapsible when off ulm_card_alarm_time_horizontal true no false Horizontal Mode for the Card ulm_card_alarm_time_step '30' no 15 Set Adjust Time (minutes)"},{"location":"usage/custom_cards/custom_card_alarm_time/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: card_alarm_time\n  entity: input_boolean.morning_alarm_toggle\n  variables:\n    ulm_card_alarm_time_datetime: input_datetime.morning_alarm_time\n    ulm_card_alarm_time_horizontal: true\n    ulm_card_alarm_time_collapse: true\n</code></pre>"},{"location":"usage/custom_cards/custom_card_alarm_time/#requirements","title":"Requirements","text":"<p>Input DateTime Helper Input Boolean</p>"},{"location":"usage/custom_cards/custom_card_alarm_time/#template-code","title":"Template code","text":"Template Code custom_card_alarm_time.yaml<pre><code>---\n### Card Alarm ###\ncard_alarm_time:\n  triggers_update: \"all\"\n  template:\n    - \"icon_more_info_new\"\n  variables:\n    ulm_card_alarm_time_name: \"[[[ return entity.attributes.friendly_name ]]]\"\n    ulm_card_alarm_time_icon: \"[[[ return entity.attributes.icon ]]]\"\n    ulm_card_alarm_time_horizontal: false\n    ulm_card_alarm_time_collapse: false\n    ulm_card_alarm_time_color: \"blue\"\n    ulm_card_alarm_time_force_background_color: false\n    ulm_card_alarm_time_step: 15\n  show_icon: false\n  show_name: false\n  show_label: false\n  state:\n    - value: \"on\"\n      styles:\n        card:\n          - background-color: &gt;\n              [[[\n                if (variables.ulm_card_alarm_time_force_background_color || hass.themes.darkMode) {\n                  var color = variables.ulm_card_alarm_time_color;\n                  return 'rgba(var(--color-' + color + '),var(--opacity-bg))';\n                }\n              ]]]\n  styles:\n    grid:\n      - grid-template-areas: &gt;\n          [[[\n              if (entity.state != \"on\" &amp;&amp; variables.ulm_card_alarm_time_collapse) {\n                  return \"\\\"item1\\\"\";\n              }\n              if (variables.ulm_card_alarm_time_horizontal) {\n                  return \"\\\"item1 item2\\\"\";\n              }\n              return \"\\\"item1\\\" \\\"item2\\\"\";\n          ]]]\n      - grid-template-columns: &gt;\n          [[[\n              if (variables.ulm_card_alarm_time_horizontal) {\n                  return \"1fr 1fr\";\n              }\n              return \"1fr\";\n          ]]]\n      - grid-template-rows: &gt;\n          [[[\n              if (variables.ulm_card_alarm_time_horizontal || (entity.state != \"on\" &amp;&amp; variables.ulm_card_alarm_time_collapse)) {\n                  return \"1fr\";\n              }\n              return \"min-content min-content\";\n          ]]]\n      - row-gap: \"12px\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n    custom_fields:\n      item2:\n        - display: &gt;\n            [[[\n              if (entity.state != \"off\") {\n                  return \"block\";\n              }\n              return \"none\";\n            ]]]\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              icon: \"[[[ return variables.ulm_card_alarm_time_icon ]]]\"\n              styles:\n                icon:\n                  - color: &gt;\n                      [[[\n                        var color = variables.ulm_card_alarm_time_color;\n                        if (typeof entity !== \"undefined\") {\n                          if (entity.state != \"off\") {\n                              return 'rgba(var(--color-' + color + '),1)';\n                          }\n                        }\n                        return 'rgba(var(--color-theme),0.2)';\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        var color = variables.ulm_card_alarm_time_color;\n                        if (typeof entity !== \"undefined\") {\n                          if (entity.state != \"off\") {\n                              return 'rgba(var(--color-' + color + '),0.2)';\n                          }\n                        }\n                        return 'rgba(var(--color-theme),0.05)';\n                      ]]]\n          item2:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              name: \"[[[ return variables.ulm_card_alarm_time_name ]]]\"\n              label: &gt;\n                [[[\n                  if (entity.state == \"on\") {\n                    return \"On\";\n                  } else if (entity.state == \"off\") {\n                    return \"Off\";\n                  }\n                ]]]\n              state:\n                - value: \"on\"\n                  styles:\n                    name:\n                      - color: &gt;\n                          [[[\n                            if (variables.ulm_card_alarm_time_force_background_color) {\n                              return 'rgb(250,250,250)';\n                            }\n                          ]]]\n                    label:\n                      - color: &gt;\n                          [[[\n                            if (variables.ulm_card_alarm_time_force_background_color) {\n                              return 'rgb(250,250,250)';\n                            }\n                          ]]]\n    item2:\n      card:\n        type: \"custom:button-card\"\n        template: \"list_3_items\"\n        styles:\n          card:\n            - background: \"none\"\n          grid:\n            - grid-template-areas: &gt;\n                [[[\n                    if (variables.ulm_card_alarm_time_horizontal) {\n                      return \"'item2'\";\n                    } else {\n                      return \"'item1 item2 item3'\";\n                    }\n                ]]]\n            - grid-template-columns: &gt;\n                [[[\n                    if (variables.ulm_card_alarm_time_horizontal) {\n                      return \"1fr\";\n                    } else {\n                      return \"1fr 1fr 1fr\";\n                    }\n                ]]]\n          custom_fields:\n            item1:\n              - display: &gt;\n                  [[[\n                    if (variables.ulm_card_alarm_time_horizontal) {\n                        return \"none\";\n                    }\n                    return \"block\";\n                  ]]]\n            item3:\n              - display: &gt;\n                  [[[\n                    if (variables.ulm_card_alarm_time_horizontal) {\n                        return \"none\";\n                    }\n                    return \"block\";\n                  ]]]\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"input_datetime.set_datetime\"\n                target:\n                  entity_id: \"[[[ return variables.ulm_card_alarm_time_datetime ]]]\"\n                data:\n                  time: &gt;\n                    [[[\n                      var timestamp = states[variables.ulm_card_alarm_time_datetime].attributes.timestamp;\n                      let time_adjust = (60 + variables.ulm_card_alarm_time_step) * 60;\n                      let new_timestamp = timestamp - time_adjust;\n                      var date = new Date(new_timestamp * 1000);\n                      var hours = date.getHours();\n                      var minutes = \"0\" + date.getMinutes();\n                      var seconds = \"0\" + date.getSeconds();\n                      var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n                      return formattedTime;\n                    ]]]\n              icon: \"mdi:minus\"\n              styles:\n                card:\n                  - background-color: &gt;\n                      [[[\n                        if (!hass.themes.darkMode &amp;&amp; variables.ulm_card_alarm_time_force_background_color) {\n                          if (entity.state != \"off\") {\n                            return 'rgba(250,250,250,0.8)';\n                          }\n                        }\n                        return 'rgba(var(--color-theme),0.05)';\n                      ]]]\n                icon:\n                  - color: &gt;\n                      [[[\n                        if (!hass.themes.darkMode &amp;&amp; variables.ulm_card_alarm_time_force_background_color) {\n                          if (entity.state != \"off\") {\n                            var color_set = variables.ulm_card_alarm_time_color;\n                            var color = 'rgba(var(--color-' + color_set + '),1)';\n                            return color;\n                          }\n                        }\n                        return 'rgba(var(--color-theme),0.9)';\n                      ]]]\n\n          item2:\n            card:\n              type: \"custom:button-card\"\n              template:\n                - \"widget_icon\"\n              entity: \"[[[ return variables.ulm_card_alarm_time_datetime ]]]\"\n              tap_action:\n                action: \"more-info\"\n              show_icon: false\n              show_label: true\n              label: \"[[[ return states[variables.ulm_card_alarm_time_datetime].state ]]]\"\n              styles:\n                grid:\n                  - grid-template-areas: \"'l'\"\n                card:\n                  - background-color: &gt;\n                      [[[\n                        if (!hass.themes.darkMode &amp;&amp; variables.ulm_card_alarm_time_force_background_color) {\n                          if (entity.state != \"off\") {\n                            return 'rgba(250,250,250,0.8)';\n                          }\n                        }\n                        return 'rgba(var(--color-theme),0.05)';\n                      ]]]\n                icon:\n                  - color: &gt;\n                      [[[\n                        if (!hass.themes.darkMode &amp;&amp; variables.ulm_card_alarm_time_force_background_color) {\n                          if (entity.state != \"off\") {\n                            var color_set = variables.ulm_card_alarm_time_color;\n                            var color = 'rgba(var(--color-' + color_set + '),1)';\n                            return color;\n                          }\n                        }\n                        return 'rgba(var(--color-theme),0.9)';\n                      ]]]\n\n          item3:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"input_datetime.set_datetime\"\n                target:\n                  entity_id: \"[[[ return variables.ulm_card_alarm_time_datetime ]]]\"\n                data:\n                  time: &gt;\n                    [[[\n                      var timestamp = states[variables.ulm_card_alarm_time_datetime].attributes.timestamp;\n                      let time_adjust = (60 - variables.ulm_card_alarm_time_step) * 60;\n                      let new_timestamp = timestamp - time_adjust;\n                      var date = new Date(new_timestamp * 1000);\n                      var hours = date.getHours();\n                      var minutes = \"0\" + date.getMinutes();\n                      var seconds = \"0\" + date.getSeconds();\n                      var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n                      return formattedTime;\n                    ]]]\n              icon: \"mdi:plus\"\n              styles:\n                card:\n                  - background-color: &gt;\n                      [[[\n                        if (!hass.themes.darkMode &amp;&amp; variables.ulm_card_alarm_time_force_background_color) {\n                          if (entity.state != \"off\") {\n                            return 'rgba(250,250,250,0.8)';\n                          }\n                        }\n                        return 'rgba(var(--color-theme),0.05)';\n                      ]]]\n                icon:\n                  - color: &gt;\n                      [[[\n                        if (!hass.themes.darkMode &amp;&amp; variables.ulm_card_alarm_time_force_background_color) {\n                          if (entity.state != \"off\") {\n                            var color_set = variables.ulm_card_alarm_time_color;\n                            var color = 'rgba(var(--color-' + color_set + '),1)';\n                            return color;\n                          }\n                        }\n                        return 'rgba(var(--color-theme),0.9)';\n                      ]]]\n</code></pre>"},{"location":"usage/custom_cards/custom_card_apexcharts/","title":"Apexcharts Custom-card","text":""},{"location":"usage/custom_cards/custom_card_apexcharts/#custom-card-apexcharts","title":"Custom-card \"Apexcharts\"","text":""},{"location":"usage/custom_cards/custom_card_apexcharts/#credits","title":"Credits","text":"<ul> <li>Author: AndyVRD - 2022</li> <li>Credits to benm7</li> <li>Version: 1.0.0</li> </ul>"},{"location":"usage/custom_cards/custom_card_apexcharts/#changelog","title":"Changelog","text":"1.0.0 Initial release  1.0.1 Fix for UI Minimalist v1.0.1."},{"location":"usage/custom_cards/custom_card_apexcharts/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: \"custom_card_apexcharts\"\n  variables:\n    chart_type: \"donut\"\n    graph_span: \"1d\"\n    entity_1:\n      entity_id: \"sensor.google\"\n      icon: \"\"\n      name: \"Google\"\n      color: \"blue\"\n      max_value: 300\n    entity_2:\n      entity_id: \"sensor.cloudflare\"\n      icon: \"\"\n      name: \"Cloudflare\"\n      color: \"yellow\"\n      max_value: 50\n    entity_3:\n      entity_id: \"sensor.gateway\"\n      icon: \"\"\n      name: \"Gateway\"\n      color: \"green\"\n      max_value: 30\n</code></pre>"},{"location":"usage/custom_cards/custom_card_apexcharts/#requirements","title":"Requirements","text":"<p>Integration from HACS: \"custom:apexcharts-card\" from RomRider</p>"},{"location":"usage/custom_cards/custom_card_apexcharts/#variables","title":"Variables","text":"Variable Example Required Explanation chart_type line, scatter, pie, donut or radialBar yes The chart type you want to display graph_span 1h, 12min, 1d, 1h25, 10sec, ... no The span of the graph as a time interval entity_id sensor.speedtest_download yes Entity sensor of choice icon mdi:cpu-64-bit no mdi icon you want to be exposed in the img_cell, '' will return entity.attributes.icon  name name for the used sensor no '' will return entity.attributes.friendly_name color green, blue, yellow, red or grey no if you don't use the color variable it will choice a random color max_value 10, 300, ... no Maximum value of the sensor. Default will be 100 Template Code apexcharts.yaml<pre><code>---\ncustom_card_apexcharts:\n  variables:\n    entity_1:\n      entity_id:\n      icon: \"[[[ return entity.attributes.icon ]]]\"\n      name: \"[[[ return entity.attributes.friendly_name ]]]\"\n      color: &gt;\n        [[[\n          var colors = ['yellow', 'blue', 'red', 'green'];\n          var color = colors[Math.floor(Math.random() * colors.length)];\n          return color;\n        ]]]\n    entity_2:\n      entity_id:\n      icon: \"[[[ return entity.attributes.icon  ]]]\"\n      name: \"[[[ return entity.attributes.friendly_name ]]]\"\n      color: &gt;\n        [[[\n          var colors = ['yellow', 'blue', 'red', 'green'];\n          var color = colors[Math.floor(Math.random() * colors.length)];\n          return color;\n        ]]]\n    entity_3:\n      entity_id:\n      icon: \"[[[ return entity.attributes.icon  ]]]\"\n      name: \"[[[ return entity.attributes.friendly_name ]]]\"\n      color: &gt;\n        [[[\n          var colors = ['yellow', 'blue', 'red','green'];\n          var color = colors[Math.floor(Math.random() * colors.length)];\n          return color;\n        ]]]\n  color: \"auto\"\n  variable: \"spin\"\n  spin: false\n  show_name: false\n  show_state: false\n  show_label: false\n  show_icon: false\n  show_last_changed: false\n  show_entity_picture: false\n  tap_action:\n    action: \"none\"\n  aspect_ratio: \"2/1\"\n  styles:\n    grid:\n      - grid-template-areas: \"'item1 radial' 'item2 radial' 'item3 radial'\"\n      - grid-template-columns: \"35% 65%\"\n      - grid-template-rows: \"1fr 1fr 1fr\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"0px\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        entity: \"[[[ return variables.entity_1.entity_id ]]]\"\n        template:\n          - \"card_generic_swap\"\n        variables:\n          ulm_card_generic_swap_name: \"[[[ return variables.entity_1.name ]]]\"\n          ulm_card_generic_swap_icon: \"[[[ return variables.entity_1.icon ]]]\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              custom_fields:\n                item1:\n                  card:\n                    type: \"custom:button-card\"\n                    styles:\n                      icon:\n                        - color: \"[[[ return `rgba(var(--color-${variables.entity_1.color}), 1)`;]]]\"\n                      img_cell:\n                        - background-color: \"[[[ return `rgba(var(--color-${variables.entity_1.color}), 0.20)`;]]]\"\n        styles:\n          card:\n            - box-shadow: \"none\"\n            - border-radius: \"none\"\n            - padding-top: \"1px\"\n            - padding-bottom: \"1px\"\n    item2:\n      card:\n        type: \"custom:button-card\"\n        entity: \"[[[ return variables.entity_2.entity_id ]]]\"\n        template:\n          - \"card_generic_swap\"\n        variables:\n          ulm_card_generic_swap_name: \"[[[ return variables.entity_2.name ]]]\"\n          ulm_card_generic_swap_icon: \"[[[ return variables.entity_2.icon ]]]\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              custom_fields:\n                item1:\n                  card:\n                    type: \"custom:button-card\"\n                    styles:\n                      icon:\n                        - color: \"[[[ return `rgba(var(--color-${variables.entity_2.color}), 1)`;]]]\"\n                      img_cell:\n                        - background-color: \"[[[ return `rgba(var(--color-${variables.entity_2.color}), 0.20)`;]]]\"\n        styles:\n          card:\n            - box-shadow: \"none\"\n            - border-radius: \"none\"\n            - padding-top: \"1px\"\n            - padding-bottom: \"1px\"\n    item3:\n      card:\n        type: \"custom:button-card\"\n        entity: \"[[[ return variables.entity_3.entity_id ]]]\"\n        template:\n          - \"card_generic_swap\"\n        variables:\n          ulm_card_generic_swap_name: \"[[[ return variables.entity_3.name ]]]\"\n          ulm_card_generic_swap_icon: \"[[[ return variables.entity_3.icon ]]]\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              custom_fields:\n                item1:\n                  card:\n                    type: \"custom:button-card\"\n                    styles:\n                      icon:\n                        - color: \"[[[ return `rgba(var(--color-${variables.entity_3.color}), 1)`;]]]\"\n                      img_cell:\n                        - background-color: \"[[[ return `rgba(var(--color-${variables.entity_3.color}), 0.20)`;]]]\"\n        styles:\n          card:\n            - box-shadow: \"none\"\n            - border-radius: \"none\"\n            - padding-top: \"1px\"\n            - padding-bottom: \"1px\"\n    radial:\n      card:\n        type: \"custom:apexcharts-card\"\n        graph_span: \"[[[ return variables.graph_span ]]]\"\n        chart_type: \"[[[ return variables.chart_type ]]]\"\n        style: |\n          ha-card {\n            border-radius: \"var(--border-radius)\";\n            box-shadow: none;\n            padding-left: 10px;\n            padding-bottom: 0px;\n          }\n        header:\n          show: false\n        apex_config:\n          title:\n            floating: false\n            align: \"top\"\n            style:\n              fontSize: \"2px\"\n              fontWeight: \"bold\"\n          chart:\n            foreColor: \"rgb(148,148,148)\"\n            offsetY: 5\n          legend:\n            show: false\n        series:\n          - entity: \"[[[ return variables.entity_1.entity_id ]]]\"\n            name: \"[[[ return variables.entity_1_name ]]]\"\n            color: \"[[[ return `var(--google-${variables.entity_1.color})`;]]]\"\n            max: \"[[[ return variables.entity_1.max_value ]]]\"\n          - entity: \"[[[ return variables.entity_2.entity_id ]]]\"\n            name: \"[[[ return variables.entity_2_name ]]]\"\n            color: \"[[[ return `var(--google-${variables.entity_2.color})`;]]]\"\n            max: \"[[[ return variables.entity_2.max_value ]]]\"\n          - entity: \"[[[ return variables.entity_3.entity_id ]]]\"\n            name: \"[[[ return variables.entity_3_name ]]]\"\n            color: \"[[[ return `var(--google-${variables.entity_3.color})`;]]]\"\n            max: \"[[[ return variables.entity_3.max_value ]]]\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_bar_card/","title":"Bar Card Custom-card","text":""},{"location":"usage/custom_cards/custom_card_bar_card/#custom-card-bar-card","title":"Custom-card \"Bar Card\"","text":"<p>This is a <code>custom-card</code> to display a percentage value as a bar.</p> <p></p>"},{"location":"usage/custom_cards/custom_card_bar_card/#credits","title":"Credits","text":"<p>Author: rphlwnk - 2021 Version: 1.0.0</p>"},{"location":"usage/custom_cards/custom_card_bar_card/#changelog","title":"Changelog","text":"1.0.0 Initial release.  0.1.1 Fix for UI Minimalist v1.0.1.  0.1.2 Fix border radius"},{"location":"usage/custom_cards/custom_card_bar_card/#requirements","title":"Requirements","text":"<p>This card needs the following to function correctly:</p> <p>Custom Card 'Bar-Card'</p>"},{"location":"usage/custom_cards/custom_card_bar_card/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: custom_card_bar_card\n  variables:\n    ulm_custom_card_bar_card_entity: sensor.memory_use_percent\n    ulm_custom_card_bar_card_name: Memory Usage\n    ulm_custom_card_bar_card_value: true\n    ulm_custom_card_bar_card_indicator: true\n    ulm_custom_card_bar_card_color: \"var(--google-green)\"\n    ulm_custom_card_bar_card_min: 10\n    ulm_custom_card_bar_card_max: 20\n</code></pre>"},{"location":"usage/custom_cards/custom_card_bar_card/#variables","title":"Variables","text":"Variable Example Required Default Explanation ulm_custom_card_bar_card_entity sensor.memory_use_percent yes The entity with the desired value ulm_custom_card_bar_card_name \"Memory Consumption\" no Sensor Name Overwrites the sensor name ulm_custom_card_bar_card_icon \"mdi:icon\" no Sensor Icon Overwrites the sensor icon ulm_custom_card_bar_card_value true / false no false If true, shows the value in the bar ulm_custom_card_bar_card_indicator true / false no false If true, shows if the value has changed up or down ulm_custom_card_bar_card_color \"var(--google-green)\" no \"var(--google-blue)\" Change the color of the bar ulm_custom_card_bar_card_min 10 no 0 Change the minimum value of the bar ulm_custom_card_bar_card_max 20 no 100 Change the maximum value of the bar"},{"location":"usage/custom_cards/custom_card_bar_card/#example","title":"Example","text":"<pre><code>- type: \"custom:button-card\"\n  template: custom_card_bar_card\n  variables:\n    ulm_custom_card_bar_card_entity: sensor.memory_use_percent\n    ulm_custom_card_bar_card_name: Memory Usage\n</code></pre> Template Code custom_card_bar_card.yaml<pre><code>---\ncustom_card_bar_card:\n  variables:\n    ulm_custom_card_bar_card_color: \"var(--google-blue)\"\n    ulm_custom_card_bar_card_min: \"0\"\n    ulm_custom_card_bar_card_max: \"100\"\n  triggers_update: \"all\"\n  styles:\n    grid:\n      - grid-template-areas: \"'item1' 'item2'\"\n      - grid-template-rows: \"1fr\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"0px\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        template:\n          - \"icon_info\"\n          - \"card_generic\"\n        variables:\n          ulm_card_generic_name: \"[[[ return variables.ulm_custom_card_bar_card_name != '' ? variables.ulm_custom_card_bar_card_name : '' ]]]\"\n          ulm_card_generic_icon: \"[[[ return variables.ulm_custom_card_bar_card_icon != '' ? variables.ulm_custom_card_bar_card_icon : '' ]]]\"\n        styles:\n          card:\n            - box-shadow: \"none\"\n            - border-radius: \"var(--border-radius) var(--border-radius) 0px 0px\"\n            - padding: \"12px\"\n        entity: \"[[[ return variables.ulm_custom_card_bar_card_entity ]]]\"\n    item2:\n      card:\n        type: \"custom:bar-card\"\n        entities:\n          - entity: \"[[[ return variables.ulm_custom_card_bar_card_entity ]]]\"\n        color: \"[[[ return variables.ulm_custom_card_bar_card_color ]]]\"\n        positions:\n          icon: \"off\"\n          indicator: \"[[[ return variables.ulm_custom_card_bar_card_indicator == true ? 'inside' : 'off' ]]]\"\n          minmax: \"off\"\n          title: \"off\"\n          value: \"[[[ return variables.ulm_custom_card_bar_card_value == true ? 'inside' : 'off' ]]]\"\n          name: \"off\"\n        min: \"[[[ return variables.ulm_custom_card_bar_card_min ]]]\"\n        max: \"[[[ return variables.ulm_custom_card_bar_card_max ]]]\"\n        card_mod:\n          style: |-\n            bar-card-currentbar {\n              border-radius: 0px !important;\n              right: 0;\n            }\n            bar-card-backgroundbar {\n              border-radius: 0px !important;\n              right: 0;\n            }\n            #states {\n              padding: 0;\n              height: 35px;\n            }\n            bar-card-background {\n              height: 35px !important;\n            }\n            bar-card-indicator {\n              left: 10px;\n            }\n            bar-card-value {\n              font-weight: bold;\n              font-size: 12px;\n            }\n</code></pre>"},{"location":"usage/custom_cards/custom_card_camera/","title":"Custom Camera Card","text":""},{"location":"usage/custom_cards/custom_card_camera/#custom-card-camera","title":"Custom-card \"Camera\"","text":"<p>This is a <code>custom-card</code> to display a camera live view.</p> <p> </p>"},{"location":"usage/custom_cards/custom_card_camera/#credits","title":"Credits","text":"<p>Author: Eltarius, from the script of Clemalex - 2022 Version: 1.0.0</p>"},{"location":"usage/custom_cards/custom_card_camera/#changelog","title":"Changelog","text":"1.0.1 Added variable to passthrough aspect ratio to the picture entity card. Fix minor issues with title.  1.0.0 Initial release."},{"location":"usage/custom_cards/custom_card_camera/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  entity: \"camera.sensor\"\n  template: \"custom_card_camera\"\n  show_icon: false #True if you set ulm_custom_card_camera_title: true\n  variables:\n    ulm_custom_card_camera_title: true\n    ulm_custom_card_camera_name: \"name\"\n    ulm_custom_card_camera_label: \"label\"\n    ulm_custom_card_camera_aspect_ratio: \"16:9\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_camera/#variables","title":"Variables","text":"Variable Example Required Default Explanation ulm_custom_card_camera_title true yes If you want header card ulm_custom_card_camera_name \"Garden\" no Name of your choice ulm_custom_card_camera_label \"Room\" no Label of your choice ulm_custom_card_camera_aspect_ratio '16:9' no Aspect ratio of camera entity Template Code custom_card_camera.yaml<pre><code>---\ncustom_card_camera:\n  template:\n    - \"blue_no_state\"\n  show_name: false\n  show_label: false\n  styles:\n    card:\n      - border-radius: \"20px\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: |-\n          [[[\n            if(variables.ulm_custom_card_camera_title)\n              return \"12px\";\n            else\n              return \"0px\";\n          ]]]\n    img_cell:\n      - border-radius: \"50%\"\n      - place-self: \"center\"\n      - width: \"42px\"\n      - height: \"42px\"\n    grid:\n      - grid-template-areas: \"'i item1' 'i item1' 'item2 item2'\"\n      - grid-template-columns: \"min-content auto\"\n      - grid-template-rows: \"min-content min-content min-content\"\n      - row-gap: |-\n          [[[\n            if(variables.ulm_custom_card_camera_title)\n              return \"12px\";\n            else\n              return \"0px\";\n          ]]]\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        show_name: \"[[[ return variables.ulm_custom_card_camera_title; ]]]\"\n        show_label: \"[[[ return variables.ulm_custom_card_camera_title; ]]]\"\n        show_icon: \"[[[ return variables.ulm_custom_card_camera_title; ]]]\"\n        name: \"[[[ return variables.ulm_custom_card_camera_name; ]]]\"\n        label: \"[[[ return variables.ulm_custom_card_camera_label; ]]]\"\n        tap_action:\n          action: \"more-info\"\n          entity: \"[[[ return entity.entity_id ]]]\"\n        styles:\n          card:\n            - box-shadow: \"none\"\n            - padding: \"0\"\n            - --mdc-ripple-press-opacity: 0\n          name:\n            - align-self: \"end\"\n            - justify-self: \"start\"\n            - font-weight: \"bold\"\n            - font-size: \"14px\"\n            - margin-left: \"12px\"\n            - filter: \"opacity(100%)\"\n          label:\n            - justify-self: \"start\"\n            - align-self: \"start\"\n            - font-weight: \"bolder\"\n            - font-size: \"12px\"\n            - filter: \"opacity(40%)\"\n            - margin-left: \"12px\"\n          grid:\n            - grid-template-areas: \"'n' 'l'\"\n            - grid-template-columns: \"auto\"\n            - grid-template-rows: \"min-content min-content\"\n    item2:\n      card:\n        type: \"picture-entity\"\n        camera_image: \"[[[ return entity.entity_id ]]]\"\n        camera_view: \"live\"\n        entity: \"[[[ return entity.entity_id ]]]\"\n        show_name: false\n        show_state: false\n        aspect_ratio: \"[[[ return variables.ulm_custom_card_camera_aspect_ratio; ]]]\"\n  tap_action:\n    action: \"more-info\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_chromecast/","title":"Mediaplayer Chromecast Custom-card","text":""},{"location":"usage/custom_cards/custom_card_chromecast/#media-player-sonos","title":"Media player: sonos","text":"<p>NOTE This card is under review and is not ready to use!</p> <p></p> Usage  ## Example  <pre><code>- type: \"custom:button-card\"\n  template: card_media_player_chromecast_with_controls\n  variables:\n    ulm_card_media_player_with_controls_name: \"Chromecast\"\n    ulm_card_media_player_with_controls_entity: media_player.my_chromecast\n</code></pre>  ## Variables   Variable Example Required Explanation ulm_card_media_player_with_controls_name Chromecast Yes Name shown in lovelace ulm_card_media_player_with_controls_entity media_player.my_chromecast Yes Entity id Template Code custom_card_chromecast.yaml<pre><code>---\ncard_media_player_chromecast:\n  size: \"20px\"\n  show_icon: true\n  show_entity_picture: false\n  show_state: false\n  show_name: true\n  template:\n    - \"icon_info\"\n    - \"blue_not_unavailable\"\n    - \"ulm_translation_engine\"\n  label: \"[[[ return variables.ulm_translation_state ]]]\"\ncard_media_player_chromecast_with_controls:\n  variables:\n    ulm_card_media_player_with_controls_name: \"No name set\"\n  triggers_update:\n    - \"[[[ ulm_card_media_player_with_controls_entity ]]]\"\n  styles:\n    grid:\n      - grid-template-areas: \"'item1' 'item2'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content  min-content\"\n      - row-gap: \"12px\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        template:\n          - \"card_media_player_chromecast\"\n        tap_action:\n          action: \"more-info\"\n        entity: \"[[[ return variables.ulm_card_media_player_with_controls_entity ]]]\"\n        name: \"[[[ return variables.ulm_card_media_player_with_controls_name ]]]\"\n        styles:\n          card:\n            - box-shadow: \"none\"\n            - padding: \"0px\"\n    item2:\n      card:\n        type: \"custom:button-card\"\n        template: \"list_items\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"media_player.toggle\"\n                target:\n                  entity_id: \"[[[ return variables.ulm_card_media_player_with_controls_entity ]]]\"\n              icon: \"mdi:power\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              entity: \"[[[ return variables.ulm_card_media_player_with_controls_entity ]]]\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"media_player.media_play_pause\"\n                target:\n                  entity_id: \"[[[ return variables.ulm_card_media_player_with_controls_entity ]]]\"\n              icon: \"mdi:pause\"\n              state:\n                - value: \"paused\"\n                  icon: \"mdi:play\"\n                - value: \"off\"\n                  icon: \"mdi:play\"\n          item3:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"media_player.toggle\"\n                target:\n                  entity_id: \"[[[ return variables.ulm_card_media_player_with_controls_entity ]]]\"\n              icon: \"mdi:video-input-hdmi\"\n\nblue_not_unavailable:\n  state:\n    - styles:\n        icon:\n          - color: \"rgba(var(--color-blue),1)\"\n        img_cell:\n          - background-color: \"rgba(var(--color-blue), 0.2)\"\n      value: \"unavailable\"\n      operator: \"!=\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_damix48_power_details/","title":"Power Details Custom-card","text":""},{"location":"usage/custom_cards/custom_card_damix48_power_details/#custom-card-power-details","title":"Custom-card \"Power details\"","text":"<p>The <code>custom_card_damix48_power_details</code> is an extension of the standard graph card and can show a detailed graphs of power consumption. If hover (or tap in mobile) the points of the line show the average power in that time interval.</p> <p></p>"},{"location":"usage/custom_cards/custom_card_damix48_power_details/#credits","title":"Credits","text":"<p>Author: Damix48 Version: 0.1.1</p>"},{"location":"usage/custom_cards/custom_card_damix48_power_details/#changelog","title":"Changelog","text":"0.1.0 Initial release.  0.1.1 Fix for UI Minimalist v1.0.1.  <p>Breaking Change</p> <p>Since <code>v1.0.2</code> you also need to specify the entity outside the variables section.</p>"},{"location":"usage/custom_cards/custom_card_damix48_power_details/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: custom_card_damix48_power_details\n  entity: sensor.shellyem_id_channel_1_power\n  variables:\n    ulm_card_power_details_name: Power\n    ulm_card_power_details_entity: sensor.shellyem_id_channel_1_power\n    ulm_card_power_details_hours: 2\n    ulm_card_power_details_24hour: true\n    ulm_card_power_details_thresholds:\n      - value: 0\n        color: \"#43A047\"\n      - value: 2500\n        color: \"#FFA600\"\n      - value: 3000\n        color: \"#DB4437\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_damix48_power_details/#requirements","title":"Requirements","text":"<p>Need mini-graph-card</p>"},{"location":"usage/custom_cards/custom_card_damix48_power_details/#variables","title":"Variables","text":"Variable Example Required Explanation ulm_card_power_details_entity sensor.shellyem_id_channel_1_power yes Power sensor entity ulm_card_power_details_name \"Power\" no Name to show on card. ulm_card_power_details_hours 2 no Number of hour to show in the graph (2 is the default value) ulm_card_power_details_24hour true no Switch from AM/PM (default) to 24h format ulm_card_power_details_thresholds <pre>\n- value: 0\n  color: \"#43A047\"\n- value: 2500\n  color: \"#FFA600\"\n- value: 3000\n  color: \"#DB4437\"\n<pre>\n\nno\nThresholds to change color in the graph according to power value (default is only one color)\n\n\nulm_card_power_details_height\n180\nno\nHeight of the graph (180 is the default value)\n\n\n\n\nTemplate Code\ncustom_card_damix48_power_details.yaml<pre><code>---\ncustom_card_damix48_power_details:\n  template:\n    - \"ulm_custom_card_damix48_power_details_language_variables\"\n  variables:\n    ulm_card_power_details_name: \"n/a\"\n    ulm_card_power_details_hours: 2\n    ulm_card_power_details_24hour: false\n    ulm_card_power_details_height: 180\n  show_icon: false\n  show_name: false\n  show_label: false\n  triggers_update: \"all\"\n  styles:\n    grid:\n      - grid-template-areas: \"'item1' 'item2'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content  min-content\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"0px\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        template:\n          - \"icon_info\"\n          - \"card_generic_swap\"\n        entity: \"[[[ return entity.entity_id ]]]\"\n        variables:\n          ulm_card_generic_swap_name: \"[[[ return variables.ulm_card_power_details_name ]]]\"\n        styles:\n          card:\n            - box-shadow: \"none\"\n            - border-radius: \"var(--border-radius) var(--border-radius) 0px 0px\"\n            - padding: \"12px\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template:\n                - \"icon_more_info\"\n              custom_fields:\n                item1:\n                  card:\n                    type: \"custom:button-card\"\n                    entity: \"[[[ return entity.entity_id ]]]\"\n                item2:\n                  card:\n                    type: \"custom:button-card\"\n                    entity: \"[[[ return entity.entity_id ]]]\"\n                    label: |\n                      [[[\n                        if (variables.ulm_card_power_details_hours == 1) {\n                          return variables.ulm_custom_card_damix48_power_details_in_the_last + \" \" + variables.ulm_custom_card_damix48_power_details_hour;\n                        } else {\n                          return variables.ulm_custom_card_damix48_power_details_in_the_lasts + \" \" + variables.ulm_card_power_details_hours + \" \" + variables.ulm_custom_card_damix48_power_details_hours;\n                        }\n                      ]]]\n    item2:\n      card:\n        type: \"custom:mini-graph-card\"\n        template:\n          - \"icon_info\"\n          - \"card_generic\"\n        entities:\n          - entity: \"[[[ return variables.ulm_card_power_details_entity ]]]\"\n        color_thresholds: |\n          [[[\n            if (variables.ulm_card_power_details_thresholds) {\n              return variables.ulm_card_power_details_thresholds;\n            } else {\n              return [{\n                value: 0,\n                color: \"var(--info-color)\"\n              }];\n            }\n          ]]]\n        hours_to_show: \"[[[ return variables.ulm_card_power_details_hours ]]]\"\n        points_per_hour: \"[[[ return Math.floor(120 / variables.ulm_card_power_details_hours) ]]]\"\n        name: \"[[[ return variables.ulm_card_power_details_name ]]]\"\n        hour24: \"[[[ return variables.ulm_card_power_details_24hour ]]]\"\n        decimals: 1\n        show:\n          name: false\n          icon: false\n          legend: false\n          state: true\n        align_state: \"center\"\n        height: \"[[[ return variables.ulm_card_power_details_height ]]]\"\n        style: |\n          ha-card {\n            box-shadow: none;\n            border-radius: var(--border-radius);\n          }\n          ha-card .state {\n            font-weight: bold;\n            font-size: 14px;\n          }\n          ha-card .graph__labels &gt; span {\n            background: var(--card-background-color);\n            color: var(--secondary-text-color)\n          }\n</code></pre>"},{"location":"usage/custom_cards/custom_card_device_tracker/","title":"Device Tracker Custom-card","text":""},{"location":"usage/custom_cards/custom_card_device_tracker/#description","title":"Description","text":"<p>The <code>custom_card_device_tracker</code> displays presence state of a device according to the provided entity. It allow to display the state of two tracker for this device</p>"},{"location":"usage/custom_cards/custom_card_device_tracker/#variables","title":"Variables","text":"Variable Default Required Notes entity The device entity or group ulm_custom_card_device_tracker_icon <code>icon</code> to display ulm_custom_card_device_tracker_tracker_1_entity Set the first tracker <code>entity</code>. ulm_custom_card_device_tracker_tracker_1_type Set the type of the first tracker, for the notification icon ulm_custom_card_device_tracker_tracker_2_entity Set the second tracker <code>entity</code>. ulm_custom_card_device_tracker_tracker_2_type Set the type of the second tracker, for the notification icon"},{"location":"usage/custom_cards/custom_card_device_tracker/#usage","title":"Usage","text":"<pre><code>- type: 'custom:button-card'\n  template: custom_card_device_tracker\n  entity: group.my_smartphone\n  variables:\n    ulm_custom_card_device_tracker_icon: mdi:cellphone\n    ulm_custom_card_device_tracker_tracker_1_entity: device_tracker.my_smartphone_ping\n    ulm_custom_card_device_tracker_tracker_1_type: 'lan'\n    ulm_custom_card_device_tracker_tracker_2_entity: device_tracker.my_smartphone_bluetooth\n    ulm_custom_card_device_tracker_tracker_2_type: 'bluetooth'\n</code></pre> Template Code custom_card_device_tracker.yaml<pre><code>---\ncustom_card_device_tracker:\n  template:\n    - \"icon_info_bg\"\n    - \"ulm_translation_engine\"\n  tap_action:\n    action: \"more-info\"\n  show_label: true\n  show_name: true\n  label: \"[[[ return variables.ulm_translation_state ]]]\"\n  entity: \"[[[ return entity; ]]]\"\n  icon: \"[[[ return variables.ulm_custom_card_device_tracker_icon; ]]]\"\n  styles:\n    icon:\n      - color: &gt;\n          [[[\n              return entity.state === \"not_home\" ?\n              \"rgba(var(--color-theme),0.9)\":\n              \"rgba(var(--color-green),1)\";\n          ]]]\n    custom_fields:\n      tracker_1:\n        - border-radius: \"50%\"\n        - position: \"absolute\"\n        - left: \"38px\"\n        - top: \"8px\"\n        - height: \"16px\"\n        - width: \"16px\"\n        - border: \"2px solid var(--card-background-color)\"\n        - font-size: \"12px\"\n        - line-height: \"14px\"\n        - background-color: &gt;\n            [[[\n              if (variables.ulm_custom_card_device_tracker_tracker_1_entity) {\n                if (states[variables.ulm_custom_card_device_tracker_tracker_1_entity].state !== 'home') {\n                  return \"rgba(var(--color-green),1)\";\n                } else {\n                  return \"rgba(var(--color-blue),1)\";\n                }\n              }\n            ]]]\n      tracker_2:\n        - border-radius: \"50%\"\n        - position: \"absolute\"\n        - left: \"38px\"\n        - top: \"38px\"\n        - height: \"16px\"\n        - width: \"16px\"\n        - border: \"2px solid var(--card-background-color)\"\n        - font-size: \"12px\"\n        - line-height: \"14px\"\n        - background-color: &gt;\n            [[[\n              if (variables.ulm_custom_card_device_tracker_tracker_2_entity) {\n                if (states[variables.ulm_custom_card_device_tracker_tracker_2_entity].state !== 'home') {\n                  return \"rgba(var(--color-green),1)\";\n                } else {\n                  return \"rgba(var(--color-blue),1)\";\n                }\n              }\n            ]]]\n  custom_fields:\n    tracker_1: &gt;\n      [[[\n        if (variables.ulm_custom_card_device_tracker_tracker_1_entity) {\n          let state = states[variables.ulm_custom_card_device_tracker_tracker_1_entity].state;\n          let icon = state === 'home' ? 'mdi:home-variant' : 'mdi:home-minus';\n          let type = variables.ulm_custom_card_device_tracker_tracker_1_type\n\n          if (type == 'bluetooth') {\n            icon = state === 'home' ? 'mdi:bluetooth': 'mdi:bluetooth-off';\n          } else if (type == 'lan') {\n            icon = state === 'home' ? 'mdi:lan-connect' : 'mdi:lan-disconnect';\n          }\n          return '&lt;ha-icon icon=\"' + icon + '\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;';\n        }\n      ]]]\n    tracker_2: &gt;\n      [[[\n        if (variables.ulm_custom_card_device_tracker_tracker_2_entity) {\n          let state = states[variables.ulm_custom_card_device_tracker_tracker_2_entity].state;\n          let icon = state === 'home' ? 'mdi:home-variant' : 'mdi:home-minus';\n          let type = variables.ulm_custom_card_device_tracker_tracker_2_type\n\n          if (type == 'bluetooth') {\n            icon = state === 'home' ? 'mdi:bluetooth': 'mdi:bluetooth-off';\n          } else if (type == 'lan') {\n            icon = state === 'home' ? 'mdi:lan-connect' : 'mdi:lan-disconnect';\n          }\n          return '&lt;ha-icon icon=\"' + icon + '\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;';\n        }\n      ]]]\n</code></pre>"},{"location":"usage/custom_cards/custom_card_drealine_roomview/","title":"Drealine RoomView - Custom Card","text":""},{"location":"usage/custom_cards/custom_card_drealine_roomview/#custom-card-drealine-roomview","title":"Custom-card \"Drealine RoomView\"","text":""},{"location":"usage/custom_cards/custom_card_drealine_roomview/#credits","title":"Credits","text":"<ul> <li>Author: Drealine - 2022</li> <li>Version: 1.0.0</li> </ul>"},{"location":"usage/custom_cards/custom_card_drealine_roomview/#changelog","title":"Changelog","text":"1.0.0 Initial release"},{"location":"usage/custom_cards/custom_card_drealine_roomview/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: \"custom_card_drealine_roomview\"\n  variables:\n    icon: \"mdi:home-variant-outline\"\n    name: \"Entr\u00e9e\"\n    group_lights:\n    group_motions:\n    group_doors:\n    group_windows:\n    group_outlets:\n    group_tv:\n    group_water:\n    group_windows_shutters:\n    temperature:\n    humidity:\n</code></pre>"},{"location":"usage/custom_cards/custom_card_drealine_roomview/#requirements","title":"Requirements","text":"<p>No requirements at the moment.</p>"},{"location":"usage/custom_cards/custom_card_drealine_roomview/#variables","title":"Variables","text":"Variable Example Required Explanation Icon mdi:bedroom no Icon of the card Name Text no Title for the card (it's not showing, just for more readable) group_lights group.lights no Any groups that contain lights group_motions group.motions no Any groups that contain motions sensors group_doors group.doors no Any groups that contain doors sensors group_windows group.windows no Any groups that contain windows sensors group_outlets group.outlets no Any groups that contain outlets group_tv group.tv no Any groups that contain TV's group_water group.water no Any groups that contain water sensors group_windows_shutters group.windows_shutters no Any groups that contain windows shutters temperature entity.temperature_saloon no Temperature sensor or the room humidity entity.humidity_saloon no Humidity sensor or the room Template Code custom_card_drealine_roomview.yaml<pre><code>---\ncustom_card_drealine_roomview:\n  template:\n    - \"custom_card_drealine_roomview_style_root\"\n  variables:\n    group_lights:\n    group_motions:\n    group_doors:\n    group_windows:\n    group_outlets:\n    group_tv:\n    group_water:\n    group_windows_shutters:\n    temperature:\n    humidity:\n  triggers_update: \"all\"\n  group_expand: true\n  custom_fields:\n    header:\n      card:\n        template:\n          - \"custom_card_drealine_roomview_conf_header_root\"\n        type: \"custom:button-card\"\n        custom_fields:\n          header_card:\n            card:\n              variables:\n                ulm_card_tap_action: \"[[[ return variables.ulm_card_tap_action; ]]]\"\n                ulm_input_select_option: \"[[[ return variables.ulm_input_select_option; ]]]\"\n                ulm_input_select: \"[[[ return variables.ulm_input_select; ]]]\"\n                ulm_card_tap_navigate_path: \"[[[ return variables.ulm_card_tap_navigate_path; ]]]\"\n              styles:\n                custom_fields:\n                  warning:\n                    - display: |\n                        [[[\n                          var groups = [variables.group_lights, variables.group_motions,variables.group_doors,\n                          variables.group_windows, variables.group_outlets, variables.group_water];\n                          var arrayLength = groups.length;\n                          var count_unavailable = 0;\n                          for (var i = 0; i &lt; arrayLength; i++){\n                            if(states[groups[i]]){\n                              if (states[groups[i]].attributes['entity_id']){\n                                states[groups[i]].attributes['entity_id'].forEach(function(entity){\n                                  if(states[entity] &amp;&amp; states[entity].state == 'unavailable'){\n                                    count_unavailable += 1;\n                                  }\n                                });\n                              }\n                              else\n                              {\n                                if (states[groups[i]].state == 'unavailable'){\n                                  count_unavailable += 1;\n                                }\n                              }\n                            }\n                          }\n                          if (count_unavailable &gt;= 1){\n                            return \"auto\";\n                          }\n                          else{\n                            return \"none\";\n                          }\n                        ]]]\n              icon: \"[[[ return variables.icon ]]]\"\n              name: |\n                [[[\n                  var temperature = '';\n                  temperature += '&lt;ha-icon icon=\"mdi:thermometer\" style=\"width: 17px; height: 17px; color: grey,1);\"&gt;&lt;/ha-icon&gt;';\n                  if (states[variables.temperature]){\n                    temperature += states[variables.temperature].state + states[variables.temperature].attributes.unit_of_measurement\n                  }\n                  else{\n                    temperature = \"N/A\"\n                  }\n                  return temperature;\n                ]]]\n              label: |\n                [[[\n                  var humidity = '';\n                  humidity += '&lt;ha-icon icon=\"mdi:water-percent\" style=\"width: 17px; height: 17px; color: grey,1);\"&gt;&lt;/ha-icon&gt;';\n                  if (states[variables.humidity]){\n                    humidity += states[variables.humidity].state + states[variables.humidity].attributes.unit_of_measurement\n                  }\n                  else{\n                    humidity = \"N/A\"\n                  }\n                  return humidity;\n                ]]]\n              template:\n                - \"custom_card_drealine_roomview_conf_header\"\n                - \"ulm_actions_card\"\n              type: \"custom:button-card\"\n    sensors:\n      card:\n        template:\n          - \"custom_card_drealine_roomview_conf_sensors\"\n        styles:\n          card:\n            - display: |\n                [[[\n                  var groups = [variables.group_lights, variables.group_motions,variables.group_doors,\n                  variables.group_windows, variables.group_outlets, variables.group_water];\n                  var arrayLength = groups.length;\n                  var count_if_show_box_sensors = 0;\n                  for (var i = 0; i &lt; arrayLength; i++) {\n                    if(states[groups[i]]){\n                      if (states[groups[i]].attributes['entity_id']){\n                        states[groups[i]].attributes['entity_id'].forEach(function(entity){\n                          if(states[entity] &amp;&amp; states[entity].attributes.battery &lt;= 20){\n                            count_if_show_box_sensors += 1;\n                          }\n                        });\n                      }\n                    }\n                  }\n                  for (var i = 0; i &lt; arrayLength; i++) {\n                    if(states[groups[i]]){\n                      if(states[groups[i]].state == \"on\"){\n                        count_if_show_box_sensors += 1;\n                      }\n                    }\n\n                  }\n                  if (count_if_show_box_sensors &gt;= 1){\n                    return \"auto\";\n                  }\n                  else\n                  {\n                    return \"none\";\n                  }\n                ]]]\n          custom_fields:\n            battery:\n              - display: |\n                  [[[\n                    var groups = [variables.group_lights, variables.group_motions,variables.group_doors,\n                    variables.group_windows, variables.group_outlets, variables.group_water];\n                    var arrayLength = groups.length;\n                    var count_if_show_box_sensors = 0;\n                    for (var i = 0; i &lt; arrayLength; i++) {\n                      if(states[groups[i]]){\n                        if (states[groups[i]].attributes['entity_id']){\n                          states[groups[i]].attributes['entity_id'].forEach(function(entity){\n                            if(states[entity] &amp;&amp; states[entity].attributes.battery &lt;= 20){\n                              count_if_show_box_sensors += 1;\n                            }\n                          });\n                        }\n                      }\n                    }\n                    if (count_if_show_box_sensors &gt;= 1){\n                      return \"auto\";\n                    }\n                    else\n                    {\n                      return \"none\";\n                    }\n                  ]]]\n            doors:\n              - display: |\n                  [[[\n                    if (variables.group_doors){\n                      return \"auto\";\n                    }\n                    else\n                    {\n                      return \"none\";\n                    }\n                  ]]]\n            windows:\n              - display: |\n                  [[[\n                    if (variables.group_windows){\n                      return \"auto\";\n                    }\n                    else\n                    {\n                      return \"none\";\n                    }\n                  ]]]\n            motions:\n              - display: |\n                  [[[\n                    if (variables.group_motions){\n                      return \"auto\";\n                    }\n                    else\n                    {\n                      return \"none\";\n                    }\n                  ]]]\n            water:\n              - display: |\n                  [[[\n                    if (variables.group_water){\n                      return \"auto\";\n                    }\n                    else\n                    {\n                      return \"none\";\n                    }\n                  ]]]\n        type: \"custom:button-card\"\n        custom_fields:\n          doors:\n            card:\n              template:\n                - \"custom_card_drealine_roomview_conf_icons_sensors\"\n                - \"custom_card_drealine_roomview_count_sensors\"\n              icon: \"mdi:door-open\"\n              entity: \"[[[ return variables.group_doors ]]]\"\n              styles:\n                card:\n                  - display: &gt;-\n                      [[[\n                        if (variables.group_doors &amp;&amp; states[variables.group_doors].state == 'on'){\n                          return \"auto\";\n                        }\n                        else{\n                          return \"none\";\n                        }\n                      ]]]\n              type: \"custom:button-card\"\n          battery:\n            card:\n              template:\n                - \"custom_card_drealine_roomview_conf_icons_sensors\"\n                - \"custom_card_drealine_roomview_style_count_batteries\"\n              icon: \"mdi:battery-20\"\n              styles:\n                card:\n                  - display: &gt;-\n                      [[[\n                        var count_alert = 0;\n                        var groups = [variables.group_lights, variables.group_motions,variables.group_doors,\n                        variables.group_windows, variables.group_outlets, variables.group_water];\n                        var arrayLength = groups.length;\n                        for (var i = 0; i &lt; arrayLength; i++) {\n                          if(states[groups[i]]){\n                            if (states[groups[i]].attributes['entity_id']){\n                              states[groups[i]].attributes['entity_id'].forEach(function(entity){\n                                if(states[entity] &amp;&amp; states[entity].attributes.battery &lt;= 20){\n                                  count_alert += 1;\n                                }\n                              });\n                            }\n                          }\n                        }\n                        if (count_alert &gt;= 1){\n                          return \"auto\";\n                        }\n                        else{\n                          return \"none\";\n                        }\n                      ]]]\n                custom_fields:\n                  count_batteries:\n                    - display: |\n                        [[[\n                          var count_alert = 0;\n                          var groups = [variables.group_lights, variables.group_motions,variables.group_doors,\n                          variables.group_windows, variables.group_outlets, variables.group_water];\n                          var arrayLength = groups.length;\n                          for (var i = 0; i &lt; arrayLength; i++) {\n                            if(states[groups[i]]){\n                              if (states[groups[i]].attributes['entity_id']){\n                                states[groups[i]].attributes['entity_id'].forEach(function(entity){\n                                  if(states[entity] &amp;&amp; states[entity].attributes.battery &lt;= 20){\n                                    count_alert += 1;\n                                  }\n                                });\n                              }\n                            }\n                          }\n                          if (count_alert &gt;= 1){\n                            return \"auto\";\n                          }\n                          else{\n                            return \"none\";\n                          }\n                        ]]]\n              custom_fields:\n                count_batteries: |\n                    [[[\n                      var battery = 0;\n                      var groups = [variables.group_lights, variables.group_motions,variables.group_doors,\n                      variables.group_windows, variables.group_outlets, variables.group_water];\n                      var arrayLength = groups.length;\n                      for (var i = 0; i &lt; arrayLength; i++) {\n                        if(states[groups[i]]){\n                          if (states[groups[i]].attributes['entity_id']){\n                            states[groups[i]].attributes['entity_id'].forEach(function(entity){\n                              if(states[entity] &amp;&amp; states[entity].attributes.battery &lt;= 20){\n                                battery += 1;\n                              }\n                            });\n                          }\n                        }\n                      }\n                      return battery;\n                    ]]]\n              type: \"custom:button-card\"\n          windows:\n            card:\n              template:\n                - \"custom_card_drealine_roomview_conf_icons_sensors\"\n                - \"custom_card_drealine_roomview_count_sensors\"\n              icon: \"mdi:window-closed-variant\"\n              entity: \"[[[ return variables.group_windows ]]]\"\n              styles:\n                card:\n                  - display: &gt;-\n                      [[[\n                        if (variables.group_windows &amp;&amp; states[variables.group_windows].state == 'on'){\n                          return \"auto\";\n                        }\n                        else{\n                          return \"none\";\n                        }\n                      ]]]\n              type: \"custom:button-card\"\n          motions:\n            card:\n              template:\n                - \"custom_card_drealine_roomview_conf_icons_sensors\"\n              icon: \"mdi:motion-sensor\"\n              entity: \"[[[ return variables.group_motions ]]]\"\n              styles:\n                card:\n                  - display: &gt;-\n                      [[[\n                        if (variables.group_motions &amp;&amp; states[variables.group_motions].state == 'on'){\n                          return \"auto\";\n                        }\n                        else{\n                          return \"none\";\n                        }\n                      ]]]\n              type: \"custom:button-card\"\n          water:\n            card:\n              template:\n                - \"custom_card_drealine_roomview_conf_icons_sensors\"\n              icon: \"mdi:water\"\n              entity: \"[[[ return variables.group_water ]]]\"\n              styles:\n                card:\n                  - display: &gt;-\n                      [[[\n                        if (variables.group_water &amp;&amp; states[variables.group_water].state == 'on'){\n                          return \"auto\";\n                        }\n                        else{\n                          return \"none\";\n                        }\n                      ]]]\n              type: \"custom:button-card\"\n    devices:\n      card:\n        template: \"custom_card_drealine_roomview_conf_devices_root\"\n        type: \"custom:button-card\"\n        custom_fields:\n          lights:\n            card:\n              template:\n                - \"custom_card_drealine_roomview_conf_devices\"\n              icon: |\n                [[[\n                var count_unavailable = 0;\n                var count_entity = 0;\n                if (states[variables.group_lights]){\n                  if (states[variables.group_lights].attributes['entity_id']){\n                    states[variables.group_lights].attributes['entity_id'].forEach(function(entity){\n                      count_entity += 1;\n                      if(states[entity] &amp;&amp; states[entity].state == 'unavailable'){\n                        count_unavailable += 1;\n                      }\n                    });\n                    if (count_entity == count_unavailable){\n                      return \"mdi:lightbulb-alert\";\n                    }\n                  }\n                  else return \"mdi:exclamation\"\n                  var state_lights = states[variables.group_lights].state;\n                  if (state_lights == 'on') return \"mdi:lightbulb-group\";\n                  else if (state_lights == 'off') return \"mdi:lightbulb-group-off\";\n                }\n                else{\n                  return \"mdi:lightbulb-group-off\"\n                }\n                ]]]\n              entity: \"[[[ return variables.group_lights ]]]\"\n              type: \"custom:button-card\"\n          windows_shutters:\n            card:\n              template:\n                - \"custom_card_drealine_roomview_conf_devices\"\n              icon: &gt;\n                [[[\n                var count_unavailable = 0;\n                var count_entity = 0;\n                if (states[variables.group_windows_shutters]){\n                  if (states[variables.group_windows_shutters].attributes['entity_id']){\n                    states[variables.group_windows_shutters].attributes['entity_id'].forEach(function(entity){\n                      count_entity += 1;\n                      if(states[entity] &amp;&amp; states[entity].state == 'unavailable'){\n                        count_unavailable += 1;\n                      }\n                    });\n                    if (count_entity == count_unavailable){\n                      return \"mdi:window-shutter-alert\";\n                    }\n                  }\n                  else return \"mdi:exclamation\"\n                  var state_windows = states[variables.group_windows_shutters].state;\n                  if (state_windows == 'on') return \"mdi:window-shutter-open\";\n                  else if (state_windows == 'off') return \"mdi:window-shutter\";\n                  else return \"mdi:exclamation\"\n                }\n                else{\n                  return \"mdi:window-shutter\"\n                }\n                ]]]\n              entity: \"[[[ return variables.group_windows_shutters ]]]\"\n              type: \"custom:button-card\"\n          outlets:\n            card:\n              template:\n                - \"custom_card_drealine_roomview_conf_devices\"\n              icon: &gt;\n                [[[\n                var count_unavailable = 0;\n                var count_entity = 0;\n                if (states[variables.group_outlets]){\n                  if (states[variables.group_outlets].attributes['entity_id']){\n                    states[variables.group_outlets].attributes['entity_id'].forEach(function(entity){\n                      count_entity += 1;\n                      if(states[entity] &amp;&amp; states[entity].state == 'unavailable'){\n                        count_unavailable += 1;\n                      }\n                    });\n                    if (count_entity == count_unavailable){\n                      return \"mdi:exclamation-thick\";\n                    }\n                  }\n                  var group_outlets = states[variables.group_outlets].state;\n                  if (group_outlets == 'on') return \"mdi:power-plug\";\n                  else if (group_outlets == 'off') return \"mdi:power-plug-off\";\n                  else return \"mdi:exclamation\"\n                }\n                else{\n                  return \"mdi:power-plug-off\"\n                }\n                ]]]\n              entity: \"[[[ return variables.group_outlets ]]]\"\n              type: \"custom:button-card\"\n          tv:\n            card:\n              template:\n                - \"custom_card_drealine_roomview_conf_devices\"\n              icon: &gt;\n                [[[\n                  var count_unavailable = 0;\n                  var count_entity = 0;\n\n                  if (states[variables.group_tv]){\n                    if (states[variables.group_tv].attributes['entity_id']){\n                      states[variables.group_tv].attributes['entity_id'].forEach(function(entity){\n                        count_entity += 1;\n                        if(states[entity] &amp;&amp; states[entity].state == 'unavailable'){\n                          count_unavailable += 1;\n                        }\n                      });\n                      if (count_entity == count_unavailable){\n                        return \"mdi:exclamation-thick\";\n                      }\n                    }\n                    var group_tv = states[variables.group_tv].state;\n                    if (group_tv == 'on') return \"mdi:television\";\n                    else if (group_tv == 'off') return \"mdi:television-off\";\n                    else return \"mdi:exclamation\"\n                  }\n                  else{\n                    return \"mdi:television-off\"\n                  }\n                ]]]\n              entity: \"[[[ return variables.group_tv ]]]\"\n              type: \"custom:button-card\"\n        styles:\n          custom_fields:\n            lights:\n              - flex: \"auto\"\n              - display: \"auto\"\n            windows_shutters:\n              - flex: \"auto\"\n              - display: |\n                  [[[\n                    if (variables.group_windows_shutters){\n                      return \"auto\";\n                    }\n                    else\n                    {\n                      return \"none\";\n                    }\n                  ]]]\n            outlets:\n              - flex: \"auto\"\n              - display: |\n                  [[[\n                    if (variables.group_outlets){\n                      return \"auto\";\n                    }\n                    else\n                    {\n                      return \"none\";\n                    }\n                  ]]]\n            tv:\n              - flex: \"auto\"\n              - display: |\n                  [[[\n                    if (variables.group_tv){\n                      return \"auto\";\n                    }\n                    else\n                    {\n                      return \"none\";\n                    }\n                  ]]]\ncustom_card_drealine_roomview_conf_devices_root:\n  styles:\n    grid:\n      - display: \"flex\"\n      - gap: \"2%\"\n      - flex-wrap: \"wrap\"\n    card:\n      - box-shadow: \"none\"\n      - padding: \"0px\"\n      - border-radius: \"0%\"\ncustom_card_drealine_roomview_style_count_batteries:\n  styles:\n    custom_fields:\n      count_batteries:\n        - border-radius: \"50%\"\n        - position: \"absolute\"\n        - left: \"58%\"\n        - top: \"5%\"\n        - height: \"13px\"\n        - width: \"13px\"\n        - font-weight: \"900\"\n        - font-size: \"10px\"\n        - line-height: \"13px\"\n        - color: \"white\"\n        - background-color: \"rgba(var(--color-blue),0.75)\"\ncustom_card_drealine_roomview_count_sensors:\n  group_expand: true\n  show_name: false\n  styles:\n    custom_fields:\n      number_of_sensors:\n        - border-radius: \"50%\"\n        - position: \"absolute\"\n        - left: \"58%\"\n        - top: \"5%\"\n        - height: \"13px\"\n        - width: \"13px\"\n        - font-weight: \"900\"\n        - font-size: \"10px\"\n        - line-height: \"13px\"\n        - color: \"white\"\n        - background-color: \"rgba(var(--color-blue),0.75)\"\n        - display: |\n            [[[\n              if ((entity !== undefined &amp;&amp; states[entity.entity_id].state == 'on')){\n                return \"auto\";\n              }\n              else\n              {\n                return \"none\";\n              }\n            ]]]\n  custom_fields:\n    number_of_sensors: |\n        [[[\n          var count = 0;\n          if(entity !== undefined){\n            if (states[entity.entity_id].attributes['entity_id']){\n              states[entity.entity_id].attributes['entity_id'].forEach(function(entity){\n                if(states[entity] &amp;&amp; states[entity].state == 'on'){\n                  count++;\n                }\n              });\n            }\n          }\n          return count;\n        ]]]\ncustom_card_drealine_roomview_style_root:\n  styles:\n    grid:\n      - grid-template-areas: \"'header' 'sensors' 'devices'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content  min-content\"\n      - row-gap: \"6px\"\n    card:\n      - border-radius: \"20px\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\ncustom_card_drealine_roomview_conf_header_root:\n  styles:\n    grid:\n      - grid-template-areas: \"'header_card'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content\"\n      - column-gap: \"7px\"\n    card:\n      - box-shadow: \"none\"\n      - padding: \"0px\"\ncustom_card_drealine_roomview_conf_sensors:\n  styles:\n    grid:\n      - display: \"flex\"\n      - justify-content: \"center\"\n      - flex-wrap: \"wrap\"\n      - align-content: \"center\"\n    card:\n      - box-shadow: \"none\"\n      - padding: \"0px\"\n      - margin: \"0px\"\n      - height: \"auto\"\n      - align-items: \"center\"\n      - border-radius: \"0%\"\ncustom_card_drealine_roomview_conf_devices:\n  group_expand: true\n  color: \"var(--google-grey)\"\n  tap_action:\n    action: \"none\"\n  double_tap_action:\n    action: \"toggle\"\n  size: \"20px\"\n  show_icon: true\n  show_name: false\n  state:\n    - styles:\n        icon:\n          - color: \"rgba(var(--color-yellow),1)\"\n        label:\n          - color: \"rgba(var(--color-yellow-text),1)\"\n        name:\n          - color: \"rgba(var(--color-yellow-text),1)\"\n        img_cell:\n          - background-color: \"rgba(var(--color-yellow), 0.2)\"\n        card:\n          - background-color: \"rgba(var(--color-background-yellow),var(--opacity-bg))\"\n      value: \"on\"\n  styles:\n    icon:\n      - color: \"rgba(var(--color-theme),0.9)\"\n      - height: \"40px\"\n    grid:\n      - grid-template-areas: \"'i'\"\n    card:\n      - box-shadow: \"none\"\n      - padding: \"0px\"\n      - background-color: \"rgba(var(--color-theme),0.05)\"\n      - border-radius: \"14px\"\n      - min-width: \"40px\"\n    custom_fields:\n      number_of_devices:\n        - border-radius: \"50%\"\n        - position: \"absolute\"\n        - left: \"50.5%\"\n        - top: \"24%\"\n        - height: \"13px\"\n        - width: \"13px\"\n        - font-size: \"10px\"\n        - font-weight: \"900\"\n        - line-height: \"13px\"\n        - background-color: \"rgba(var(--color-blue),0.75)\"\n        - color: \"white\"\n        - display: |\n            [[[\n              if ((entity !== undefined &amp;&amp; states[entity.entity_id].state == 'on')){\n                return \"auto\";\n              }\n              else\n              {\n                return \"none\";\n              }\n            ]]]\n  custom_fields:\n    number_of_devices: |\n        [[[\n          var count = 0;\n          if(entity !== undefined){\n            if (states[entity.entity_id].attributes['entity_id']){\n              states[entity.entity_id].attributes['entity_id'].forEach(function(entity){\n                if(states[entity] &amp;&amp; states[entity].state == 'on'){\n                  count++;\n                }\n              });\n            }\n          }\n          return count;\n        ]]]\ncustom_card_drealine_roomview_conf_header:\n  color: \"var(--google-grey)\"\n  show_icon: true\n  show_name: true\n  show_label: true\n  size: \"20px\"\n  custom_fields:\n    warning: |\n      [[[\n        return `&lt;ha-icon icon=\"mdi:exclamation-thick\" style=\"width: 12px; height: 12px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;`\n      ]]]\n  styles:\n    icon:\n      - color: \"rgba(var(--color-theme),0.2)\"\n      - transform: \"scale(1.2)\"\n    label:\n      - justify-self: \"start\"\n      - align-self: \"start\"\n      - font-weight: \"bold\"\n      - font-size: \"12px\"\n      - filter: \"opacity(50%)\"\n      - margin-left: \"10px\"\n    name:\n      - align-self: \"start\"\n      - justify-self: \"start\"\n      - font-weight: \"bold\"\n      - font-size: \"12px\"\n      - margin-top: \"2px\"\n      - margin-left: \"10px\"\n      - filter: \"opacity(50%)\"\n    img_cell:\n      - background-color: \"rgba(var(--color-theme),0.05)\"\n      - border-radius: \"50%\"\n      - place-self: \"center\"\n      - width: \"42px\"\n      - height: \"42px\"\n    grid:\n      - grid-template-areas: \"'i n' 'i l'\"\n      - grid-template-columns: \"min-content auto\"\n      - grid-template-rows: \"min-content\"\n      - position: \"relative\"\n    card:\n      - border-radius: \"21px 8px 8px 21px\"\n      - box-shadow: \"none\"\n      - padding: \"0px\"\n    custom_fields:\n      warning:\n        - border-radius: \"50%\"\n        - position: \"absolute\"\n        - left: \"28px\"\n        - top: \"0px\"\n        - height: \"16px\"\n        - width: \"16px\"\n        - border: \"2px solid var(--card-background-color)\"\n        - font-size: \"12px\"\n        - line-height: \"14px\"\n        - background-color: \"rgba(var(--color-red),1)\"\ncustom_card_drealine_roomview_conf_icons_sensors:\n  show_name: false\n  styles:\n    icon:\n      - color: \"rgba(var(--color-theme),0.9)\"\n      - transform: \"scale(1)\"\n      - width: \"20px\"\n    img_cell:\n      - height: \"auto\"\n      - width: \"35px\"\n    grid:\n      - grid-template-areas: \"'i'\"\n      - grid-template-columns: \"1fr\"\n    card:\n      - background: \"transparent\"\n      - box-shadow: \"none\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_eraycetinay_elapsed_time/","title":"Elapsed Time Custom-card","text":""},{"location":"usage/custom_cards/custom_card_eraycetinay_elapsed_time/#custom-card-elapsed-time","title":"Custom-card \"Elapsed Time\"","text":"<p>This is a <code>custom-card</code> that works with a <code>input_datetime</code> input. Template checks the <code>has_date</code> and <code>has_time</code> attributes and creates a label in <code>x days x hours x minutes ago</code> format.</p> <ul> <li><code>x days</code> only included if <code>has_date</code> is true (datetime object)</li> <li><code>x hours</code> only included if <code>has_time</code> is true (datetime and time objects)</li> <li><code>x minutes</code> only included if <code>has_time</code> is true and has_date is false (time object)</li> </ul> <p></p>"},{"location":"usage/custom_cards/custom_card_eraycetinay_elapsed_time/#credits","title":"Credits","text":"<p>Author: eraycetinay - 2022 Version: 0.0.1</p>"},{"location":"usage/custom_cards/custom_card_eraycetinay_elapsed_time/#changelog","title":"Changelog","text":"0.0.1   Initial release"},{"location":"usage/custom_cards/custom_card_eraycetinay_elapsed_time/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: \"custom_card_eraycetinay_elapsed_time\"\n  entity: input_datetime.cat_litter\n  name: \"Cat Litter\"\n</code></pre> Template Code custom_card_eraycetinay_elapsed_time.yaml<pre><code>---\ncustom_card_eraycetinay_elapsed_time:\n  template:\n    - \"ulm_custom_card_eraycetinay_elapsed_time_language_variables\"\n    - \"icon_info_bg\"\n  show_label: true\n  show_name: true\n  triggers_update:\n    - \"[[[ return entity.entity_id ]]]\"\n  label: |\n    [[[\n      let endDate = new Date();\n      let today = new Date();\n      if(entity.attributes.has_date) {\n        today = new Date(entity.state.replace(\" \", \"T\"));\n      } else {\u00a0\n        today = new Date().setHours(entity.attributes.hour,entity.attributes.minute,entity.attributes.second);\n      }\n\n      const days = parseInt((endDate - today) / (1000 * 60 * 60 * 24));\n      const hours = parseInt(Math.abs(endDate - today) / (1000 * 60 * 60) % 24);\n      const minutes = parseInt(Math.abs(endDate - today) / (1000 * 60) % 60);\n\n      let text = '';\n      if(entity.attributes.has_date) {\n        text += days &gt; 0 ? days + ' ' + (days &gt; 1 ? variables.ulm_custom_card_eraycetinay_elapsed_time_days : variables.ulm_custom_card_eraycetinay_elapsed_time_day) +' ' : '';\n      }\n      if(entity.attributes.has_time) {\n        text += hours &gt; 0 ? hours + ' ' + (hours &gt; 1 ? variables.ulm_custom_card_eraycetinay_elapsed_time_hours : variables.ulm_custom_card_eraycetinay_elapsed_time_hour) +' ' : '';\n      }\n      if(entity.attributes.has_time &amp;&amp; !entity.attributes.has_date) {\n        text += minutes &gt; 0 ? minutes + ' ' + (minutes &gt; 1 ? variables.ulm_custom_card_eraycetinay_elapsed_time_minutes : variables.ulm_custom_card_eraycetinay_elapsed_time_minute) +' ' : '';\n      }\n\n      text = text.length ? text += variables.ulm_custom_card_eraycetinay_elapsed_time_ago : variables.ulm_custom_card_eraycetinay_elapsed_time_justnow;\n      return text;\n    ]]]\n</code></pre>"},{"location":"usage/custom_cards/custom_card_eraycetinay_lock/","title":"Lock Card Custom-card","text":""},{"location":"usage/custom_cards/custom_card_eraycetinay_lock/#custom-card-lock","title":"Custom-card \"Lock\"","text":"<p>This is a <code>custom-card</code> that works in switch logic with a <code>lock</code> entity. Card structure uses <code>lock</code>, <code>unlock</code> (optional <code>open</code>) actions and <code>lock</code>,<code>unlock</code>,<code>locking</code>,<code>unlocking</code>, <code>jammed</code> states.</p> <p></p>"},{"location":"usage/custom_cards/custom_card_eraycetinay_lock/#credits","title":"Credits","text":"<p>Author: eraycetinay - 2022 Version: 0.0.3</p>"},{"location":"usage/custom_cards/custom_card_eraycetinay_lock/#changelog","title":"Changelog","text":"0.0.3 <ul> Contributor: Sisimomo - 2022-06-14 <li>Now can displays a warning when the battery is low.</li> <li>Now can displays a warning when the door is lock but the door is still open.</li> <li>Code refactoring to fit framework structure.</li> <li>Documentation clean up.</li> <li>Code clean up.</li> </ul> 0.0.2   Added option to only use lock.open  0.0.1   Initial release"},{"location":"usage/custom_cards/custom_card_eraycetinay_lock/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  entity: lock.door_lock\n  template: \"custom_card_eraycetinay_lock\"\n  name: \"Door Lock\"\n  variables:\n    ulm_custom_card_eraycetinay_lock_tap_control: true\n    ulm_custom_card_eraycetinay_lock_battery_level: sensor.door_battery\n    ulm_custom_card_eraycetinay_lock_door_open: binary_sensor.door_open\n  triggers_update:\n    - \"sensor.door_battery\"\n    - \"binary_sensor.door_open\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_eraycetinay_lock/#variables","title":"Variables","text":"Variable Example Default Required Explanation ulm_custom_card_eraycetinay_lock_tap_control true false no Lock/Unlock on tap action ulm_custom_card_eraycetinay_lock_only_open true false no Only use the card to open the door (always sends lock.open on tap) ulm_custom_card_eraycetinay_lock_battery_level sensor.door_battery no Displays a warning when the battery is low. ulm_custom_card_eraycetinay_lock_battery_warning 25 20 no At what battery percentage should the low battery warning appear. ulm_custom_card_eraycetinay_lock_battery_warning_low 10 5 no At what battery percentage should the very low battery warning appear. ulm_custom_card_eraycetinay_lock_door_open binary_sensor.door_open no Displays a warning when the door is lock but the door is still open. ulm_custom_card_eraycetinay_lock_battery_sensor_binary true false no Set to true if using a binary battery sensor. Will ignore battery_warning percentage settings ulm_custom_card_eraycetinay_lock_battery_sensor_binary_low_state off on no Set whether the binary sensor turns to on or off when in low state Template Code custom_card_eraycetinay_lock.yaml<pre><code>---\ncustom_card_eraycetinay_lock:\n  template:\n    - \"icon_info_bg\"\n    - \"ulm_translation_engine\"\n    - \"custom_card_eraycetinay_lock_language_variables\"\n  variables:\n    ulm_custom_card_eraycetinay_lock_battery_warning: 20\n    ulm_custom_card_eraycetinay_lock_battery_warning_low: 5\n    ulm_custom_card_eraycetinay_lock_battery_sensor_binary: false\n    ulm_custom_card_eraycetinay_lock_battery_sensor_binary_low_state: \"on\"\n    ulm_custom_card_eraycetinay_lock_only_open: false\n  tap_action:\n    action: |\n      [[[\n        return variables.ulm_custom_card_eraycetinay_lock_tap_control ? \"perform-action\" : \"more-info\";\n      ]]]\n    # only related with perform-action\n    perform_action: |\n      [[[\n        if(variables.ulm_custom_card_eraycetinay_lock_tap_control){\n          if(variables.ulm_custom_card_eraycetinay_lock_only_open){\n            return \"lock.open\";\n          } else {\n            if (entity.state == \"locked\"){\n                return \"lock.unlock\";\n            } else if (entity.state == \"unlocked\"){\n              return \"lock.lock\";\n            }\n          }\n        }\n      ]]]\n    # only related with perform-action\n    target:\n      entity_id: |\n        [[[ return entity.entity_id; ]]]\n  show_label: true\n  show_name: true\n  triggers_update:\n    - \"[[[ return entity.entity_id; ]]]\"\n  label: \"[[[ return variables.ulm_translation_state ]]]\"\n  state:\n    - operator: \"template\"\n      value: |\n        [[[ return entity.state == (\"unlocked\" || \"open\" || \"opened\"); ]]]\n      styles:\n        icon:\n          - color: \"rgba(var(--color-yellow),1)\"\n        img_cell:\n          - background-color: \"rgba(var(--color-yellow), 0.2)\"\n    - operator: \"template\"\n      value: |\n        [[[ return entity.state == \"locked\" || \"closed\"; ]]]\n      styles:\n        icon:\n          - color: \"rgba(var(--color-green),1)\"\n        img_cell:\n          - background-color: \"rgba(var(--color-green), 0.2)\"\n  styles:\n    icon:\n      - color: \"rgba(var(--color-theme),0.2)\"\n    img_cell:\n      - background-color: \"rgba(var(--color-theme),0.05)\"\n      - border-radius: \"50%\"\n      - place-self: \"center\"\n      - width: \"42px\"\n      - height: \"42px\"\n    grid:\n      - position: \"relative\"\n    custom_fields:\n      notification_locked_and_opened:\n        - border-radius: \"50%\"\n        - position: \"absolute\"\n        - left: \"28px\"\n        - top: \"-6px\"\n        - height: \"16px\"\n        - width: \"16px\"\n        - border: \"2px solid var(--card-background-color)\"\n        - font-size: \"12px\"\n        - line-height: \"14px\"\n        - background-color: \"[[[ return 'rgba(var(--color-red),1)'; ]]]\"\n      notification_battery:\n        - border-radius: \"50%\"\n        - position: \"absolute\"\n        - left: \"-6px\"\n        - top: \"-6px\"\n        - height: \"16px\"\n        - width: \"16px\"\n        - border: \"2px solid var(--card-background-color)\"\n        - font-size: \"12px\"\n        - line-height: \"14px\"\n        - background-color: |\n            [[[\n              if (variables.ulm_custom_card_eraycetinay_lock_battery_level !== undefined) {\n                if (variables.ulm_custom_card_eraycetinay_lock_battery_sensor_binary) {\n                  if (states[variables.ulm_custom_card_eraycetinay_lock_battery_level].state == variables.ulm_custom_card_eraycetinay_lock_battery_sensor_binary_low_state) {\n                    return \"rgba(var(--color-red),1)\";\n                  }\n                } else {\n                  if (states[variables.ulm_custom_card_eraycetinay_lock_battery_level].state &lt;= variables.ulm_custom_card_eraycetinay_lock_battery_warning_low) {\n                    return \"rgba(var(--color-red),1)\";\n                  } else if (states[variables.ulm_custom_card_eraycetinay_lock_battery_level].state &lt;= variables.ulm_custom_card_eraycetinay_lock_battery_warning) {\n                    return \"rgba(var(--color-yellow),1)\";\n                  }\n                }\n              }\n            ]]]\n  custom_fields:\n    notification_locked_and_opened: &gt;\n      [[[\n          if (variables.ulm_custom_card_eraycetinay_lock_door_open !== undefined &amp;&amp; (entity.state === \"locked\" &amp;&amp; states[variables.ulm_custom_card_eraycetinay_lock_door_open].state === \"on\")) {\n            return `&lt;span title=\"${variables.ulm_custom_card_eraycetinay_lock_locked_and_opened}\"&gt;&lt;ha-icon icon=\"mdi:door-open\" style=\"width: 12px; height: 12px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;&lt;/span&gt;`;\n          }\n      ]]]\n    notification_battery: &gt;\n      [[[\n          if (variables.ulm_custom_card_eraycetinay_lock_battery_level !== undefined) {\n            if (variables.ulm_custom_card_eraycetinay_lock_battery_sensor_binary) {\n              if (states[variables.ulm_custom_card_eraycetinay_lock_battery_level].state == variables.ulm_custom_card_eraycetinay_lock_battery_sensor_binary_low_state) {\n                return `&lt;span title=\"${variables.ulm_custom_card_eraycetinay_lock_battery_is_low}\"&gt;\n                          &lt;ha-icon icon=\"mdi:battery-low\" style=\"width: 12px; height: 12px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;\n                        &lt;/span&gt;`;\n              }\n            } else {\n              if (variables.ulm_custom_card_eraycetinay_lock_battery_warning &gt;= states[variables.ulm_custom_card_eraycetinay_lock_battery_level].state) {\n                return `&lt;span title=\"${variables.ulm_custom_card_eraycetinay_lock_battery_is_at} ${states[variables.ulm_custom_card_eraycetinay_lock_battery_level].state}%\"&gt;\n                          &lt;ha-icon icon=\"mdi:battery-low\" style=\"width: 12px; height: 12px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;\n                        &lt;/span&gt;`;\n              }\n            }\n          }\n      ]]]\n</code></pre>"},{"location":"usage/custom_cards/custom_card_esh_room/","title":"Custom Card Room","text":""},{"location":"usage/custom_cards/custom_card_esh_room/#custom-card-room","title":"Custom Card \"Room\"","text":""},{"location":"usage/custom_cards/custom_card_esh_room/#credits","title":"Credits","text":"<ul> <li>Authors:<ul> <li>Everything Smart Home - 2022</li> <li>mpeterson</li> <li>rensknoors</li> <li>staegerino</li> </ul> </li> <li>Full credit to user bms on the forum, they created the design and base of it in full, EverythingSmartHome put it into a PR as the basis</li> <li>beasthouse and basbruss on the EverythingSmartHome discord channel for emoji/humidity customization</li> <li>mpeterson added support for a switch to control climate and also to remove the need to have an entity associated</li> <li>staegerino added support for a switch to control covers</li> <li>Version: 2.2.1</li> </ul>"},{"location":"usage/custom_cards/custom_card_esh_room/#changelog","title":"Changelog","text":"1.0.0 Initial release  2.0.0 Breaking changes! This change introduces two variables to allow the display of the card with no buttons, one for light, one for climate or both for light and climate. It also now allows the use of no entity at all.  2.0.1 Fixes text overflow issue over the climate button.  2.1.0 - It now uses the `ulm_actions_card` template, which allows the usage of the popups wherever custom actions are set as `popup`. - Allow overflowing label and text to the climate button area whenever there is no climate button.  2.1.1 Add support for the new popup framework while maintaining backwards compatibility with the old one.  2.2.0 Introduces a new variable that lets you set the card background to the color of a light entity.  2.2.1 <p>Add support for cover </p>"},{"location":"usage/custom_cards/custom_card_esh_room/#description","title":"Description","text":"<p>This is an alternative room card to the standard one that is more rectangular than square.</p>"},{"location":"usage/custom_cards/custom_card_esh_room/#variables","title":"Variables","text":"Variable Default Required Notes entity No The entity to represent on the room icon Name Yes Name of the room to display icon No The icon to show tap_action No The action to perform when tapping label No The label to display information, this can be a template or static text ulm_custom_card_esh_room_light_entity No The entity to use for the light button ulm_custom_card_esh_room_climate_entity No The entity to use for the climate button ulm_custom_card_esh_room_cover_entity No The entity to use for the cover button ulm_card_esh_room_light_icon_on No Customize the light ON icon ulm_card_esh_room_light_icon_off No Customize the light OFF icon ulm_card_light_enable_popup <code>false</code> No Enable <code>popup_light</code> ulm_card_thermostat_enable_popup <code>false</code> No Enable <code>popup_thermostat</code> ulm_card_dynamic_color <code>false</code> No Enables dynamic background color (requires <code>ulm_custom_card_esh_room_light_entity</code>)"},{"location":"usage/custom_cards/custom_card_esh_room/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template:\n    - card_esh_room\n    - yellow_on\n  name: Bathroom\n  entity: light.bathroom_lights\n  icon: mdi:bathtub\n  tap_action:\n    action: navigate\n    navigation_path: \"bathroom\"\n  variables:\n    ulm_custom_card_esh_room_light_entity: light.bathroom_lights\n    ulm_custom_card_esh_room_climate_entity: climate.bathroom\n  label: '[[[ return states[\"sensor.room_temperature\"].state + \"\u00b0C\" ]]]'\n</code></pre>"},{"location":"usage/custom_cards/custom_card_esh_room/#customizations","title":"Customizations","text":"<p>To add both temperature and humidity (as shown below) to the card, replace the label section with this code: </p> <pre><code>label: &gt;\n  [[[\n    return \"\ud83c\udf21\ufe0f \" + states['sensor.temperature'].state + \" \u00b0C\" + \" \ud83d\udca7 \" + states['sensor.humidity'].state + \" %\"\n  ]]]\n</code></pre> <p>You can also replace \ud83c\udf21\ufe0f and \ud83d\udca7 with any desired Emoji, and sensor.room_temperature/sensor.room_humidity to match any of your HA entities you would like to be displayed. Ensure that the correct units of measurement are also updated (or removed) to match your custom entities. In this example they are \u00b0C and %.</p>"},{"location":"usage/custom_cards/custom_card_esh_room/#template-code","title":"Template code","text":"Template Code custom_card_esh_room.yaml<pre><code>---\ncard_esh_room:\n  tap_action:\n    action: \"more-info\"\n  color: \"var(--google-grey-500)\"\n  show_icon: true\n  show_name: true\n  show_label: true\n  template:\n    - \"ulm_translation_engine\"\n  size: \"20px\"\n  variables:\n    ulm_custom_card_esh_room_light_entity: null\n    ulm_custom_card_esh_room_climate_entity: null\n    ulm_custom_card_esh_room_cover_entity: null\n    ulm_card_thermostat_enable_popup: false\n    ulm_card_light_enable_popup: false\n    ulm_card_cover_popup: false\n    ulm_card_dynamic_color: false\n    ulm_card_esh_room_light_icon_on: \"mdi:lightbulb\"\n    ulm_card_esh_room_light_icon_off: \"mdi:lightbulb-off\"\n    ulm_card_esh_room_cover_icon_open: \"mdi:blinds-open\"\n    ulm_card_esh_room_cover_icon_closed: \"mdi:roller-shade-closed\"\n    ulm_card_esh_room_cover_icon_closing: \"mdi:blinds\"\n    ulm_card_esh_room_cover_icon_opening: \"mdi:blinds\"\n  label: &gt;-\n    [[[\n      var label_entity = variables.ulm_custom_card_esh_room_light_entity\n        ? states[variables.ulm_custom_card_esh_room_light_entity]\n        : entity;\n      if (!label_entity) {\n        return \"&lt;br /&gt;\";\n      } else if (label_entity.state == \"on\") {\n        var bri = Math.round(label_entity.attributes.brightness / 2.55);\n        return (bri ? bri + \"%\" : variables.ulm_translation_state);\n      } else {\n        return variables.ulm_translation_state;\n      }\n    ]]]\n  styles:\n    card:\n      - border-radius: \"20px\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n      - background-color: &gt;-\n          [[[\n            if (variables.ulm_custom_card_esh_room_light_entity) {\n              var color = states[variables.ulm_custom_card_esh_room_light_entity].attributes.rgb_color;\n              if (states[variables.ulm_custom_card_esh_room_light_entity].state == \"on\") {\n                if (color &amp;&amp; variables.ulm_card_dynamic_color) {\n                  return 'rgba(' + color + ', 0.2)';\n                }\n                return 'rgba(var(--color-background-yellow), 0.2)';\n              }\n            }\n            return 'var(--ha-card-background, var(--card-background-color, white))';\n          ]]]\n    grid:\n      - grid-template-areas: &gt;-\n          [[[\n            if (variables.ulm_custom_card_esh_room_light_entity &amp;&amp; variables.ulm_custom_card_esh_room_cover_entity) {\n              return \"'i light' 'n cover' 'l cover'\";\n            } else if (variables.ulm_custom_card_esh_room_light_entity &amp;&amp; variables.ulm_custom_card_esh_room_climate_entity) {\n              return \"'i light' 'n climate' 'l climate'\";\n            } else if (variables.ulm_custom_card_esh_room_light_entity) {\n              return \"'i light' 'n n' 'l l'\";\n            } else if (variables.ulm_custom_card_esh_room_climate_entity) {\n              return \"'i .' 'n climate' 'l climate'\";\n            } else if (variables.ulm_custom_card_esh_room_cover_entity) {\n              return \"'i cover' 'n n' 'l l'\";\n            } else {\n              return \"'i .' 'n n' 'l l'\";\n            }\n          ]]]\n      - grid-template-columns: \"1fr 1fr\"\n      - grid-template-rows: \"min-content\"\n    icon:\n      - filter: &gt;-\n          [[[\n            if (variables.ulm_custom_card_esh_room_light_entity\n                &amp;&amp; states[variables.ulm_custom_card_esh_room_light_entity].state == \"on\"\n                &amp;&amp; variables.ulm_card_dynamic_color) {\n              return \"contrast(0.6) saturate(1.7)\";\n            }\n          ]]]\n      - color: &gt;-\n          [[[\n            if (variables.ulm_custom_card_esh_room_light_entity) {\n              var color = states[variables.ulm_custom_card_esh_room_light_entity].attributes.rgb_color;\n              if (states[variables.ulm_custom_card_esh_room_light_entity].state == \"on\") {\n                if (color &amp;&amp; variables.ulm_card_dynamic_color) {\n                  return 'rgba(' + color + ', 1)';\n                }\n                return 'rgba(var(--color-yellow), 1)';\n              }\n            }\n            return 'rgba(var(--color-theme), 0.2)';\n          ]]]\n    img_cell:\n      - border-radius: \"50%\"\n      - place-self: \"flex-start\"\n      - width: \"42px\"\n      - height: \"42px\"\n      - margin-left: \"12px\"\n      - background-color: &gt;-\n          [[[\n            if (variables.ulm_custom_card_esh_room_light_entity) {\n              var color = states[variables.ulm_custom_card_esh_room_light_entity].attributes.rgb_color;\n              if (states[variables.ulm_custom_card_esh_room_light_entity].state == \"on\") {\n                if (color &amp;&amp; variables.ulm_card_dynamic_color) {\n                  return 'rgba(' + color + ', 0.3)';\n                }\n                return 'rgba(var(--color-yellow), 0.2)';\n              }\n            }\n            return 'rgba(var(--color-theme), 0.05)';\n          ]]]\n    name:\n      - align-self: \"end\"\n      - justify-self: \"start\"\n      - font-weight: \"bold\"\n      - font-size: \"14px\"\n      - margin-left: \"12px\"\n      - margin-top: &gt;-\n          [[[\n            if (variables.ulm_custom_card_esh_room_light_entity &amp;&amp; variables.ulm_custom_card_esh_room_climate_entity) {\n              return \"8px\";\n            } else if (variables.ulm_custom_card_esh_room_light_entity) {\n              return \"12px\";\n            } else if (variables.ulm_custom_card_esh_room_climate_entity) {\n              return \"8px\";\n            } else if (variables.ulm_custom_card_esh_room_cover_entity) {\n              return \"8px\";\n            } else {\n              return \"12px\";\n            }\n          ]]]\n      - max-width: &gt;-\n          [[[\n            if (variables.ulm_custom_card_esh_room_light_entity &amp;&amp; variables.ulm_custom_card_esh_room_climate_entity) {\n              return \"85%\";\n            } else if (variables.ulm_custom_card_esh_room_light_entity) {\n              return \"100%\";\n            } else if (variables.ulm_custom_card_esh_room_climate_entity) {\n              return \"85%\";\n            } else if (variables.ulm_custom_card_esh_room_cover_entity) {\n              return \"85%\";\n            } else {\n              return \"100%\";\n            }\n          ]]]\n      - color: &gt;-\n          [[[\n            if (variables.ulm_custom_card_esh_room_light_entity) {\n              var color = states[variables.ulm_custom_card_esh_room_light_entity].attributes.rgb_color;\n              if (states[variables.ulm_custom_card_esh_room_light_entity].state == \"on\") {\n                if (color &amp;&amp; variables.ulm_card_dynamic_color) {\n                  return 'rgba(' + color + ', 1)';\n                }\n                return 'rgba(var(color-yellow-text), 1)';\n              }\n              return 'rgba(var(--color-theme), 0.6)';\n            }\n            return 'rgba(var(--color-theme), 0.6)';\n          ]]]\n      - filter: &gt;-\n          [[[\n            if (variables.ulm_custom_card_esh_room_light_entity\n                &amp;&amp; states[variables.ulm_custom_card_esh_room_light_entity].state == \"on\"\n                &amp;&amp; variables.ulm_card_dynamic_color) {\n              return \"contrast(0.6) saturate(1.7)\";\n            }\n          ]]]\n    label:\n      - justify-self: \"start\"\n      - align-self: \"start\"\n      - font-weight: \"bolder\"\n      - font-size: \"12px\"\n      - filter: \"opacity(40%)\"\n      - margin-left: \"12px\"\n      - margin-bottom: &gt;-\n          [[[\n            if (variables.ulm_custom_card_esh_room_light_entity &amp;&amp; variables.ulm_custom_card_esh_room_climate_entity) {\n              return \"0px\";\n            } else if (variables.ulm_custom_card_esh_room_light_entity) {\n              return \"3px\";\n            } else if (variables.ulm_custom_card_esh_room_climate_entity) {\n              return \"0px\";\n            } else if (variables.ulm_custom_card_esh_room_cover_entity) {\n              return \"0px\";\n            } else {\n              return \"3px\";\n            }\n          ]]]\n      - max-width: &gt;-\n          [[[\n            if (variables.ulm_custom_card_esh_room_light_entity &amp;&amp; variables.ulm_custom_card_esh_room_climate_entity) {\n              return \"85%\";\n            } else if (variables.ulm_custom_card_esh_room_light_entity) {\n              return \"100%\";\n            } else if (variables.ulm_custom_card_esh_room_climate_entity) {\n              return \"85%\";\n            } else if (variables.ulm_custom_card_esh_room_cover_entity) {\n              return \"85%\";\n            } else {\n              return \"100%\";\n            }\n          ]]]\n    state:\n      - justify-self: \"start\"\n      - align-self: \"start\"\n      - font-weight: \"bolder\"\n      - font-size: \"12px\"\n      - filter: \"opacity(40%)\"\n      - margin-left: \"12px\"\n    custom_fields:\n      light:\n        - display: &gt;\n            [[[\n              if (variables.ulm_custom_card_esh_room_light_entity) {\n                  return \"block\";\n              } else {\n                  return \"none\";\n              }\n            ]]]\n      climate:\n        - display: &gt;\n            [[[\n              if (variables.ulm_custom_card_esh_room_climate_entity) {\n                return \"block\";\n              } else {\n                return \"none\";\n              }\n            ]]]\n      cover:\n        - display: &gt;\n            [[[\n              if (variables.ulm_custom_card_esh_room_cover_entity) {\n                return \"block\";\n              } else {\n                return \"none\";\n              }\n            ]]]\n  custom_fields:\n    light:\n      card:\n        entity: \"[[[ return variables.ulm_custom_card_esh_room_light_entity ]]]\"\n        name: \"[[[ return name ]]]\"\n        state:\n          - value: \"on\"\n            icon: \"[[[ return variables.ulm_card_esh_room_light_icon_on; ]]]\"\n            styles:\n              icon:\n                - color: \"rgba(var(--color-yellow), 1)\"\n              img_cell:\n                - background-color: &gt;-\n                    [[[\n                      if (variables.ulm_custom_card_esh_room_light_entity) {\n                        var color = states[variables.ulm_custom_card_esh_room_light_entity].attributes.rgb_color;\n                        if (color &amp;&amp; variables.ulm_card_dynamic_color) {\n                          return 'rgba(' + color + ', 0.3)';\n                        }\n                      }\n                      return 'rgba(var(--color-yellow), 0.2)';\n                    ]]]\n          - value: \"off\"\n            icon: \"[[[ return variables.ulm_card_esh_room_light_icon_off; ]]]\"\n        type: \"custom:button-card\"\n        template:\n          - \"widget_icon\"\n          - \"ulm_actions_card\"\n          - \"ulm_custom_actions\"\n        variables: &gt;\n          [[[\n            let vars = {};\n            vars.ulm_card_light_enable_popup = variables.ulm_card_light_enable_popup;\n            if (variables.ulm_card_light_enable_popup) {\n              vars.ulm_custom_popup = {\n                'template': 'popup_light_brightness',\n                'popup_variables': {\n                  'ulm_popup_light_entity': variables.ulm_custom_card_esh_room_light_entity,\n                }\n              };\n            }\n            return vars;\n          ]]]\n    climate:\n      card:\n        entity: \"[[[ return variables.ulm_custom_card_esh_room_climate_entity ]]]\"\n        name: \"[[[ return name ]]]\"\n        state:\n          - value: \"auto\"\n            icon: \"mdi:autorenew\"\n            styles:\n              icon:\n                - color: \"rgba(var(--color-green),1)\"\n              img_cell:\n                - background-color: \"rgba(var(--color-green), 0.2)\"\n          - value: \"cool\"\n            icon: \"mdi:snowflake\"\n            styles:\n              icon:\n                - color: \"rgba(var(--color-blue),1)\"\n              img_cell:\n                - background-color: \"rgba(var(--color-blue), 0.2)\"\n          - value: \"heat\"\n            icon: \"mdi:fire\"\n            styles:\n              icon:\n                - color: \"rgba(var(--color-red),1)\"\n              img_cell:\n                - background-color: \"rgba(var(--color-red), 0.2)\"\n          - value: \"dry\"\n            icon: \"mdi:water\"\n            styles:\n              icon:\n                - color: \"rgba(var(--color-yellow),1)\"\n              img_cell:\n                - background-color: \"rgba(var(--color-yellow), 0.2)\"\n          - value: \"heat_cool\"\n            icon: \"mdi:sun-snowflake\"\n            styles:\n              icon:\n                - color: \"rgba(var(--color-purple),1)\"\n              img_cell:\n                - background-color: \"rgba(var(--color-purple), 0.2)\"\n          - value: \"fan_only\"\n            icon: \"mdi:fan\"\n            styles:\n              icon:\n                - color: \"rgba(var(--color-green),1)\"\n              img_cell:\n                - background-color: \"rgba(var(--color-green), 0.2)\"\n          - value: \"off\"\n            icon: \"mdi:snowflake-off\"\n        type: \"custom:button-card\"\n        styles:\n          card:\n            - margin-top: \"5px\"\n        template:\n          - \"widget_icon\"\n          - \"ulm_actions_card\"\n          - \"ulm_custom_actions\"\n        variables: &gt;\n          [[[\n            let vars = {};\n            vars.ulm_card_thermostat_enable_popup = variables.ulm_card_light_enable_popup;\n            if (variables.ulm_card_thermostat_enable_popup) {\n              vars.ulm_custom_popup = {\n                'template': 'popup_thermostat_temperature',\n                'popup_variables': {\n                  'ulm_popup_thermostat_entity': variables.ulm_custom_card_esh_room_climate_entity,\n                }\n              };\n            }\n            return vars;\n          ]]]\n    cover:\n      card:\n        entity: \"[[[ return variables.ulm_custom_card_esh_room_cover_entity ]]]\"\n        name: \"[[[ return name ]]]\"\n        state:\n          - value: \"open\"\n            icon: \"[[[ return variables.ulm_card_esh_room_cover_icon_open; ]]]\"\n          - value: \"closing\"\n            icon: \"[[[ return variables.ulm_card_esh_room_cover_icon_closing; ]]]\"\n          - value: \"opening\"\n            icon: \"[[[ return variables.ulm_card_esh_room_cover_icon_opening; ]]]\"\n          - value: \"closed\"\n            icon: \"[[[ return variables.ulm_card_esh_room_cover_icon_closed; ]]]\"\n            styles:\n              icon:\n                - color: \"rgba(var(--color-blue),1)\"\n              img_cell:\n                - background-color: \"rgba(var(--color-blue), 0.2)\"\n        type: \"custom:button-card\"\n        styles:\n          card:\n            - margin-top: \"5px\"\n        template:\n          - \"widget_icon\"\n          - \"ulm_actions_card\"\n          - \"ulm_custom_actions\"\n        variables: &gt;\n          [[[\n            let vars = {};\n            vars.ulm_card_cover_popup = variables.ulm_card_light_enable_popup;\n            if (variables.ulm_card_cover_popup) {\n              vars.ulm_custom_popup = {\n                'template': 'popup_cover',\n                'popup_variables': {\n                  'ulm_popup_cover_entity': variables.ulm_custom_card_esh_room_cover_entity,\n                }\n              };\n            }\n            return vars;\n          ]]]\n</code></pre>"},{"location":"usage/custom_cards/custom_card_esh_welcome/","title":"Custom Card Welcome Navigation","text":""},{"location":"usage/custom_cards/custom_card_esh_welcome/#custom-card-welcome-navigation","title":"Custom Card \"Welcome Navigation\"","text":""},{"location":"usage/custom_cards/custom_card_esh_welcome/#credits","title":"Credits","text":"<ul> <li>Author: Everything Smart Home - 2022</li> <li>Credits to the welcome scenes card as the basis</li> <li>Version: 1.1.0</li> </ul>"},{"location":"usage/custom_cards/custom_card_esh_welcome/#changelog","title":"Changelog","text":"1.1.0 <ul> Contributor: Sisimomo - 2022-06-12 <li>Now support from 0-5 navigation pill.</li> <li>Added dynamic nav pill size.</li> <li>Code refactoring to fit framework structure.</li> <li>Code clean up.</li> </ul> 1.0.0 Initial release"},{"location":"usage/custom_cards/custom_card_esh_welcome/#description","title":"Description","text":"<p>This is a welcome card based on the welcome scenes card but replaces the scenes for page navigation instead.</p>"},{"location":"usage/custom_cards/custom_card_esh_welcome/#variables","title":"Variables","text":"Variable Default Required Notes ulm_card_esh_welcome_collapse No Enables the collapse function.  requires an <code>input_boolean</code> to track the state ulm_weather Yes This is your weather provider.  Example: <code>weather.your_provider</code> entity_ Yes Support almost all types of entities  Scenes do always show as off icon_ Yes The icon to show name_ Yes The name to show color_ Yes Color of the icon  Can choose between: <code>blue</code>, <code>red</code>, <code>green</code>, <code>yellow</code>, <code>pink</code>, <code>purple</code> nav_ Yes The page/view to navigate to"},{"location":"usage/custom_cards/custom_card_esh_welcome/#collapse","title":"Collapse","text":"<p>Note</p> <p>This feature is fully optional. It requires some more manual configuration! You need to create a <code>input_boolean</code> in HA to track the state. See Docs. Furthermore, you need to add the <code>input_boolean</code> to the variable <code>ulm_card_esh_welcome_collapse</code> and to either the <code>entity</code> or <code>triggers_update</code> to make sure it directly refreshes the state.</p> <p>Warning</p> <p>Do not use <code>triggers_update: \"all\"</code>! This will lead to unwanted behavior with the random colors generator.</p>"},{"location":"usage/custom_cards/custom_card_esh_welcome/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: \"card_esh_welcome\"\n  triggers_update: \"input_boolean.welcome_toggle\"\n  variables:\n    ulm_card_esh_welcome_collapse: input_boolean.welcome_toggle\n    ulm_weather: \"weather.your_weather\"\n    entity_1:\n      nav: \"house\"\n      icon: \"mdi:home\"\n      name: \"House\"\n      color: \"blue\"\n    entity_2:\n      nav: \"lights\"\n      icon: \"mdi:lightbulb\"\n      name: \"Lights\"\n      color: \"yellow\"\n    entity_3:\n      nav: \"security\"\n      icon: \"mdi:shield\"\n      name: Secure\n      color: \"green\"\n    entity_4:\n      nav: \"network\"\n      icon: \"mdi:nas\"\n      name: Lab\n      color: \"purple\"\n    entity_5:\n      nav: \"network\"\n      icon: \"mdi:flask\"\n      name: Lab\n      color: \"red\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_esh_welcome/#template-code","title":"Template code","text":"Template Code custom_card_esh_welcome.yaml<pre><code>---\ncard_esh_welcome:\n  template: \"ulm_language_variables\"\n  variables:\n    ulm_weather: \"[[[ return variables.ulm_weather]]]\"\n    entity_1:\n      color: &gt;\n        [[[\n          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];\n          var color = colors[Math.floor(Math.random() * colors.length)];\n          return color;\n        ]]]\n    entity_2:\n      color: &gt;\n        [[[\n          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];\n          var color = colors[Math.floor(Math.random() * colors.length)];\n          return color;\n        ]]]\n    entity_3:\n      color: &gt;\n        [[[\n          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];\n          var color = colors[Math.floor(Math.random() * colors.length)];\n          return color;\n        ]]]\n    entity_4:\n      color: &gt;\n        [[[\n          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];\n          var color = colors[Math.floor(Math.random() * colors.length)];\n          return color;\n        ]]]\n    entity_5:\n      color: &gt;\n        [[[\n          var colors = ['yellow', 'blue', 'red', 'purple','green', 'pink'];\n          var color = colors[Math.floor(Math.random() * colors.length)];\n          return color;\n        ]]]\n  show_icon: false\n  show_label: true\n  show_name: false\n  styles:\n    grid:\n      - grid-template-areas: &gt;\n          [[[\n            if(variables.ulm_card_esh_welcome_collapse &amp;&amp; states[variables.ulm_card_esh_welcome_collapse].state == 'on'){\n              return \"\\'item1\\' \\'item2\\' \";\n            } else {\n              return \"\\'item1\\' \\'item2\\' \\'item3\\'\";\n            }\n          ]]]\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content min-content\"\n      - row-gap: \"0px\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"10px\"\n      - cursor: \"default\"\n      - \"--mdc-ripple-press-opacity\": 0   # prevent click animation\n    custom_fields:\n      item3:\n        - display: &gt;\n            [[[\n              if(variables.ulm_card_esh_welcome_collapse &amp;&amp; states[variables.ulm_card_esh_welcome_collapse].state == 'on'){\n                return \"none\";\n              } else {\n                return \"block\";\n              }\n            ]]]\n      item4:\n        - display: &gt;\n            [[[\n              if(variables.ulm_card_esh_welcome_collapse &amp;&amp; states[variables.ulm_card_esh_welcome_collapse].state == 'on'){\n                return \"none\";\n              } else {\n                return \"block\";\n              }\n            ]]]\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        template: \"card_esh_welcome_topbar\"\n        variables:\n          ulm_card_esh_welcome_collapse: \"[[[ return variables.ulm_card_esh_welcome_collapse ]]]\"\n          ulm_weather: \"[[[ return variables.ulm_weather]]]\"\n        styles:\n          card:\n            - border-radius: \"none\"\n            - box-shadow: \"none\"\n            - padding: \"4px\"\n            - margin-left: \"relative\"\n            - cursor: \"default\"\n            - \"--mdc-ripple-press-opacity\": 0   # prevent click animation\n    item2:\n      card:\n        type: \"custom:button-card\"\n        show_icon: false\n        show_label: false\n        show_name: true\n        show_entity_picture: false\n        name: |\n          [[[\n            var today = new Date();\n            var time = today.getHours()\n            let welcome = '';\n            if (time &gt;= '18'){\n              welcome = variables.ulm_evening;\n            } else if (time &gt;= '12'){\n              welcome = variables.ulm_afternoon;\n            } else if (time &gt;= '5'){\n              welcome = variables.ulm_morning;\n            } else {\n              welcome = variables.ulm_hello;\n            }\n            return welcome + ', ' + '   &lt;br&gt;' + user.name + '!';\n          ]]]\n        styles:\n          name:\n            - align-self: \"start\"\n            - justify-self: \"start\"\n            - font-weight: \"bold\"\n            - font-size: \"24px\"\n            - margin-left: \"16px\"\n          grid:\n            - grid-template-areas: \"'i n' 'i l'\"\n            - grid-template-columns: \"min-content auto\"\n            - grid-template-rows: \"min-content min-content\"\n            - text-align: \"start\"\n          card:\n            - box-shadow: \"none\"\n            - padding-bottom: \"8px\"\n            - cursor: \"default\"\n            - \"--mdc-ripple-press-opacity\": 0   # prevent click animation\n    item3:\n      card:\n        type: \"custom:button-card\"\n        template: \"card_esh_welcome_nav\"\n        styles:\n          card:\n            - border-radius: \"none\"\n            - box-shadow: \"none\"\n            - padding: \"4px\"\n            - cursor: \"default\"\n            - \"--mdc-ripple-press-opacity\": 0   # prevent click animation\n        variables:\n          entity_1: \"[[[ return variables.entity_1 ]]]\"\n          entity_2: \"[[[ return variables.entity_2 ]]]\"\n          entity_3: \"[[[ return variables.entity_3 ]]]\"\n          entity_4: \"[[[ return variables.entity_4 ]]]\"\n          entity_5: \"[[[ return variables.entity_5 ]]]\"\n\ncard_esh_welcome_title:\n  tap_action:\n    action: \"none\"\n  show_icon: false\n  show_label: true\n  show_name: true\n  styles:\n    label:\n      - justify-self: \"start\"\n      - font-weight: \"bold\"\n      - font-size: \"1rem\"\n      - opacity: \"0.4\"\n    name:\n      - justify-self: \"start\"\n      - font-weight: \"bold\"\n      - font-size: \"20px\"\n    grid:\n      - grid-template-areas: \"'n' 'l'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content min-content\"\n    card:\n      - background-color: \"rgba(0,0,0,0)\"\n      - box-shadow: \"none\"\n      - height: \"auto\"\n      - width: \"auto\"\n      - margin-top: \"-10px\"\n      - margin-left: \"16px\"\n      - margin-bottom: \"-15px\"\n      - cursor: \"default\"\n      - \"--mdc-ripple-press-opacity\": 0   # prevent click animation\n\ncard_esh_welcome_nav:\n  show_icon: false\n  show_name: true\n  show_label: false\n  styles:\n    grid:\n      - grid-template-areas: |\n          [[[\n            return \"'\" + [(variables.entity_1?.nav ? 'item1' : ''),\n                        (variables.entity_2?.nav ? 'item2' : ''),\n                        (variables.entity_3?.nav ? 'item3' : ''),\n                        (variables.entity_4?.nav ? 'item4' : ''),\n                        (variables.entity_5?.nav ? 'item5' : '')].join(' ') + \"'\";\n          ]]]\n      - grid-template-columns: |\n          [[[\n            return [(variables.entity_1?.nav ? '1fr' : ''),\n                    (variables.entity_2?.nav ? '1fr' : ''),\n                    (variables.entity_3?.nav ? '1fr' : ''),\n                    (variables.entity_4?.nav ? '1fr' : ''),\n                    (variables.entity_5?.nav ? '1fr' : '')].join(' ');\n          ]]]\n      - grid-template-rows: \"min-content\"\n      - justify-items: \"center\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n      - overflow: \"visible\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        template: \"card_esh_welcome_pill_nav\"\n        variables:\n          number_of_nav_pills: |\n            [[[\n              return [variables.entity_1?.nav,\n                      variables.entity_2?.nav,\n                      variables.entity_3?.nav,\n                      variables.entity_4?.nav,\n                      variables.entity_5?.nav].filter(el =&gt; el !== undefined).length;\n            ]]]\n          entity: \"[[[ return variables.entity_1; ]]]\"\n    item2:\n      card:\n        type: \"custom:button-card\"\n        template: \"card_esh_welcome_pill_nav\"\n        variables:\n          number_of_nav_pills: |\n            [[[\n              return [variables.entity_1?.nav,\n                      variables.entity_2?.nav,\n                      variables.entity_3?.nav,\n                      variables.entity_4?.nav,\n                      variables.entity_5?.nav].filter(el =&gt; el !== undefined).length;\n            ]]]\n          entity: \"[[[ return variables.entity_2; ]]]\"\n    item3:\n      card:\n        type: \"custom:button-card\"\n        template: \"card_esh_welcome_pill_nav\"\n        variables:\n          number_of_nav_pills: |\n            [[[\n              return [variables.entity_1?.nav,\n                      variables.entity_2?.nav,\n                      variables.entity_3?.nav,\n                      variables.entity_4?.nav,\n                      variables.entity_5?.nav].filter(el =&gt; el !== undefined).length;\n            ]]]\n          entity: \"[[[ return variables.entity_3; ]]]\"\n    item4:\n      card:\n        type: \"custom:button-card\"\n        template: \"card_esh_welcome_pill_nav\"\n        variables:\n          number_of_nav_pills: |\n            [[[\n              return [variables.entity_1?.nav,\n                      variables.entity_2?.nav,\n                      variables.entity_3?.nav,\n                      variables.entity_4?.nav,\n                      variables.entity_5?.nav].filter(el =&gt; el !== undefined).length;\n            ]]]\n          entity: \"[[[ return variables.entity_4; ]]]\"\n    item5:\n      card:\n        type: \"custom:button-card\"\n        template: \"card_esh_welcome_pill_nav\"\n        variables:\n          number_of_nav_pills: |\n            [[[\n              return [variables.entity_1?.nav,\n                      variables.entity_2?.nav,\n                      variables.entity_3?.nav,\n                      variables.entity_4?.nav,\n                      variables.entity_5?.nav].filter(el =&gt; el !== undefined).length;\n            ]]]\n          entity: \"[[[ return variables.entity_5; ]]]\"\n\ncard_esh_welcome_pill_nav:\n  tap_action:\n    action: \"navigate\"\n    navigation_path: \"[[[ return variables.entity?.nav; ]]]\"\n  show_icon: false\n  show_label: false\n  show_name: false\n  state:\n    - operator: \"template\"\n      value: \"[[[ return !variables.entity?.nav; ]]]\"\n      styles:\n        card:\n          - display: \"none\"\n  styles:\n    grid:\n      - grid-template-areas: \"'item1' 'item2'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"1fr 1fr\"\n      - row-gap: \"12px\"\n      - justify-items: \"center\"\n      - column-gap: \"auto\"\n    card:\n      - border-radius: \"50px\"\n      - place-self: \"center\"\n      - width: \"[[[ return (52 * (1+(5-Math.max(variables.number_of_nav_pills, 3))*0.25)) + 'px'; ]]]\"\n      - height: \"[[[ return (84 * (1+(5-Math.max(variables.number_of_nav_pills, 3))*0.25)) + 'px'; ]]]\"\n      - box-shadow: &gt;\n          [[[\n            if (hass.themes.darkMode){\n              return \"0px 2px 4px 0px rgba(0,0,0,0.80)\";\n            } else {\n              return \"var(--box-shadow)\";\n            }\n          ]]]\n      - \"--mdc-ripple-press-opacity\": 0.12    # allow click animation\n  color: \"var(--google-grey)\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        tap_action:\n          action: \"navigate\"\n          navigation_path: \"[[[ return variables.entity?.nav; ]]]\"\n        show_icon: true\n        show_label: false\n        show_name: false\n        icon: \"[[[ return variables.entity?.icon ]]]\"\n        styles:\n          icon:\n            - color: \"[[[ return `rgba(var(--color-${variables.entity?.color}), 1)`;]]]\"\n            - width: \"[[[ return (20 * (1+(5-Math.max(variables.number_of_nav_pills, 3))*0.25)) + 'px'; ]]]\"\n          img_cell:\n            - background-color: \"[[[ return `rgba(var(--color-${variables.entity?.color}), 0.20)`;]]]\"\n            - border-radius: \"50%\"\n            - width: \"[[[ return (42 * (1+(5-Math.max(variables.number_of_nav_pills, 3))*0.25)) + 'px'; ]]]\"\n            - height: \"[[[ return (42 * (1+(5-Math.max(variables.number_of_nav_pills, 3))*0.25)) + 'px'; ]]]\"\n          grid:\n            - grid-template-areas: \"i\"\n          card:\n            - box-shadow: \"none\"\n            - border-radius: \"50px\"\n            - padding: \"5px\"\n        state:\n          - value: \"on\"\n            styles:\n              card:\n                - overflow: \"visible\"\n                - box-shadow: |\n                    [[[\n                      if (hass.themes.darkMode){\n                        return \"0px 2px 4px 0px rgba(0,0,0,0.80)\";\n                      } else {\n                        return \"var(--box-shadow)\";\n                      }\n                    ]]]\n    item2:\n      card:\n        type: \"custom:button-card\"\n        tap_action:\n          action: \"navigate\"\n          navigation_path: \"[[[ return variables.entity?.nav; ]]]\"\n        show_icon: false\n        show_label: false\n        name: \"[[[ return variables.entity?.name ]]]\"\n        styles:\n          name:\n            - font-weight: \"bold\"\n            - font-size: \"[[[ return (9.5 * (1+(5-Math.max(variables.number_of_nav_pills, 3))*0.25)) + 'px'; ]]]\"\n            - width: \"[[[ return (33 * (1+(5-Math.max(variables.number_of_nav_pills, 3))*0.25)) + 'px'; ]]]\"\n            - padding-bottom: \"7px\"\n          grid:\n            - grid-template-areas: \"n\"\n          card:\n            - box-shadow: \"none\"\n            - padding: \"0px 5px 5px 5px\"\n            - margin-top: \"-5px\"\n            - border-radius: \"50px\"\n\ncard_esh_welcome_topbar:\n  show_icon: false\n  show_label: false\n  show_name: true\n  styles:\n    grid:\n      - grid-template-areas: \"'item1 item2 item3'\"\n      - grid-template-columns: \"1fr 7fr 1fr\"\n      - grid-template-rows: \"min-content\"\n      - justify-items: \"center\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n      - cursor: \"default\"\n      - \"--mdc-ripple-press-opacity\": 0   # prevent click animation\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        template: \"chips\"\n        tap_action:\n          action: \"perform-action\"\n          perform_action: \"input_boolean.toggle\"\n          target:\n            entity_id: \"[[[ return variables.ulm_card_esh_welcome_collapse ]]]\"\n        show_icon: true\n        icon: \"mdi:chevron-up\"\n        entity: \"[[[ return variables.ulm_card_esh_welcome_collapse ]]]\"\n        styles:\n          grid:\n            - grid-template-areas: \"'i'\"\n          card:\n            - box-shadow: &gt;\n                [[[\n                  if (hass.themes.darkMode){\n                    return \"0px 2px 4px 0px rgba(0,0,0,0.80)\";\n                  } else {\n                    return \"var(--box-shadow)\";\n                  }\n                ]]]\n            - visibility: \"[[[ return variables.ulm_card_esh_welcome_collapse ? 'visible' : 'hidden'; ]]]\"\n            - \"--mdc-ripple-press-opacity\": 0.12    # allow click animation\n        state:\n          - value: \"on\"\n            icon: \"mdi:chevron-down\"\n            styles:\n              icon:\n                - color: \"rgb(var(--color-theme))\"\n    item2:\n      card:\n        type: \"custom:button-card\"\n        template: \"chip_weather_date\"\n        variables:\n          ulm_weather: \"[[[ return variables.ulm_weather]]]\"\n        tap_action:\n          action: \"more-info\"\n        entity: \"[[[ return variables.ulm_weather]]]\"\n        styles:\n          card:\n            - width: \"100px\"\n            - box-shadow: &gt;\n                [[[\n                  if (hass.themes.darkMode){\n                    return \"0px 2px 4px 0px rgba(0,0,0,0.80)\";\n                  } else {\n                    return \"var(--box-shadow)\";\n                  }\n                ]]]\n            - \"--mdc-ripple-press-opacity\": 0.12    # allow click animation\n    item3:\n      card:\n        type: \"custom:button-card\"\n        template: \"chip_mdi_icon_only\"\n        variables:\n          ulm_chip_mdi_icon_only_icon: \"mdi:cog-outline\"\n        tap_action:\n          action: \"navigate\"\n          navigation_path: \"/config/dashboard\"\n        styles:\n          card:\n            - align-self: \"end\"\n            - box-shadow: &gt;\n                [[[\n                  if (hass.themes.darkMode){\n                    return \"0px 2px 4px 0px rgba(0,0,0,0.80)\";\n                  } else {\n                    return \"var(--box-shadow)\";\n                  }\n                ]]]\n            - \"--mdc-ripple-press-opacity\": 0.12    # allow click animation\n</code></pre>"},{"location":"usage/custom_cards/custom_card_haven_washer/","title":"Washer/Dryer/Dishwasher Custom-card","text":""},{"location":"usage/custom_cards/custom_card_haven_washer/#custom-card-washer","title":"Custom-card \"Washer\"","text":"<p>Small layout when the washer, dryer or dishwasher is turned off (ulm_custom_card_washer_power === \"off\"). It shows the content of the idle label variable (ulm_custom_card_washer_label_idle)</p> <p></p> <p>When the washer, dryer or dishwasher is turned on the possible (job) stages of machine become visible (In this example the dryer has no different (job) stages so the stages remain closed)</p> <p></p> <p>When the washer, dryer or dishwasher is set to smart control (ulm_custom_card_washer_remote_control === \"true\"), you can start the machine from you app, or you can start it using automation. The buttons will reflect this stage change.</p> <p></p> <p>When you want to start the washer, dryer or dishwasher at a specific time (through automation) you can turn on the timer (press the icon and the ulm_custom_card_washer_delayed_start === \"on\") and set the time to start (use the up and down buttons of click on the time to set ulm_custom_card_washer_delayed_starttime (Time only)). It shows the content of the configuration label variable (ulm_custom_card_washer_label_configuring).</p> <p></p> <p>When the washer, dryer or dishwasher is running you can use the running label variable (ulm_custom_card_washer_label_running) to show the remaining time. The dryer can't be paused so the button is disabled.</p> <p></p> <p>When the dishwasher is running the progress is shown based on the variable (ulm_custom_card_washer_job_progress)</p> <p>!! Attention !!</p> <p>This custom card is build based on a Samsung Washer and Dryer and based on the SmartThings Custom integration (installable using HACS: https://github.com/veista/smartthings). Other washer, dryers or dishwasher could work with this custom card, but might require some work. This card is highly configurable, but for the machine state you might need a template sensors to support the same terminology (run, pause, stop).</p>"},{"location":"usage/custom_cards/custom_card_haven_washer/#credits","title":"Credits","text":"<ul> <li>Author: Cruguah - 2023</li> <li> <p>Version: 1.0.3</p> </li> <li> <p>Thanks to rphlwnk for sharing his code of his washing machine card.</p> </li> <li>Thanks to dougmaitelli for sharing his experience and configuration of his washing machine (LG SmartThinQ).</li> </ul>"},{"location":"usage/custom_cards/custom_card_haven_washer/#changelog","title":"Changelog","text":"1.0.3   Added progressbar support for devices that don't support separated job state  1.0.2   Added an extra variable ulm_custom_card_washer_machine_stop_state to support more washers (LG SmartThinQ) #1268.   Thanks to dougmaitelli for pointing out this issue.  1.0.1   Small bug fix resolving issue #1230.  1.0.0   Initial release."},{"location":"usage/custom_cards/custom_card_haven_washer/#usage","title":"Usage","text":"<p>Example for Samsung SmartThings:</p> <pre><code>- type: \"custom:button-card\"\n  template: \"custom_card_haven_washer\"\n  variables:\n    ulm_custom_card_washer_power: switch.washingmachine_switch\n    ulm_custom_card_washer_remote_control: sensor.washingmachine_remote_control\n    ulm_custom_card_washer_machine_state: sensor.washingmachine_machine_state\n    ulm_custom_card_washer_job_state: sensor.washingmachine_job_state\n    ulm_custom_card_washer_job_states:\n      state1:\n        name: \"weightSensing\"\n        icon: \"mdi:scale\"\n      state2:\n        name: \"wash\"\n        icon: \"mdi:waves\"\n      state3:\n        name: \"rinse\"\n        icon: \"mdi:water\"\n      state4:\n        name: \"spin\"\n        icon: \"mdi:fan\"\n    ulm_custom_card_washer_delayed_start: input_boolean.washingmachine_latest_start\n    ulm_custom_card_washer_delayed_starttime: input_datetime.washingmachine_latest_starttime\n    ulm_custom_card_washer_label_idle: &gt;\n      [[[\n        var name = states[\"sensor.washingmachine_energy\"].attributes.friendly_name;\n        var value = states[\"sensor.washingmachine_energy\"].state;\n        var measurement = states[\"sensor.washingmachine_energy\"].attributes.unit_of_measurement;\n        return name + \" \u2022 \" + value + \" \" + measurement;\n      ]]]\n    ulm_custom_card_washer_label_running: \"[[[ return states[\"sensor.washer_remaining_time\"].state; ]]]\"\n    ulm_custom_card_washer_label_configuring: &gt;\n      [[[\n          var name = states[\"sensor.washer_actual_starttime\"].attributes.friendly_name;\n          var time = states[\"sensor.washer_actual_starttime\"].attributes.display_time;\n          return name + \" \u2022 \" + time;\n      ]]]\n    ulm_custom_card_washer_start_action:\n      action: \"call-service\"\n      service: switch.turn_on\n      service_data:\n        entity_id: switch.washer_run_action\n    ulm_custom_card_washer_pause_action:\n      action: \"call-service\"\n      service: switch.turn_on\n      service_data:\n        entity_id: switch.washer_pause_action\n    ulm_custom_card_washer_stop_action:\n      action: \"call-service\"\n      service: switch.turn_on\n      service_data:\n        entity_id: switch.washer_stop_action\n</code></pre> <p>Example for LG SmartThinQ</p> <pre><code>- type: \"custom:button-card\"\n  template: \"custom_card_haven_washer\"\n  variables:\n    ulm_custom_card_washer_power: sensor.washer\n    ulm_custom_card_washer_machine_state: sensor.washer_run_state\n    ulm_custom_card_washer_machine_stop_state: \"-\"\n    ulm_custom_card_washer_job_state: sensor.washer_run_state\n    ulm_custom_card_washer_job_states:\n      state1:\n        name: \"Detecting\"\n        icon: \"mdi:scale\"\n      state2:\n        name: \"Washing\"\n        icon: \"mdi:waves\"\n      state3:\n        name: \"Rinsing\"\n        icon: \"mdi:water\"\n      state4:\n        name: \"Spin\"\n        icon: \"mdi:fan\"\n    ulm_custom_card_washer_label_idle: &gt;\n      [[[\n        return \"-\";\n      ]]]\n    ulm_custom_card_washer_label_running: &gt;\n      [[[\n        return states[\"sensor.washer_remaining_time\"].state;\n      ]]]\n    ulm_custom_card_washer_label_configuring: &gt;\n      [[[\n          var name = states[\"sensor.washer_initial_time\"].attributes.friendly_name;\n          var time = states[\"sensor.washer_initial_time\"].attributes.display_time;\n          return name + \" \u2022 \" + time;\n      ]]]\n</code></pre>"},{"location":"usage/custom_cards/custom_card_haven_washer/#requirements","title":"Requirements","text":"<p>An integration that will support your washer, dryer, dishwasher or any other machine with job stages that you want to monitor.</p> <p>When using a Samsung Washing machine or Dryer that integrates with SmartThings, a default integration is available in Home Assistant and this custom card works with this integration. One thing missing in the default SmartThings integration is the ability to see is remote control is enabled. A custom integration is available which extends the sensors with a remote control sensor. Integration from HACS: \"SmartThings Custom\" (https://github.com/veista/smartthings) from veista.</p> <p>When using a LG Washing machine or Dryer or Dishwasher that integrates with LG SmartThinQ, a custom integration is available from HACS: \"LG ThinQ Devices integration for HomeAssistant\" (https://github.com/ollo69/ha-smartthinq-sensors) that works with this integration.</p>"},{"location":"usage/custom_cards/custom_card_haven_washer/#additional-show-the-remaining-time","title":"Additional: Show the remaining time","text":"<p>If you want to show the remaining time of your wash you can use the following template sensor to calculate duration.</p> <pre><code>template:\n  - sensor:\n      - unique_id: washer_remaining_time\n        name: \"Remaining Time\"\n        state: &gt;-\n          {% set rem_h = (as_timestamp(states.sensor.washer_completion_time.state) - as_timestamp(now())) | timestamp_custom(\"%-H\", false) %}\n          {% set rem_m = (as_timestamp(states.sensor.washer_completion_time.state) - as_timestamp(now())) | timestamp_custom(\"%-M\", false) %}\n          {% if int(rem_h) &gt; 0.9 %} {{ rem_h }} hour(s) and {{ rem_m }} minute(s)  {% else %} {{ rem_m }} minute(s) {% endif %}\n</code></pre>"},{"location":"usage/custom_cards/custom_card_haven_washer/#additional-control-the-washing-machine-of-dryer-remotely","title":"Additional: Control the washing machine of dryer remotely","text":"<p>Starting, pausing or stopping the washer or dryer is currently not supported by the Samsung SmartThings integration. To use the start, pause, and stop buttons, you can create command line switches, which can initiate the corresponding action. When creating a command-line switch, you need to replace the following items:</p> Variable Explanation action this should be run, pause or stop deviceId The id of your device (guid) PAT Token The same PAT Token you\"ve created during the installation of the SmartThings integration <p>For every action you need to create an other command-line switch.</p> <p>Please ensure the capabilities of you machine before creating command-line switches.</p> <pre><code>switch:\n  - platform: command_line\n    switches:\n      washer_run_action:\n        unique_id: switch.washer_&lt;action&gt;_action\n        value_template: &gt;\n          {% if is_state(\"switch.washer_&lt;action&gt;_action\", \"on\") %}\n            false\n          {% endif %}\n        command_on: &gt;\n          curl --location --request POST \"https://api.smartthings.com/v1/devices/&lt;deviceId&gt;/commands\" --header \"authorization: Bearer &lt;PAT Token&gt;\" --header  \"Content-Type: text/plain\" --data-raw \"[{\"capability\":\"washerOperatingState\",\"command\":\"setMachineState\",\"arguments\":[\"&lt;action&gt;\"]}]\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_haven_washer/#variables","title":"Variables","text":""},{"location":"usage/custom_cards/custom_card_haven_washer/#main-parameters","title":"Main parameters","text":"Variable Example Required Explanation ulm_custom_card_washer_power switch.washingmachine_switch yes Is the washing machine or dryer turned on? ulm_custom_card_washer_remote_control sensor.washingmachine_remote_control no Can we control the washing machine or dryer remotely ulm_custom_card_washer_machine_state sensor.washingmachine_machine_state no What is the current state of washing machine or dryer: none, run or pause ulm_custom_card_washer_machine_stop_state \"stop\" no What is the value for the stop stage of the ulm_custom_card_washer_machine_state ulm_custom_card_washer_job_state sensor.washingmachine_job_state no What is the current step in the program, weightSensing, wash, rinse, spin or drying ulm_custom_card_washer_job_progress sensor.dishwasher_program_progress no What is the current progress in the program in % ulm_custom_card_washer_job_states List of maximum 5 states (name and icon) to show as job states no Define the job states of the washing machine of dryer (or any other machine that you wanna use) ulm_custom_card_washer_delayed_start input_boolean.washingmachine_latest_start no Turn on the ability to start the washing machine of dryer at a specific time ulm_custom_card_washer_delayed_starttime input_datetime.washingmachine_latest_starttime no What time should the washing machine or dryer start ulm_custom_card_washer_label_idle Any text, for example the number of runs no What label to show when the washing machine or dryer is idle ulm_custom_card_washer_label_running Any text, for example the remaining time of the current program no What label to show when the washing machine or dryer is running ulm_custom_card_washer_label_configuring Any text, for example, the end result of all the settings no What label to show when the washing machine or dryer is being configured ulm_custom_card_washer_start_action A collection of setting to change a value or start an action no This contains all the parameters to start the washing machine or dryer (See the next table) ulm_custom_card_washer_pause_action A collection of setting to change a value or start an action no This contains all the parameters to pause the washing machine or dryer (See the next table) ulm_custom_card_washer_stop_action A collection of setting to change a value or start an action no This contains all the parameters to stop the washing machine or dryer (See the next table)"},{"location":"usage/custom_cards/custom_card_haven_washer/#parameters-specific-for-the-start-pause-and-stop-of-the-washing-machine-of-dryer","title":"Parameters specific for the start, pause and stop of the washing machine of dryer","text":"Variable Example Required Explanation action none no Action to perform (more-info, toggle, call-service, navigate, url, none) Default: none entity entity_id no Entity id to call the action on navigation_path The navigation path for the call no Path to navigate to (e.g., /lovelace/0/) when action defined as navigate url_path The url path for the call no Path to navigate to (e.g., https://www.home-assistant.io) when action defined as url service The service to call the action on no Service to call (e.g., media_player.media_play_pause) when action defined as call-service service_data The service_data to call the action on no Service data to include (e.g., entity_id: media_player.bedroom) when action defined as call-service Template Code custom_card_haven_washer.yaml<pre><code>---- \"custom_cards/custom_card_haven_washer/custom_card_haven_washer.yaml\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_heat_pump/","title":"Heat Pump Custom-card","text":""},{"location":"usage/custom_cards/custom_card_heat_pump/#custom-card-heat-pump","title":"Custom-card \"Heat Pump\"","text":"<p>The <code>custom_card_heat_pump</code> allows you to control your HVAC system and all its modes. This card is inspired by Simple Thermostat Card.</p>"},{"location":"usage/custom_cards/custom_card_heat_pump/#credits","title":"Credits","text":"<p>Author: Kam - 2022 Version: 1.0.0</p>"},{"location":"usage/custom_cards/custom_card_heat_pump/#changelog","title":"Changelog","text":"1.0.0 Initial release"},{"location":"usage/custom_cards/custom_card_heat_pump/#images","title":"Images","text":""},{"location":"usage/custom_cards/custom_card_heat_pump/#usage","title":"Usage","text":"<pre><code>- type: custom:button-card\n  template: custom_card_heat_pump\n  entity: climate.heat_pump\n</code></pre>"},{"location":"usage/custom_cards/custom_card_heat_pump/#requirements","title":"Requirements","text":"<p>Entity climate with only heat mode</p>"},{"location":"usage/custom_cards/custom_card_heat_pump/#modification","title":"Modification","text":"<p>If your entity does not have all the available options in the <code>hvac component</code>, modify (delete or comment out) the following part to match your setup. Each button corresponds to a mode of the <code>hvac component</code>.</p> <pre><code>item3:\n      card:\n        type: \"horizontal-stack\"\n        cards:\n          - type: \"custom:button-card\"\n            template: \"widget_icon_juve\"\n            icon: \"mdi:power\"\n            tap_action:\n              action: \"call-service\"\n              service: \"climate.set_hvac_mode\"\n              service_data:\n                entity_id: \"[[[ return entity.entity_id ]]]\"\n                hvac_mode: \"off\"\n          - type: \"custom:button-card\"\n            template: \"widget_icon_juve\"\n            icon: \"mdi:fire\"\n            tap_action:\n              action: \"call-service\"\n              service: \"climate.set_hvac_mode\"\n              service_data:\n                entity_id: \"[[[ return entity.entity_id ]]]\"\n                hvac_mode: \"heat\"\n            ...\n          - type: \"custom:button-card\"\n            template: \"widget_icon_juve\"\n            icon: \"mdi:snowflake\"\n            tap_action:\n              action: \"call-service\"\n              service: \"climate.set_hvac_mode\"\n              service_data:\n                entity_id: \"[[[ return entity.entity_id ]]]\"\n                hvac_mode: \"cool\"\n            ...\n          - type: \"custom:button-card\"\n            template: \"widget_icon_juve\"\n            icon: \"mdi:sync\"\n            tap_action:\n              action: \"call-service\"\n              service: \"climate.set_hvac_mode\"\n              service_data:\n                entity_id: \"[[[ return entity.entity_id ]]]\"\n                hvac_mode: \"heat_cool\"\n            ...\n          - type: \"custom:button-card\"\n            template: \"widget_icon_juve\"\n            icon: \"mdi:water\"\n            tap_action:\n              action: \"call-service\"\n              service: \"climate.set_hvac_mode\"\n              service_data:\n                entity_id: \"[[[ return entity.entity_id ]]]\"\n                hvac_mode: \"dry\"\n            ...\n          - type: \"custom:button-card\"\n            template: \"widget_icon_juve\"\n            icon: \"mdi:fan\"\n            tap_action:\n              action: \"call-service\"\n              service: \"climate.set_hvac_mode\"\n              service_data:\n                entity_id: \"[[[ return entity.entity_id ]]]\"\n                hvac_mode: \"fan_only\"\n            ...\n</code></pre> Template Code custom_card_heat_pump.yaml<pre><code>---\ncustom_card_heat_pump:\n  show_name: false\n  show_icon: false\n  template:\n    - \"icon_info_bg\"\n    - \"ulm_translation_engine\"\n  hold_action:\n    action: \"more-info\"\n  styles:\n    grid:\n      - grid-template-areas: \"'item1' 'item2' 'item3'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content  min-content min-content\"\n      - row-gap: \"12px\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        template:\n          - \"icon_info\"\n          - \"ulm_translation_engine\"\n        tap_action:\n          action: \"more-info\"\n        entity: \"[[[ return entity.entity_id ]]]\"\n        name: \"[[[ return entity.name ]]]\"\n        label: &gt;-\n          [[[\n              if(entity.attributes.temperature){\n                return (entity.attributes.current_temperature ) + '\u00b0' + ' \u2022 ' + variables.ulm_translation_state + ' (' + entity.attributes.hvac_action + ')';\n              }\n              return variables.ulm_translation_state;\n          ]]]\n        icon: &gt;\n          [[[\n            var icon = \"mdi:thermostat\";\n            var state = entity.state;\n            if (state =='dry') {\n              return \"mdi:water\";\n            } else if (state =='heat') {\n              return \"mdi:fire\";\n            } else if (state =='cool') {\n              return \"mdi:snowflake\";\n            } else if (state =='fan_only') {\n              return \"mdi:fan\";\n            } else if (state =='heat_cool') {\n              return \"mdi:sync\";\n            }\n            return icon;\n          ]]]\n        state:\n          - operator: \"template\"\n            value: \"[[[return entity.state == 'dry']]]\"\n            styles:\n              icon:\n                - color: \"rgba(var(--color, 255, 165, 0),1)\"\n              img_cell:\n                - background-color: \"rgba(var(--color, 255, 165, 0),0.2)\"\n          - operator: \"template\"\n            value: \"[[[return entity.state == 'cool']]]\"\n            styles:\n              icon:\n                - color: \"rgba(var(--color-blue),1)\"\n              img_cell:\n                - background-color: \"rgba(var(--color-blue),0.2)\"\n          - operator: \"template\"\n            value: \"[[[return entity.state == 'heat']]]\"\n            styles:\n              icon:\n                - color: \"rgba(var(--color-red),1)\"\n              img_cell:\n                - background-color: \"rgba(var(--color-red),0.2)\"\n          - operator: \"template\"\n            value: \"[[[return entity.state == 'fan_only']]]\"\n            styles:\n              icon:\n                - color: \"rgba(var(--color, 195, 0, 255),1)\"\n              img_cell:\n                - background-color: \"rgba(var(--color, 195, 0, 255),0.2)\"\n          - operator: \"template\"\n            value: \"[[[return entity.state == 'heat_cool']]]\"\n            styles:\n              icon:\n                - color: \"rgba(var(--color-green),1)\"\n              img_cell:\n                - background-color: \"rgba(var(--color-green),0.2)\"\n    item2:\n      card:\n        type: \"custom:button-card\"\n        template: \"list_items\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              icon: \"mdi:arrow-down\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"climate.set_temperature\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id; ]]]\"\n                data:\n                  temperature: \"[[[ return (entity.attributes.temperature - entity.attributes.target_temp_step); ]]]\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id; ]]]\"\n              name: \"[[[ return (entity.attributes.temperature + '\u00b0C'); ]]]\"\n              styles:\n                card:\n                  - box-shadow: \"none\"\n              show_icon: false\n              tap_action: \"none\"\n          item3:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              icon: \"mdi:arrow-up\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"climate.set_temperature\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id; ]]]\"\n                data:\n                  temperature: \"[[[ return (entity.attributes.temperature + entity.attributes.target_temp_step); ]]]\"\n    item3:\n      card:\n        type: \"horizontal-stack\"\n        cards:\n          - type: \"custom:button-card\"\n            template: \"widget_icon_juve\"\n            icon: \"mdi:power\"\n            tap_action:\n              action: \"perform-action\"\n              perform_action: \"climate.set_hvac_mode\"\n              target:\n                entity_id: \"[[[ return entity.entity_id; ]]]\"\n              data:\n                hvac_mode: \"off\"\n          - type: \"custom:button-card\"\n            template: \"widget_icon_juve\"\n            icon: \"mdi:fire\"\n            tap_action:\n              action: \"perform-action\"\n              perform_action: \"climate.set_hvac_mode\"\n              target:\n                entity_id: \"[[[ return entity.entity_id; ]]]\"\n              data:\n                hvac_mode: \"heat\"\n            styles:\n              icon:\n                - color: |\n                    [[[\n                      var color = 'rgba(var(--color-theme), 1)';\n                      if (entity.state == \"heat\"){\n                        var color = 'rgba(var(--color-red), 1)';\n                      }\n                      return color;\n                    ]]]\n              card:\n                - background-color: |\n                    [[[\n                      var bc_color = 'rgba(var(--color-theme),0.05)';\n                      if (entity.state == \"heat\"){\n                        var bc_color = 'rgba(var(--color-red), 0.2)';\n                      }\n                      return bc_color;\n                    ]]]\n          - type: \"custom:button-card\"\n            template: \"widget_icon_juve\"\n            icon: \"mdi:snowflake\"\n            tap_action:\n              action: \"perform-action\"\n              perform_action: \"climate.set_hvac_mode\"\n              target:\n                entity_id: \"[[[ return entity.entity_id; ]]]\"\n              data:\n                hvac_mode: \"cool\"\n            styles:\n              icon:\n                - color: |\n                    [[[\n                      var color = 'rgba(var(--color-theme), 1)';\n                      if (entity.state == \"cool\"){\n                        var color = 'rgba(var(--color-blue), 1)';\n                      }\n                      return color;\n                    ]]]\n              card:\n                - background-color: |\n                    [[[\n                      var bc_color = 'rgba(var(--color-theme),0.05)';\n                      if (entity.state == \"cool\"){\n                        var bc_color = 'rgba(var(--color-blue), 0.2)';\n                      }\n                      return bc_color;\n                    ]]]\n          - type: \"custom:button-card\"\n            template: \"widget_icon_juve\"\n            icon: \"mdi:sync\"\n            tap_action:\n              action: \"perform-action\"\n              perform_action: \"climate.set_hvac_mode\"\n              target:\n                entity_id: \"[[[ return entity.entity_id; ]]]\"\n              data:\n                hvac_mode: \"heat_cool\"\n            styles:\n              icon:\n                - color: |\n                    [[[\n                      var color = 'rgba(var(--color-theme), 1)';\n                      if (entity.state == \"heat_cool\"){\n                        var color = 'rgba(var(--color-green), 1)';\n                      }\n                      return color;\n                    ]]]\n              card:\n                - background-color: |\n                    [[[\n                      var bc_color = 'rgba(var(--color-theme),0.05)';\n                      if (entity.state == \"heat_cool\"){\n                        var bc_color = 'rgba(var(--color-green), 0.2)';\n                      }\n                      return bc_color;\n                    ]]]\n          - type: \"custom:button-card\"\n            template: \"widget_icon_juve\"\n            icon: \"mdi:water\"\n            tap_action:\n              action: \"perform-action\"\n              perform_action: \"climate.set_hvac_mode\"\n              target:\n                entity_id: \"[[[ return entity.entity_id; ]]]\"\n              data:\n                hvac_mode: \"dry\"\n            styles:\n              icon:\n                - color: |\n                    [[[\n                      var color = 'rgba(var(--color-theme), 1)';\n                      if (entity.state == \"dry\"){\n                        var color = 'rgba(var(--color, 255, 165, 0), 1)';\n                      }\n                      return color;\n                    ]]]\n              card:\n                - background-color: |\n                    [[[\n                      var bc_color = 'rgba(var(--color-theme),0.05)';\n                      if (entity.state == \"dry\"){\n                        var bc_color = 'rgba(var(--color, 255, 165, 0), 0.2)';\n                      }\n                      return bc_color;\n                    ]]]\n          - type: \"custom:button-card\"\n            template: \"widget_icon_juve\"\n            icon: \"mdi:fan\"\n            tap_action:\n              action: \"perform-action\"\n              perform_action: \"climate.set_hvac_mode\"\n              target:\n                entity_id: \"[[[ return entity.entity_id; ]]]\"\n              data:\n                hvac_mode: \"fan_only\"\n            styles:\n              icon:\n                - color: |\n                    [[[\n                      var color = 'rgba(var(--color-theme), 1)';\n                      if (entity.state == \"fan_only\"){\n                        var color = 'rgba(var(--color, 195, 0, 255), 1)';\n                      }\n                      return color;\n                    ]]]\n              card:\n                - background-color: |\n                    [[[\n                      var bc_color = 'rgba(var(--color-theme),0.05)';\n                      if (entity.state == \"fan_only\"){\n                        var bc_color = 'rgba(var(--color, 195, 0, 255), 0.2)';\n                      }\n                      return bc_color;\n                    ]]]\nwidget_icon_juve:\n  tap_action:\n    action: \"toggle\"\n  show_icon: true\n  show_name: false\n  show_state: true\n  styles:\n    grid:\n      - grid-template-areas: \"'i'\"\n    card:\n      - box-shadow: \"none\"\n      - padding: \"0px\"\n      - background-color: \"rgba(var(--color-theme),0.05)\"\n      - border-radius: \"14px\"\n      - place-self: \"center\"\n      - height: \"42px\"\n    icon:\n      - color: \"rgba(var(--color-theme),0.9)\"\n  size: \"20px\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_homeassistant_updates/","title":"Homeassistant Updates Custom-card","text":""},{"location":"usage/custom_cards/custom_card_homeassistant_updates/#custom-card-homeassistant-updates","title":"Custom-card \"Homeassistant updates\"","text":""},{"location":"usage/custom_cards/custom_card_homeassistant_updates/#credits","title":"Credits","text":"<ul> <li>Author: AndyVRD - 2021</li> <li>Special thanks to basbruss</li> <li>Version: 1.0.2</li> </ul>"},{"location":"usage/custom_cards/custom_card_homeassistant_updates/#changelog","title":"Changelog","text":"1.0.0 Initial release  1.0.1 Added support for ulm_language variables  1.0.2 Updated capitalization of OS  1.0.3 Updated sensors and binary_sensors + Removed group.updaters"},{"location":"usage/custom_cards/custom_card_homeassistant_updates/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: card_homeassistant_updates\n  variables:\n    ulm_card_homeassistant_entity: \"binary_sensor.updates\"\n    ulm_card_homeassistant_core: \"sensor.core_updates\"\n    ulm_card_homeassistant_supervisor: \"sensor.supervisor_updates\"\n    ulm_card_homeassistant_os: \"sensor.os_updates\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_homeassistant_updates/#requirements","title":"Requirements","text":"<p>!! Attention !! This card needs additional template sensors and binary_sensor updaters to work, all detail can be found in this readme.</p>"},{"location":"usage/custom_cards/custom_card_homeassistant_updates/#variables","title":"Variables","text":"Variable Example Required Explanation core_ sensor.core_updates yes sensor core installed/latest version os_ sensor.os_updates no sensor os installed/latest version supervisor_ sensor.supervisor_updates no sensor supervisor installed/latest version <p>&lt;&lt;&lt;&lt;&lt;&lt;&lt; Updated upstream</p>"},{"location":"usage/custom_cards/custom_card_homeassistant_updates/#template-code","title":"Template code","text":"<pre><code>---\ncard_homeassistant_updates:\n  triggers_update: \"all\"\n  template:\n    - \"ulm_language_variables\"\n  styles:\n    grid:\n      - grid-template-areas: \"'item1' 'item2'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content  min-content\"\n      - row-gap: \"12px\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n  custom_fields:\n    item1:\n      card:\n        triggers_update: \"all\"\n        type: \"custom:button-card\"\n        template:\n          - \"icon_info_updates\"\n        icon: \"mdi:home-assistant\"\n        tap_action:\n          action: \"none\"\n        entity: \"[[[ return variables.ulm_card_homeassistant_entity ]]]\"\n        name: &gt;\n              [[[\n                if(states[variables.ulm_card_homeassistant_core].state ==='True' || states[variables.ulm_card_homeassistant_supervisor].state ==='True' || states[variables.ulm_card_homeassistant_os].state ==='True'){\n                  return variables.ulm_updates_available;\n                } else {\n                  return variables.ulm_no_updates_available;\n                }\n              ]]]\n        label: &gt;\n              [[[\n                if(variables.ulm_card_homeassistant_core){\n                  if(states[variables.ulm_card_homeassistant_core].state ==='True'){\n                    var core = 'Core: ' + states[variables.ulm_card_homeassistant_core].attributes.installed_version + ' -&gt; ' + states[variables.ulm_card_homeassistant_core].attributes.latest_version;\n                  } else {\n                    var core = 'Core: ' + states[variables.ulm_card_homeassistant_core].attributes.installed_version;\n                  }\n                }\n                if(variables.ulm_card_homeassistant_supervisor){\n                  if(states[variables.ulm_card_homeassistant_supervisor].state ==='True'){\n                    var supervisor = 'Supervisor: ' + states[variables.ulm_card_homeassistant_supervisor].attributes.installed_version + ' -&gt; ' + states[variables.ulm_card_homeassistant_supervisor].attributes.latest_version;\n                  } else {\n                    var supervisor = 'Supervisor: ' + states[variables.ulm_card_homeassistant_supervisor].attributes.installed_version;\n                  }\n                }\n                if(variables.ulm_card_homeassistant_os){\n                  if(states[variables.ulm_card_homeassistant_os].state ==='True'){\n                    var os = 'OS: ' + states[variables.ulm_card_homeassistant_os].attributes.installed_version + ' -&gt; ' + states[variables.ulm_card_homeassistant_os].attributes.latest_version;\n                  } else {\n                    var os = 'OS: ' + states[variables.ulm_card_homeassistant_os].attributes.installed_version;\n                  }\n                }\n                if(variables.ulm_card_homeassistant_core &amp;&amp; variables.ulm_card_homeassistant_supervisor &amp;&amp; variables.ulm_card_homeassistant_os){\n                  return supervisor + '&lt;br&gt;' + core + '&lt;br&gt;' + os;\n                } else if(variables.ulm_card_homeassistant_core &amp;&amp; variables.ulm_card_homeassistant_supervisor){\n                  return supervisor + '&lt;br&gt;' + core;\n                } else if(variables.ulm_card_homeassistant_core){\n                  return core;\n                }\n              ]]]\n        styles:\n          icon:\n            - color: \"rgba(var(--color-theme),0.9)\"\n    item2:\n      card:\n        type: \"custom:button-card\"\n        template: \"list_3_items\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              icon: \"mdi:file-document\"\n              tap_action:\n                action: \"url\"\n                url_path: \"https://www.home-assistant.io/latest-release-notes/\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              icon: \"mdi:cog\"\n              tap_action:\n                action: \"navigate\"\n                navigation_path: \"/developer-tools/yaml\"\n\n          item3:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              icon: \"mdi:update\"\n              tap_action:\n                action: \"navigate\"\n                navigation_path: \"/config/dashboard\"\n\nicon_info_updates:\n  color: \"var(--google-grey)\"\n  show_icon: true\n  show_label: true\n  show_name: true\n  state:\n    - value: \"on\"\n      styles:\n        custom_fields:\n          notification:\n            - border-radius: \"50%\"\n            - position: \"absolute\"\n            - left: \"28px\"\n            - top: \"8px\"\n            - height: \"16px\"\n            - width: \"16px\"\n            - border: \"2px solid var(--card-background-color)\"\n            - font-size: \"12px\"\n            - line-height: \"14px\"\n            - background-color: &gt;\n                [[[\n                  return \"rgba(var(--color-blue),1)\";\n                ]]]\n        icon:\n          - color: \"rgba(var(--color-blue),1)\"\n        img_cell:\n          - background-color: \"rgba(var(--color-blue), 0.2)\"\n  styles:\n    icon:\n      - color: \"rgba(var(--color-theme),0.2)\"\n    label:\n      - justify-self: \"start\"\n      - align-self: \"start\"\n      - font-weight: \"bolder\"\n      - font-size: \"12px\"\n      - filter: \"opacity(40%)\"\n      - margin-left: \"16px\"\n      - text-align: \"start\"\n    name:\n      - align-self: \"end\"\n      - justify-self: \"start\"\n      - font-weight: \"bold\"\n      - font-size: \"14px\"\n      - margin-left: \"16px\"\n      - margin-bottom: \"4px\"\n    state:\n      - justify-self: \"start\"\n      - align-self: \"start\"\n      - font-weight: \"bolder\"\n      - font-size: \"12px\"\n      - filter: \"opacity(40%)\"\n      - margin-left: \"12px\"\n    img_cell:\n      - background-color: \"rgba(var(--color-theme),0.05)\"\n      - border-radius: \"50%\"\n      - place-self: \"center\"\n      - width: \"42px\"\n      - height: \"42px\"\n    grid:\n      - grid-template-areas: \"'i n' 'i l'\"\n      - grid-template-columns: \"min-content auto\"\n      - grid-template-rows: \"min-content min-content\"\n    card:\n      - border-radius: \"21px 8px 8px 21px\"\n      - box-shadow: \"none\"\n      - padding: \"0px\"\n  custom_fields:\n    notification: &gt;\n      [[[\n        if ( entity.state ==\"unavailable\" || entity.state ==\"on\" ){\n          return `&lt;ha-icon icon=\"mdi:party-popper\" style=\"width: 12px; height: 12px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;`;\n        }\n      ]]]\n  size: \"20px\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_homeassistant_updates/#template-sensors-code","title":"Template sensors code","text":"<p>```yaml sensor:   - platform: command_line     name: core_updates     command: 'curl http://supervisor/core/info -H \"Authorization: Bearer $(printenv SUPERVISOR_TOKEN)\" | jq ''{\"latest_version\":.data.version_latest,\"installed_version\":.data.version,\"update_available\":.data.update_available}'''     value_template: '{{ value_json.update_available }}'     scan_interval: 600     json_attributes:       - update_available       - latest_version       - installed_version</p> <ul> <li> <p>platform: command_line     name: supervisor_updates     command: 'curl http://supervisor/supervisor/info -H \"Authorization: Bearer $(printenv SUPERVISOR_TOKEN)\" | jq ''{\"latest_version\":.data.version_latest,\"installed_version\":.data.version,\"update_available\":.data.update_available}'''     value_template: '{{ value_json.update_available }}'     scan_interval: 600     json_attributes:</p> <ul> <li>update_available</li> <li>latest_version</li> <li>installed_version</li> </ul> </li> <li> <p>platform: command_line     name: os_updates     command: 'curl http://supervisor/os/info -H \"Authorization: Bearer $(printenv SUPERVISOR_TOKEN)\" | jq ''{\"latest_version\":.data.version_latest,\"installed_version\":.data.version,\"update_available\":.data.update_available}'''     value_template: '{{ value_json.update_available }}'     scan_interval: 600     json_attributes:</p> <ul> <li>update_available</li> <li>latest_version</li> <li>installed_version</li> </ul> </li> <li> <p>platform: command_line     name: addons_updates     command: 'curl http://supervisor/addons -H \"Authorization: Bearer $(printenv SUPERVISOR_TOKEN)\" | jq ''{\"addons\":[.data.addons[] | select(.update_available)]}'''     value_template: '{{ value_json.addons | length }}'     scan_interval: 600     unit_of_measurement: pending update(s)     json_attributes:</p> <ul> <li>addons</li> </ul> </li> </ul> <p>binary_sensor:   - platform: template     sensors:       updater_core:         friendly_name: Core         device_class: problem         value_template: \"{{ states('sensor.core_updates') }}\"         attribute_templates:           installed_version: \"{{ state_attr('sensor.core_updates', 'installed_version') }}\"           latest_version: \"{{ state_attr('sensor.core_updates', 'latest_version') }}\" =======</p> Template Code <p>Stashed changes</p> <pre><code>```yaml title=\"custom_card_homeassistant_updates.yaml\"\n---\ncard_homeassistant_updates:\n  triggers_update: \"all\"\n  template:\n    - \"ulm_language_variables\"\n  styles:\n    grid:\n      - grid-template-areas: \"'item1' 'item2'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content  min-content\"\n      - row-gap: \"12px\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n  custom_fields:\n    item1:\n      card:\n        triggers_update: \"all\"\n        type: \"custom:button-card\"\n        template:\n          - \"icon_info_updates\"\n        icon: \"mdi:home-assistant\"\n        tap_action:\n          action: \"none\"\n        entity: \"[[[ return variables.ulm_card_homeassistant_entity ]]]\"\n        name: &gt;\n              [[[\n                if(states[variables.ulm_card_homeassistant_core].state ==='True' || states[variables.ulm_card_homeassistant_supervisor].state ==='True' || states[variables.ulm_card_homeassistant_os].state ==='True'){\n                  return variables.ulm_updates_available;\n                } else {\n                  return variables.ulm_no_updates_available;\n                }\n              ]]]\n        label: &gt;\n              [[[\n                if(variables.ulm_card_homeassistant_core){\n                  if(states[variables.ulm_card_homeassistant_core].state ==='True'){\n                    var core = 'Core: ' + states[variables.ulm_card_homeassistant_core].attributes.installed_version + ' -&gt; ' + states[variables.ulm_card_homeassistant_core].attributes.latest_version;\n                  } else {\n                    var core = 'Core: ' + states[variables.ulm_card_homeassistant_core].attributes.installed_version;\n                  }\n                }\n                if(variables.ulm_card_homeassistant_supervisor){\n                  if(states[variables.ulm_card_homeassistant_supervisor].state ==='True'){\n                    var supervisor = 'Supervisor: ' + states[variables.ulm_card_homeassistant_supervisor].attributes.installed_version + ' -&gt; ' + states[variables.ulm_card_homeassistant_supervisor].attributes.latest_version;\n                  } else {\n                    var supervisor = 'Supervisor: ' + states[variables.ulm_card_homeassistant_supervisor].attributes.installed_version;\n                  }\n                }\n                if(variables.ulm_card_homeassistant_os){\n                  if(states[variables.ulm_card_homeassistant_os].state ==='True'){\n                    var os = 'OS: ' + states[variables.ulm_card_homeassistant_os].attributes.installed_version + ' -&gt; ' + states[variables.ulm_card_homeassistant_os].attributes.latest_version;\n                  } else {\n                    var os = 'OS: ' + states[variables.ulm_card_homeassistant_os].attributes.installed_version;\n                  }\n                }\n                if(variables.ulm_card_homeassistant_core &amp;&amp; variables.ulm_card_homeassistant_supervisor &amp;&amp; variables.ulm_card_homeassistant_os){\n                  return supervisor + '&lt;br&gt;' + core + '&lt;br&gt;' + os;\n                } else if(variables.ulm_card_homeassistant_core &amp;&amp; variables.ulm_card_homeassistant_supervisor){\n                  return supervisor + '&lt;br&gt;' + core;\n                } else if(variables.ulm_card_homeassistant_core){\n                  return core;\n                }\n              ]]]\n        styles:\n          icon:\n            - color: \"rgba(var(--color-theme),0.9)\"\n    item2:\n      card:\n        type: \"custom:button-card\"\n        template: \"list_3_items\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              icon: \"mdi:file-document\"\n              tap_action:\n                action: \"url\"\n                url_path: \"https://www.home-assistant.io/latest-release-notes/\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              icon: \"mdi:cog\"\n              tap_action:\n                action: \"navigate\"\n                navigation_path: \"/developer-tools/yaml\"\n\n          item3:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              icon: \"mdi:update\"\n              tap_action:\n                action: \"navigate\"\n                navigation_path: \"/config/dashboard\"\n\nicon_info_updates:\n  color: \"var(--google-grey)\"\n  show_icon: true\n  show_label: true\n  show_name: true\n  state:\n    - value: \"on\"\n      styles:\n        custom_fields:\n          notification:\n            - border-radius: \"50%\"\n            - position: \"absolute\"\n            - left: \"28px\"\n            - top: \"8px\"\n            - height: \"16px\"\n            - width: \"16px\"\n            - border: \"2px solid var(--card-background-color)\"\n            - font-size: \"12px\"\n            - line-height: \"14px\"\n            - background-color: &gt;\n                [[[\n                  return \"rgba(var(--color-blue),1)\";\n                ]]]\n        icon:\n          - color: \"rgba(var(--color-blue),1)\"\n        img_cell:\n          - background-color: \"rgba(var(--color-blue), 0.2)\"\n  styles:\n    icon:\n      - color: \"rgba(var(--color-theme),0.2)\"\n    label:\n      - justify-self: \"start\"\n      - align-self: \"start\"\n      - font-weight: \"bolder\"\n      - font-size: \"12px\"\n      - filter: \"opacity(40%)\"\n      - margin-left: \"16px\"\n      - text-align: \"start\"\n    name:\n      - align-self: \"end\"\n      - justify-self: \"start\"\n      - font-weight: \"bold\"\n      - font-size: \"14px\"\n      - margin-left: \"16px\"\n      - margin-bottom: \"4px\"\n    state:\n      - justify-self: \"start\"\n      - align-self: \"start\"\n      - font-weight: \"bolder\"\n      - font-size: \"12px\"\n      - filter: \"opacity(40%)\"\n      - margin-left: \"12px\"\n    img_cell:\n      - background-color: \"rgba(var(--color-theme),0.05)\"\n      - border-radius: \"50%\"\n      - place-self: \"center\"\n      - width: \"42px\"\n      - height: \"42px\"\n    grid:\n      - grid-template-areas: \"'i n' 'i l'\"\n      - grid-template-columns: \"min-content auto\"\n      - grid-template-rows: \"min-content min-content\"\n    card:\n      - border-radius: \"21px 8px 8px 21px\"\n      - box-shadow: \"none\"\n      - padding: \"0px\"\n  custom_fields:\n    notification: &gt;\n      [[[\n        if ( entity.state ==\"unavailable\" || entity.state ==\"on\" ){\n          return `&lt;ha-icon icon=\"mdi:party-popper\" style=\"width: 12px; height: 12px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;`;\n        }\n      ]]]\n  size: \"20px\"\n\n```\n</code></pre>"},{"location":"usage/custom_cards/custom_card_httpedo13_sun/","title":"Sun Card Custom-card","text":""},{"location":"usage/custom_cards/custom_card_httpedo13_sun/#custom-card-sun","title":"Custom-card \"Sun\"","text":"<p>The <code>custom_card_httpedo13_sun</code> adapt <code>sun card</code> for minimalist ui.</p>"},{"location":"usage/custom_cards/custom_card_httpedo13_sun/#credits","title":"Credits","text":"<p>Author: httpedo13 - 2021 Version: 1.0.0</p>"},{"location":"usage/custom_cards/custom_card_httpedo13_sun/#changelog","title":"Changelog","text":"1.0.0 Initial release"},{"location":"usage/custom_cards/custom_card_httpedo13_sun/#requirements","title":"Requirements","text":"<p>This card uses:</p> Component / card required Link Sun integration yes more info Sun card yes more info"},{"location":"usage/custom_cards/custom_card_httpedo13_sun/#images","title":"Images","text":""},{"location":"usage/custom_cards/custom_card_httpedo13_sun/#usage","title":"Usage","text":"<pre><code>- type: custom:button-card\n  template: custom_card_httpedo13_sun\n  variables:\n    language: \"it\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_httpedo13_sun/#variables","title":"Variables","text":"<p>The same sun card config.</p> Name Accepted values Description Default darkMode <code>boolean</code> Changes card colors to dark or light Home assistant dark mode state language <code>string</code><sup>1</sup> Changes card language Home assistant language or english if not supported showAzimuth <code>boolean</code> Displays azimuth in the footer <code>false</code> showElevation <code>boolean</code> Displays elevation in the footer <code>false</code> timeFormat <code>'12h'</code>/<code>'24h'</code> Displayed time format Locale based on Home assistant language title <code>string</code> Card title Doesn't display a title by default <p>(<sup>1</sup>) Supported languages: <code>da</code>, <code>de</code>, <code>en</code>, <code>es</code>, <code>et</code>, <code>fi</code>, <code>fr</code>, <code>hu</code>, <code>it</code>, <code>nl</code>, <code>pl</code>, <code>pt-BR</code>, <code>ru</code>, <code>sl</code>, <code>sv</code></p>"},{"location":"usage/custom_cards/custom_card_httpedo13_thermostat/","title":"Thermostat Custom-card","text":""},{"location":"usage/custom_cards/custom_card_httpedo13_thermostat/#custom-card-thermostat","title":"Custom-card \"Thermostat\"","text":"<p>The <code>custom_card_httpedo13_thermostat</code> shows data from your thermostat and gives you the possibility to control it. Thanks to tpx01's air-condition custom card!</p>"},{"location":"usage/custom_cards/custom_card_httpedo13_thermostat/#credits","title":"Credits","text":"<p>Author: httpedo13 - 2021 Version: 1.0.0</p> <p>This design was made by tpx01's</p>"},{"location":"usage/custom_cards/custom_card_httpedo13_thermostat/#changelog","title":"Changelog","text":"1.0.0 Initial release"},{"location":"usage/custom_cards/custom_card_httpedo13_thermostat/#images","title":"Images","text":""},{"location":"usage/custom_cards/custom_card_httpedo13_thermostat/#usage","title":"Usage","text":"<p>With buttons:</p> <pre><code>- type: custom:button-card\n  template: custom_card_httpedo13_thermostat_with_buttons\n  variables:\n    entity: climate.ground_floor\n    name: Heater Ground Floor\n</code></pre> <p>With collapse button:</p> <pre><code>- type: custom:button-card\n  template: custom_card_httpedo13_thermostat_with_buttons_collapse\n  variables:\n    entity: climate.ground_floor\n    name: Heater Ground Floor\n</code></pre>"},{"location":"usage/custom_cards/custom_card_httpedo13_thermostat/#requirements","title":"Requirements","text":"<p>Entity climate with only heat mode</p>"},{"location":"usage/custom_cards/custom_card_httpedo13_thermostat/#variables","title":"Variables","text":"Variable Example Required Explanation entity climate.ground_floor yes Your climate with only heat mode entity name Heater Ground Floor yes The name to show Template Code custom_card_httpedo13_thermostat.yaml<pre><code>---\ncustom_card_httpedo13_thermostat:\n  template:\n    - \"ulm_translation_engine\"\n  tap_action:\n    action: \"toggle\"\n  icon: |\n    [[[\n        if (entity.attributes.hvac_action == 'heating') {\n          return \"mdi:radiator\";\n        }\n        return \"mdi:radiator-off\";\n    ]]]\n  label: \"[[[ return variables.ulm_translation_state ]]]\"\n  state:\n    - operator: \"template\"\n      value: &gt;\n        [[[\n          return entity.state != 'off';\n        ]]]\n      styles:\n        label:\n          - color: |\n              [[[\n                if (entity.attributes.hvac_action == 'heating'){\n                  return \"var(--card-background-color)\";\n                }\n                return \"rgba(var(--color-theme),0.9)\";\n              ]]]\n        name:\n          - font-weight: \"bold\"\n          - color: |\n              [[[\n                if (entity.attributes.hvac_action == 'heating'){\n                  return \"var(--card-background-color)\";\n                }\n                return \"rgba(var(--color-theme),0.9)\";\n              ]]]\n        icon:\n          - color: \"rgba(var(--color-red),1)\"\n        img_cell:\n          - background-color: |\n              [[[\n                if (entity.attributes.hvac_action == 'heating'){\n                  return 'var(--card-background-color)';\n                }\n                return 'rgba(var(--color-red),0.2)';\n              ]]]\n        card:\n          - background-color: |\n              [[[\n                if (entity.attributes.hvac_action == 'heating'){\n                  return '#ff8100';\n                }\n                return 'var(--card-background-color)';\n              ]]]\n\ncustom_card_httpedo13_thermostat_with_buttons:\n  triggers_update: \"all\"\n  styles:\n    grid:\n      - grid-template-areas: \"'item1' 'item2'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content  min-content\"\n      - row-gap: \"12px\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n      - background-color: |\n          [[[\n            if (states[variables.entity].attributes.hvac_action == 'heating'){\n              return '#ff8100';\n            }\n            return 'var(--card-background-color)';\n          ]]]\n  tap_action:\n    action: \"perform-action\"\n    perform_action: \"climate.set_hvac_mode\"\n    target:\n      entity_id: \"[[[ return variables.entity ]]]\"\n    data:\n      hvac_mode: |\n        [[[\n          if (states[variables.entity].state == \"off\"){\n            return 'heat';\n          } else if (states[variables.entity].state == \"heat\"){\n            return 'off';\n          }\n        ]]]\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        template: \"list_items_favorite\"\n        styles:\n          card:\n            - background-color: |\n                [[[\n                  if (states[variables.entity].attributes.hvac_action == 'heating'){\n                    return '#ff8100';\n                  }\n                  return 'var(--card-background-color)';\n                ]]]\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template:\n                - \"icon_info\"\n                - \"custom_card_httpedo13_thermostat\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"climate.set_hvac_mode\"\n                target:\n                  entity_id: \"[[[ return variables.entity ]]]\"\n                data:\n                  hvac_mode: |\n                    [[[\n                      if (states[variables.entity].state == \"off\"){\n                        return 'heat';\n                      } else if (states[variables.entity].state == \"heat\"){\n                        return 'off';\n                      }\n                    ]]]\n              name: &gt;\n                [[[\n                    if (variables.name == null) {\n                      return variables.entity;\n                    }\n                    return variables.name;\n                ]]]\n              entity: \"[[[ return variables.entity ]]]\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_current_temperature\"\n              tap_action:\n                action: \"toggle\"\n              entity: \"[[[ return variables.entity ]]]\"\n              icon: \"mdi:temperature-celsius\"\n    item2:\n      card:\n        type: \"custom:button-card\"\n        template: \"list_3_items\"\n        styles:\n          card:\n            - background-color: |\n                [[[\n                  if (states[variables.entity].attributes.hvac_action == 'heating'){\n                    return '#ff8100';\n                  }\n                  return 'var(--card-background-color)';\n                ]]]\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon_for_thermostat\"\n              entity: \"[[[ return variables.entity ]]]\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"climate.set_temperature\"\n                target:\n                  entity_id: \"[[[ return variables.entity ]]]\"\n                data:\n                  temperature: \"[[[ return (parseFloat(states[variables.entity].attributes.temperature) - 0.5)  ]]]\"\n              icon: \"mdi:minus\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_temperature\"\n              tap_action:\n                action: \"toggle\"\n              entity: \"[[[ return variables.entity ]]]\"\n              icon: \"mdi:temperature-celsius\"\n          item3:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon_for_thermostat\"\n              entity: \"[[[ return variables.entity ]]]\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"climate.set_temperature\"\n                target:\n                  entity_id: \"[[[ return variables.entity ]]]\"\n                data:\n                  temperature: \"[[[ return (parseFloat(states[variables.entity].attributes.temperature) + 0.5)  ]]]\"\n              icon: \"mdi:plus\"\n\ncustom_card_httpedo13_thermostat_with_buttons_collapse:\n  triggers_update: \"all\"\n  styles:\n    grid:\n      - grid-template-areas: \"'item1' 'item2'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content  min-content\"\n      - row-gap: \"12px\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n      - background-color: |\n          [[[\n            if (states[variables.entity].attributes.hvac_action == 'heating'){\n              return '#ff8100';\n            }\n            return 'var(--card-background-color)';\n          ]]]\n  tap_action:\n    action: \"perform-action\"\n    perform_action: \"climate.set_hvac_mode\"\n    target:\n      entity_id: \"[[[ return variables.entity ]]]\"\n    data:\n      hvac_mode: |\n        [[[\n          if (states[variables.entity].state == \"off\"){\n            return 'heat';\n          } else if (states[variables.entity].state == \"heat\"){\n            return 'off';\n          }\n        ]]]\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        template: \"list_items_favorite\"\n        styles:\n          card:\n            - background-color: |\n                [[[\n                  if (states[variables.entity].attributes.hvac_action == 'heating'){\n                    return '#ff8100';\n                  }\n                  return 'var(--card-background-color)';\n                ]]]\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template:\n                - \"icon_info\"\n                - \"custom_card_httpedo13_thermostat\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"climate.set_hvac_mode\"\n                target:\n                  entity_id: \"[[[ return variables.entity ]]]\"\n                data:\n                  hvac_mode: |\n                    [[[\n                      if (states[variables.entity].state == \"off\"){\n                        return 'heat';\n                      } else if (states[variables.entity].state == \"heat\"){\n                        return 'off';\n                      }\n                    ]]]\n              name: &gt;\n                [[[\n                    if (variables.name == null) {\n                      return variables.entity;\n                    }\n                    return variables.name;\n                ]]]\n              entity: \"[[[ return variables.entity ]]]\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_current_temperature\"\n              tap_action:\n                action: \"toggle\"\n              entity: \"[[[ return variables.entity ]]]\"\n              icon: \"mdi:temperature-celsius\"\n    item2:\n      card:\n        type: \"conditional\"\n        conditions:\n          - entity: \"[[[ return states[variables.entity].entity_id ]]]\"\n            state: \"heat\"\n        card:\n          type: \"custom:button-card\"\n          template: \"list_3_items\"\n          styles:\n            card:\n              - background-color: |\n                  [[[\n                    if (states[variables.entity].attributes.hvac_action == 'heating'){\n                      return '#ff8100';\n                    }\n                    return 'var(--card-background-color)';\n                  ]]]\n          custom_fields:\n            item1:\n              card:\n                type: \"custom:button-card\"\n                template: \"widget_icon_for_thermostat\"\n                entity: \"[[[ return variables.entity ]]]\"\n                tap_action:\n                  action: \"perform-action\"\n                  perform_action: \"climate.set_temperature\"\n                  target:\n                    entity_id: \"[[[ return variables.entity ]]]\"\n                  data:\n                    temperature: \"[[[ return (parseFloat(states[variables.entity].attributes.temperature) - 0.5)  ]]]\"\n                icon: \"mdi:minus\"\n            item2:\n              card:\n                type: \"custom:button-card\"\n                template: \"widget_temperature\"\n                tap_action:\n                  action: \"toggle\"\n                entity: \"[[[ return variables.entity ]]]\"\n                icon: \"mdi:temperature-celsius\"\n            item3:\n              card:\n                type: \"custom:button-card\"\n                template: \"widget_icon_for_thermostat\"\n                entity: \"[[[ return variables.entity ]]]\"\n                tap_action:\n                  action: \"perform-action\"\n                  perform_action: \"climate.set_temperature\"\n                  target:\n                    entity_id: \"[[[ return variables.entity ]]]\"\n                  data:\n                    temperature: \"[[[ return (parseFloat(states[variables.entity].attributes.temperature) + 0.5)  ]]]\"\n                icon: \"mdi:plus\"\n\nwidget_current_temperature:\n  color: \"var(--google-grey-500)\"\n  show_icon: false\n  show_name: false\n  show_label: true\n  size: \"20px\"\n  label: |-\n    [[[\n        var temperature = entity.attributes.current_temperature;\n        if (temperature == null) {\n          var temperature = '-';\n        }\n        return temperature + '\u00b0C'\n    ]]]\n  styles:\n    label:\n      - font-weight: \"bold\"\n      - color: |\n          [[[\n            if (entity.attributes.hvac_action == 'heating'){\n              return 'var(--card-background-color)';\n            }\n            return 'rgb(var(--color-theme),0.9)';\n          ]]]\n    grid:\n      - grid-template-areas: \"'l'\"\n    card:\n      - box-shadow: \"none\"\n      - padding: \"0px\"\n      - border-radius: \"14px\"\n      - place-self: \"center\"\n      - height: \"42px\"\n      - background-color: |\n          [[[\n            if (entity.attributes.hvac_action == 'heating'){\n              return '#ff8100';\n            }\n            return 'var(--card-background-color)';\n          ]]]\n\nwidget_temperature:\n  color: \"var(--google-grey-500)\"\n  show_icon: false\n  show_name: false\n  show_label: true\n  size: \"20px\"\n  label: |-\n    [[[\n        var temperature = entity.attributes.temperature;\n        if (temperature == null) {\n          var temperature = '-';\n        }\n        return temperature + '\u00b0C'\n    ]]]\n  styles:\n    label:\n      - color: |\n          [[[\n            if (entity.attributes.hvac_action == 'heating'){\n              return 'var(--card-background-color)';\n            }\n            return 'rgb(var(--color-theme),0.9)';\n          ]]]\n    grid:\n      - grid-template-areas: \"'l'\"\n    card:\n      - box-shadow: \"none\"\n      - padding: \"0px\"\n      - border-radius: \"14px\"\n      - place-self: \"center\"\n      - height: \"42px\"\n      - background-color: |\n          [[[\n            if (entity.attributes.hvac_action == 'heating'){\n              return '#ff8100';\n            }\n            return 'var(--card-background-color)';\n          ]]]\n\nwidget_icon_for_thermostat:\n  tap_action:\n    action: \"toggle\"\n  show_icon: true\n  show_name: false\n  styles:\n    grid:\n      - grid-template-areas: \"'i'\"\n    card:\n      - box-shadow: \"none\"\n      - padding: \"0px\"\n      - background-color: |\n          [[[\n            if (entity.attributes.hvac_action == 'heating'){\n              return 'var(--card-background-color)';\n            }\n            return 'rgba(var(--color-theme),0.05)';\n          ]]]\n      - border-radius: \"14px\"\n      - place-self: \"center\"\n      - height: \"42px\"\n    icon:\n      - color: \"rgba(var(--color-theme),0.9)\"\n  size: \"20px\"\n  color: \"var(--google-grey)\"\n\nlist_items_favorite:\n  styles:\n    grid:\n      - grid-template-areas: \"'item1 item1 item2'\"\n      - grid-template-columns: \"1fr 1fr 1fr\"\n      - grid-template-rows: \"min-content\"\n      - column-gap: \"7px\"\n    card:\n      - box-shadow: \"none\"\n      - padding: \"0px\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_iAbadia_battery_chip/","title":"iAbadia's Battery Chip Custom Card","text":""},{"location":"usage/custom_cards/custom_card_iAbadia_battery_chip/#custom-card-battery-chip","title":"Custom-card \"Battery Chip\"","text":"<p>This is a <code>custom-card</code> or <code>custom-chip</code> to see your device's battery level at a glance.</p> <p></p>"},{"location":"usage/custom_cards/custom_card_iAbadia_battery_chip/#credits","title":"Credits","text":"<p>Author: I\u00f1aki Abadia - 2024 Version: 1.0.0</p>"},{"location":"usage/custom_cards/custom_card_iAbadia_battery_chip/#changelog","title":"Changelog","text":"1.0.0 Initial release"},{"location":"usage/custom_cards/custom_card_iAbadia_battery_chip/#requirements","title":"Requirements","text":"<p>None</p>"},{"location":"usage/custom_cards/custom_card_iAbadia_battery_chip/#usage","title":"Usage","text":"<pre><code>type: \"custom:button-card\"\ntemplate: custom_card_iAbadia_battery_chip\nvariables:\n  ulm_custom_card_iAbadia_battery_chip_entity: sensor.living_room_sensor_battery\n  ulm_custom_card_iAbadia_battery_chip_icon: mdi:thermostat\n  ulm_custom_card_iAbadia_battery_chip_warning: 30\n  ulm_custom_card_iAbadia_battery_chip_danger: 10\n</code></pre>"},{"location":"usage/custom_cards/custom_card_iAbadia_battery_chip/#variables","title":"Variables","text":"Variable Example Required Explanation ulm_custom_card_iAbadia_battery_chip_entity <code>sensor.temperature</code> \u2713 Battery entity ulm_custom_card_iAbadia_battery_chip_icon <code>mdi:thermometer</code> \u2718 Icon to be displayed. Will default to mdi:battery ulm_custom_card_iAbadia_battery_chip_warning <code>20</code> \u2718 Battery level below which to color as warning (yellow) ulm_custom_card_iAbadia_battery_chip_danger <code>10</code> \u2718 Battery level below which to color as danger (red)"},{"location":"usage/custom_cards/custom_card_iAbadia_battery_chip/#template-code","title":"Template Code","text":"Template Code custom_card_irmajavi_speedtest.yaml<pre><code>---\ncustom_card_iAbadia_battery_chip:\n  template:\n    - \"chips\"\n  variables:\n    ulm_custom_card_iAbadia_battery_chip_entity: \"\"\n    ulm_custom_card_iAbadia_battery_chip_icon: \"\"\n    ulm_custom_card_iAbadia_battery_chip_danger: \"10\"\n    ulm_custom_card_iAbadia_battery_chip_warning: \"20\"\n  show_icon: true\n  triggers_update: \"all\"\n  icon: &gt;\n    [[[\n      if (variables.ulm_custom_card_iAbadia_battery_chip_icon){\n        return variables.ulm_custom_card_iAbadia_battery_chip_icon;\n      } else {\n        return \"mdi:battery\"\n      }\n    ]]]\n  entity: \"[[[ return variables.ulm_custom_card_iAbadia_battery_chip_entity; ]]]\"\n  tap_action:\n    action: \"more-info\"\n    entity: \"[[[ return variables.ulm_custom_card_iAbadia_battery_chip_entity; ]]]\"\n  styles:\n    icon:\n      - color: &gt;\n          [[[\n            let battery_level = Math.round((states[variables.ulm_custom_card_iAbadia_battery_chip_entity].state)/1);\n            if (battery_level &gt; variables.ulm_custom_card_iAbadia_battery_chip_warning) {\n              return \"var(--google-green)\"\n            } else if (battery_level &lt;= variables.ulm_custom_card_iAbadia_battery_chip_warning &amp;&amp; battery_level &gt; variables.ulm_custom_card_iAbadia_battery_chip_danger) {\n              return \"var(--google-yellow)\"\n            } else {\n              return \"var(--google-red)\"\n            }\n          ]]]\n    grid:\n      - grid-template-areas: \"'i'\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_imswel_medias/","title":"Custom Card Media","text":""},{"location":"usage/custom_cards/custom_card_imswel_medias/#custom-card-media","title":"Custom Card \"Media\"","text":"<p>These are some <code>custom-card</code> for your plex, radarr and sonarr media libraries.</p> <p> </p>"},{"location":"usage/custom_cards/custom_card_imswel_medias/#credits","title":"Credits","text":"<ul> <li>Author: imswel - 2023</li> <li>Version: 1.0.0</li> </ul>"},{"location":"usage/custom_cards/custom_card_imswel_medias/#changelog","title":"Changelog","text":"1.0.0 Initial release"},{"location":"usage/custom_cards/custom_card_imswel_medias/#requirements","title":"Requirements","text":"<p>This card needs the following to function correctly:</p> Component Required Plex Recently Added Yes for <code>Media Library Card</code> Radarr Upcoming Media Yes for <code>Media Upcoming Card</code> Sonarr Upcoming Media Yes for <code>Media Upcoming Card</code>"},{"location":"usage/custom_cards/custom_card_imswel_medias/#usage","title":"Usage","text":"<p>Media Library Card for Plex Recently Added :</p> <p></p> Variable Default Required Notes ulm_custom_card_imswel_medias_index 1 Yes The index of the item in your Plex library  to show. <pre><code>- type: custom:button-card\n  template: \"custom_card_imswel_medias_library\"\n  entity: sensor.plex_recently_added\n  variables:\n    ulm_custom_card_imswel_medias_index: 1\n</code></pre> <p></p> <p>Media Upcoming Card for Radarr Upcoming Media &amp; Sonarr Upcoming Media :</p> <p> </p> Variable Default Required Notes ulm_custom_card_imswel_medias_index 1 Yes The index of the item in your Radarr/Sonarr library to show. ulm_custom_card_imswel_medias_platform radarr Yes The platform to choose depending on the selected entity.  Can be: <code>radarr</code> or <code>sonarr</code>.  <pre><code>- type: custom:button-card\n  template: \"custom_card_imswel_medias_upcoming\"\n  entity: sensor.sonarr_upcoming_media\n  variables:\n    ulm_custom_card_imswel_medias_index: 1\n    ulm_custom_card_imswel_medias_platform: \"sonarr\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_imswel_medias/#template-code","title":"Template code","text":"Template Code custom_card_imswel_medias.yaml<pre><code>---\ncustom_card_imswel_medias:\n  show_icon: false\n  show_label: true\n  show_name: true\n  show_state: false\n  styles:\n    label:\n      - z-index: 2\n      - color: \"white\"\n      - font-weight: \"bold\"\n      - font-size: \"12px\"\n      - filter: \"opacity(60%)\"\n    name:\n      - z-index: 2\n      - color: \"white\"\n      - font-weight: \"bold\"\n      - font-size: \"14px\"\n    card:\n      - z-index: 0\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - background-size: \"cover\"\n      - background-position: \"center center\"\n      - text-shadow: &gt;\n          [[[\n            return entity == \"undefined\" ? \"none\" : \"1px 1px 5px rgba(18, 22, 23, 0.9)\";\n          ]]]\n\ncustom_card_imswel_medias_library:\n  template:\n    - \"custom_card_imswel_medias\"\n    - \"ulm_translation_engine\"\n    - \"custom_card_imswel_medias_language_variables\"\n  variables:\n    ulm_custom_card_imswel_medias_index: 1\n  triggers_update: \"[[[ return entity.entity_id; ]]]\"\n  aspect_ratio: \"5/2\"\n  label: &gt;\n    [[[\n      if (entity.state == \"unavailable\" || entity.state == \"undefined\"){\n        return variables.ulm_translation_unavailable;\n      } else{\n        var data = entity.attributes.data;\n        if (data[variables.ulm_custom_card_imswel_medias_index].number == undefined){\n          var number = '(' + data[variables.ulm_custom_card_imswel_medias_index].aired.split('-')[0] + ')';\n        } else{\n          var number = data[variables.ulm_custom_card_imswel_medias_index].number;\n        }\n        return `${data[variables.ulm_custom_card_imswel_medias_index].title} ${number}`;\n      }\n    ]]]\n  name: \"[[[ return variables.ulm_custom_card_imswel_recentlyadded ]]]\"\n  styles:\n    label:\n      - align-self: \"start\"\n      - justify-self: \"start\"\n      - margin-left: \"12px\"\n    name:\n      - align-self: \"end\"\n      - justify-self: \"start\"\n      - margin-left: \"12px\"\n    grid:\n      - grid-template-areas: \"'icon .' 'n n' 'l l' '. .'\"\n      - grid-template-rows: \"auto repeat(2, min-content) 12px\"\n    card:\n      - padding: \"0px\"\n      - background-image: &gt;\n          [[[\n            return entity === undefined || `url(${states[entity.entity_id].attributes.data[variables.ulm_custom_card_imswel_medias_index].fanart})`;\n          ]]]\n      - border: \"none\"\n    custom_fields:\n      icon:\n        - z-index: 2\n        - align-self: \"start\"\n        - justify-self: \"start\"\n        - height: \"24px\"\n        - width: \"24px\"\n        - margin-left: \"12px\"\n        - margin-top: \"12px\"\n      blur:\n        - z-index: 1\n        - position: \"absolute\"\n        - top: 0\n        - left: 0\n        - height: \"100%\"\n        - width: \"100%\"\n        - border-radius: \"var(--border-radius)\"\n        - background: \"linear-gradient(rgba(0,0,0,0) 40%, rgba(0,0,0,0.8) 100%)\"\n  custom_fields:\n    icon: &gt;\n      &lt;svg viewBox=\"0 0 50 50\"&gt;\n        &lt;path d=\"M7.7.3h34.6c4.1 0 7.4 3.3 7.4 7.4v34.6c0 4.1-3.3 7.4-7.4 7.4H7.7c-4.1 0-7.4-3.3-7.4-7.4V7.7C.3 3.6 3.6.3 7.7.3z\" fill=\"#282a2d\"/&gt;\n        &lt;path d=\"M25,7.1H14.6L25,25L14.6,42.9H25L35.4,25L25,7.1z\" fill=\"#e5a00d\"/&gt;\n      &lt;/svg&gt;\n    blur: &gt;\n      [[[ return entity === undefined ? null : \"&lt;div id='blur'&gt;&lt;/div&gt;\"; ]]]\n\ncustom_card_imswel_medias_upcoming:\n  template:\n    - \"custom_card_imswel_medias\"\n    - \"ulm_translation_engine\"\n    - \"custom_card_imswel_medias_language_variables\"\n  variables:\n    ulm_custom_card_imswel_medias_index: 1\n    ulm_custom_card_imswel_medias_platform: &gt;\n      [[[\n        if (entity.entity_id.includes(\"sonarr\")){\n          return \"sonarr\";\n        } else if(entity.entity_id.includes(\"plex\")){\n          return \"plex\";\n        } else{\n          return \"radarr\";\n        }\n      ]]]\n  triggers_update: \"all\"\n  aspect_ratio: \"3/4\"\n  label: &gt;\n    [[[\n      var data = entity.attributes?.data;\n      var platform = variables.ulm_custom_card_imswel_medias_platform;\n      var airdate = new Date(data[variables.ulm_custom_card_imswel_medias_index].airdate);\n\n      Date.prototype.addDays = function (days) {\n        const date = new Date(this.valueOf());\n        date.setDate(date.getDate() + days);\n        return date;\n      }\n\n      function formatRelease(release){\n        if(release.includes(\"Available\")){\n          return \"\"\n        } else if (release.includes(\"In Theaters\")){\n          return variables.ulm_custom_card_imswel_in_theaters;\n        }\n      }\n\n      function formatDate(date){\n        var weekday = variables.ulm_custom_card_imswel_weekday;\n        var now = new Date();\n        var tomorrow = now.addDays(1);\n\n        var time = date - now;\n        var secs = parseInt((time / 1000), 10);\n        var days = Math.floor(secs / (3600*24));\n\n        if (days &lt; 6){\n          if (weekday[date.getDay()] == weekday[now.getDay()]){\n            return variables.ulm_custom_card_imswel_today;\n          } else if (weekday[date.getDay()] == weekday[tomorrow.getDay()]){\n            return variables.ulm_custom_card_imswel_tommorow;\n          } else{\n            return weekday[date.getDay()];\n          }\n        } else{\n          return date.toLocaleDateString(variables.ulm_custom_card_imswel_locale);\n        }\n      }\n\n      if(platform == \"radarr\"){\n        var release = data[variables.ulm_custom_card_imswel_medias_index].release;\n        return formatDate(airdate) + \" \" + formatRelease(release);\n      } else if(platform == \"sonarr\"){\n        return formatDate(airdate);\n      }\n    ]]]\n  name: &gt;\n    [[[\n      if (entity.state == \"unavailable\" || entity.state == \"undefined\"){\n        return variables.ulm_translation_unavailable;\n      } else{\n        var data = entity.attributes?.data;\n        var platform = variables.ulm_custom_card_imswel_medias_platform;\n\n        if(platform == \"radarr\"){\n          return `${data[variables.ulm_custom_card_imswel_medias_index].title}`;\n        } else if(platform ==\"sonarr\"){\n          var number = data[variables.ulm_custom_card_imswel_medias_index].number;\n          return `${data[variables.ulm_custom_card_imswel_medias_index].title} - ${number}`;\n        }\n      }\n    ]]]\n  styles:\n    icon:\n    label:\n      - align-self: \"start\"\n      - justify-self: \"center\"\n    name:\n      - align-self: \"end\"\n      - justify-self: \"center\"\n    state:\n    img_cell:\n    grid:\n      - grid-template-areas: \"'. . .' '. n .' '. l .' '. . .'\"\n      - grid-template-columns: \"8px 1fr 8px\"\n      - grid-template-rows: \"auto repeat(2, min-content) 8px\"\n    card:\n      - background-image: &gt;\n          [[[\n            return entity === undefined || `url(${states[entity.entity_id].attributes.data[variables.ulm_custom_card_imswel_medias_index].poster})`;\n          ]]]\n      - border: \"none\"\n    custom_fields:\n      overlay:\n        - z-index: 1\n        - position: \"absolute\"\n        - top: 0\n        - left: 0\n        - height: \"100%\"\n        - width: \"100%\"\n        - border-radius: \"var(--border-radius)\"\n        - background: \"linear-gradient(rgba(0,0,0,0) 50%, rgba(0,0,0,0.8) 100%)\"\n  extra_styles: &gt;\n    .ellipsis:not(#overlay){\n      white-space: normal !important;\n      word-wrap: break-all;\n      max-height: 2.4em;\n      line-height: 1.2em;\n    }\n  custom_fields:\n    overlay: &gt;\n      [[[ return entity === undefined ? null : \"&lt;div id='overlay'&gt;&lt;/div&gt;\"; ]]]\n</code></pre>"},{"location":"usage/custom_cards/custom_card_imswel_person/","title":"Person Card Custom-card","text":""},{"location":"usage/custom_cards/custom_card_imswel_person/#custom-card-person","title":"Custom-card \"Person\"","text":"<p>This is a <code>custom-card</code> that improves the original person card (<code>card_person</code>) by automatically using all zones and adding a pop-up window inspired by the nice theme of @matt8707</p> <p></p>"},{"location":"usage/custom_cards/custom_card_imswel_person/#credits","title":"Credits","text":"<p>Author: imswel - 2022 Version: 1.0.2</p>"},{"location":"usage/custom_cards/custom_card_imswel_person/#changelog","title":"Changelog","text":"1.0.2   UI fix and improvement.  1.0.1   Breaking change: removed variable for zones, instead load all zones automatically.  1.0.0   Initial release"},{"location":"usage/custom_cards/custom_card_imswel_person/#requirements","title":"Requirements","text":"<p>This card needs the following to function correctly:</p> Component / card required browser_mod yes lovelace-card-mod yes"},{"location":"usage/custom_cards/custom_card_imswel_person/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: custom_card_imswel_person\n  variables:\n    ulm_card_imswel_person_entity: person.john\n    ulm_card_imswel_person_wifi_tracker: device_tracker.my_phone_wifi\n    ulm_card_imswel_person_gps_tracker: device_tracker.my_phone\n    ulm_card_imswel_person_findmy_script: script.find_my_phone\n    ulm_card_imswel_person_use_entity_picture: true\n</code></pre>"},{"location":"usage/custom_cards/custom_card_imswel_person/#variables","title":"Variables","text":"Variable Example Required Explanation ulm_card_imswel_person_entity person.john yes The person entity ulm_card_imswel_person_wifi_tracker device_tracker.my_phone_wifi yes A device_tracker entity of the person based on wifi ulm_card_imswel_person_gps_tracker device_tracker.my_phone yes A device_tracker entity of the person based on location ulm_card_imswel_person_findmy_script script.find_my_phone yes A script entity that make ring your phone ulm_card_imswel_person_use_entity_picture true or false no If true, shows the entity picture from your user instead of the icon. Default is false"},{"location":"usage/custom_cards/custom_card_imswel_person/#phone-finder-script-example","title":"Phone finder script example","text":"<pre><code>find_my_phone:\n  sequence:\n  - service: notify.mobile_app_my_android\n    data:\n      message: command_volume_level\n      data:\n        media_stream: alarm_stream\n        command: 20\n  - service: notify.mobile_app_my_android\n    data:\n      message: Home Assistant is searching your phone !\n      data:\n        ttl: 0\n        priority: high\n        channel: alarm_stream\n  mode: single\n</code></pre> Template Code custom_card_imswel_person.yaml<pre><code>---\ncustom_card_imswel_person:\n  template:\n    - \"ulm_translation_engine\"\n    - \"icon_info_bg\"\n    - \"ulm_custom_card_imswel_person_language_variables\"\n    - \"custom_popup_imswel_person\"\n  variables:\n    ulm_card_imswel_person_use_entity_picture: false\n  triggers_update: \"[[[ return variables.ulm_card_imswel_person_entity ]]]\"\n  show_entity_picture: \"[[[ return variables.ulm_card_imswel_person_use_entity_picture ]]]\"\n  show_label: true\n  show_name: true\n  icon: \"mdi:face-man\"\n  entity_picture: &gt;\n    [[[\n      if (variables.ulm_card_imswel_person_use_entity_picture == true){\n        return states[variables.ulm_card_imswel_person_entity].attributes.entity_picture;\n      } else{\n        return null;\n      }\n    ]]]\n  label: &gt;\n    [[[\n      let state = states[variables.ulm_card_imswel_person_entity].state;\n      let option = [\"home\", \"not_home\", \"unavailable\", \"unknown\"];\n      if (option.includes(state)){\n        if (state == \"home\"){\n          return variables.ulm_custom_card_imswel_person_home;\n        } else if (state == \"not_home\"){\n          return variables.ulm_custom_card_imswel_person_not_home;\n        } else{\n          return variables.ulm_translation_unavailable;\n        }\n      } else{\n        return state;\n      }\n    ]]]\n  name: \"[[[ return states[variables.ulm_card_imswel_person_entity].attributes.friendly_name ]]]\"\n  entity: \"[[[ return variables.ulm_card_imswel_person_entity; ]]]\"\n  styles:\n    icon:\n      - color: \"rgba(var(--color-theme), 0.9)\"\n      - width: &gt;\n          [[[\n            if (variables.ulm_card_imswel_person_use_entity_picture == true){\n              return \"42px\";\n            } else {\n              return \"20px\";\n            }\n          ]]]\n    custom_fields:\n      notification:\n        - border-radius: \"50%\"\n        - position: \"absolute\"\n        - left: \"38px\"\n        - top: \"8px\"\n        - height: \"16px\"\n        - width: \"16px\"\n        - border: \"2px solid var(--card-background-color)\"\n        - font-size: \"12px\"\n        - line-height: \"14px\"\n        - background-color: &gt;\n            [[[\n              let state = states[variables.ulm_card_imswel_person_entity].state;\n              let option = [\"unavailable\", \"unknown\"];\n              if (option.includes(state)){\n                return \"rgba(var(--color-red),1)\";\n              } else if (state == 'home') {\n                return \"rgba(var(--color-blue),1)\";\n              } else {\n                return \"rgba(var(--color-green),1)\";\n              }\n            ]]]\n  custom_fields:\n    notification: &gt;\n      [[[\n        var zones = Object.values(states).filter((entity) =&gt; entity.entity_id.startsWith(\"zone.\")).map((entity) =&gt; entity.entity_id);\n        var person_location = states[variables.ulm_card_imswel_person_entity].state;\n        let option = [\"unavailable\", \"unknown\"];\n        if (option.includes(person_location)){\n          return '&lt;ha-icon icon=\"mdi:alert\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;';\n        } else{\n          if (person_location == \"home\"){\n            return '&lt;ha-icon icon=\"mdi:home-variant\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;';\n          } else{\n            for (const item of zones){\n              if (person_location == states[item]?.attributes?.friendly_name){\n                var icon = (states[item].attributes.icon !== null) ? states[item].attributes.icon : 'mdi:help-circle';\n                return '&lt;ha-icon icon=\"' + icon + '\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;';\n              } else if (person_location == 'not_home'){\n                return '&lt;ha-icon icon=\"mdi:home-minus\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;';\n              }\n            }\n          }\n        }\n      ]]]\n\ncustom_popup_imswel_person:\n  tap_action:\n    action: \"fire-dom-event\"\n    browser_mod:\n      service: \"browser_mod.popup\"\n      data:\n        title: \"[[[ return states[variables.ulm_card_imswel_person_entity].attributes.friendly_name ]]]\"\n        size: &gt;\n          [[[\n            const mediaQuery = window.matchMedia(\"(max-width: 800px)\")\n            if (mediaQuery.matches) {\n              return \"fullscreen\";\n            }\n          ]]]\n        style: &gt;\n          --popup-padding-x: 0px;\n          --popup-padding-y: 0px;\n        card_mod:\n          style:\n            ha-dialog: &gt;\n              .content .container{\n                padding: 0 !important;\n              }\n        content:\n          type: \"vertical-stack\"\n          cards:\n            - type: \"entities\"\n              style: &gt;\n                ha-card{\n                  box-shadow: none;\n                }\n              entities:\n                - entity: \"[[[ return variables.ulm_card_imswel_person_entity; ]]]\"\n                  secondary_info: \"last-changed\"\n            - type: \"history-graph\"\n              style: &gt;\n                ha-card{\n                  box-shadow: none;\n                }\n              hours_to_show: 8\n              entities:\n                - entity: \"[[[ return variables.ulm_card_imswel_person_entity; ]]]\"\n                  name: \"\u200e\"\n            - type: \"horizontal-stack\"\n              cards:\n                - type: \"custom:button-card\"\n                  template: \"custom_card_imswel_person_glance_icon\"\n                  entity: \"[[[ return variables.ulm_card_imswel_person_wifi_tracker; ]]]\"\n                  name: \"WiFi\"\n                  icon: \"mdi:wifi\"\n                - type: \"custom:button-card\"\n                  template: \"custom_card_imswel_person_glance_icon\"\n                  entity: \"[[[ return variables.ulm_card_imswel_person_gps_tracker; ]]]\"\n                  name: \"GPS\"\n                  icon: \"mdi:map-marker\"\n            - type: \"custom:button-card\"\n              template: \"custom_card_imswel_person_findmy_button\"\n              entity: \"[[[ return variables.ulm_card_imswel_person_findmy_script; ]]]\"\n            - type: \"map\"\n              style:\n                .: &gt;\n                  ha-card{\n                    box-shadow: none;\n                    border-radius: 0px;\n                  }\n                ha-map:\n                  $: &gt;\n                    .leaflet-control-attribution {\n                      display: none;\n                    }\n              aspect_ratio: \"90%\"\n              default_zoom: 16\n              entities: \"[[[ return [variables.ulm_card_imswel_person_gps_tracker]; ]]]\"\n\ncustom_card_imswel_person_glance_icon:\n  variables:\n    color: \"green\"\n    state: \"home\"\n  tap_action:\n    action: \"none\"\n  triggers_update: \"[[[ return entity.entity_id; ]]]\"\n  show_label: false\n  show_state: false\n  size: \"20px\"\n  state:\n    - operator: \"template\"\n      value: \"[[[ return entity.state == variables.state; ]]]\"\n      styles:\n        icon:\n          - color: \"[[[ return `rgba(var(--color-${variables.color}), 1)`; ]]]\"\n        img_cell:\n          - background-color: \"[[[ return `rgba(var(--color-${variables.color}), 0.2)`; ]]]\"\n  styles:\n    icon:\n      - color: \"rgba(var(--color-theme),0.2)\"\n    name:\n      - margin-bottom: \"12px\"\n      - justify-self: \"center\"\n      - align-self: \"start\"\n      - font-weight: \"regular\"\n      - font-size: \"14px\"\n    img_cell:\n      - background-color: \"rgba(var(--color-theme),0.05)\"\n      - border-radius: \"50%\"\n      - place-self: \"center\"\n      - width: \"42px\"\n      - height: \"42px\"\n    grid:\n      - grid-template-areas: \"'n' 'i'\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"none\"\n\ncustom_card_imswel_person_findmy_button:\n  template:\n    - \"ulm_custom_card_imswel_person_language_variables\"\n  tap_action:\n    action: \"toggle\"\n  icon: \"mdi:volume-high\"\n  size: \"1.4em\"\n  name: \"[[[ return variables.ulm_custom_card_imswel_person_findmy; ]]]\"\n  styles:\n    icon:\n      - color: \"rgba(var(--color-theme),0.4)\"\n    name:\n      - font-size: \"1.06em\"\n      - letterspacing: \"0.015em\"\n      - color: \"rgba(var(--color-theme),1)\"\n      - filter: \"opacity(60%)\"\n    img_cell:\n      - margin-right: \"4px\"\n    grid:\n      - grid-template-areas: \"'i n'\"\n      - grid-column-gap: \"0.3em\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - padding: \"1em 1.4em\"\n      - margin: \"16px auto\"\n      - width: \"100%\"\n      - font-size: \"1.06em\"\n      - box-shadow: \"none\"\n      - border: \"1px solid rgba(var(--color-theme),0.4)\"\n  extra_styles: &gt;\n    :host{\n      align-self: center !important;\n    }\n    ha-card:hover{\n      background: rgba(var(--color-blue),0.2);\n      border: 1px solid rgba(var(--color-blue),0.1) !important;\n    }\n    ha-card:hover #name{\n      color: rgba(var(--color-blue),1) !important;\n      filter: opacity(100%) !important;\n    }\n    ha-card:hover #icon{\n      color: rgba(var(--color-blue),1) !important;\n    }\n</code></pre>"},{"location":"usage/custom_cards/custom_card_input_datetime/","title":"Input Datetime Custom-card","text":""},{"location":"usage/custom_cards/custom_card_input_datetime/#custom-card-input-datetime-card","title":"Custom-card \"Input Datetime Card\"","text":"<p>The <code>card_input_datetime</code> you can control a input_datetime entity.</p> <p></p>"},{"location":"usage/custom_cards/custom_card_input_datetime/#credits","title":"Credits","text":"<p>Author: sildehoop - 2022 Version: 1.0.0</p>"},{"location":"usage/custom_cards/custom_card_input_datetime/#changelog","title":"Changelog","text":"1.0.0 Initial release"},{"location":"usage/custom_cards/custom_card_input_datetime/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template:\n    - card_input_datetime\n  entity: input_datetime.YOUR_INPUT_DATETIME_ENTITY\n  variables:\n    ulm_card_input_datetime_name: \"YOUR_NAME\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_input_datetime/#requirements","title":"Requirements","text":"<p>n/a</p>"},{"location":"usage/custom_cards/custom_card_input_datetime/#variables","title":"Variables","text":"Variable Example Required Explanation"},{"location":"usage/custom_cards/custom_card_input_datetime/#template-code","title":"Template code","text":"Template Code custom_card_input_datetime.yaml<pre><code>---\ncard_input_datetime:\n  show_name: false\n  show_icon: false\n  variables:\n    ulm_card_input_datetime_name: \"n/a\"\n  triggers_update: \"all\"\n  styles:\n    grid:\n      - grid-template-areas: \"'item1' 'item2'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content  min-content\"\n      - row-gap: \"12px\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        template:\n          - \"icon_info\"\n          - \"ulm_translation_engine\"\n          - \"input_datetime\"\n        tap_action:\n          action: \"more-info\"\n        entity: \"[[[ return entity.entity_id ]]]\"\n        name: \"[[[ return variables.ulm_card_input_datetime_name ]]]\"\n    item2:\n      card:\n        type: \"custom:button-card\"\n        template: \"list_3_items\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"input_datetime.set_datetime\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n                data:\n                  time: &gt;\n                    [[[\n                      var timestamp = entity.attributes.timestamp\n\n                      let unix_timestamp = timestamp - 4500;\n                      // Create a new JavaScript Date object based on the timestamp\n                      // multiplied by 1000 so that the argument is in milliseconds, not seconds.\n                      var date = new Date(unix_timestamp * 1000);\n                      // Hours part from the timestamp\n                      var hours = date.getHours();\n                      // Minutes part from the timestamp\n                      var minutes = \"0\" + date.getMinutes();\n                      // Seconds part from the timestamp\n                      var seconds = \"0\" + date.getSeconds();\n\n                      // Will display time in 10:30:23 format\n                      var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n\n                      return formattedTime;\n                    ]]]\n              icon: \"mdi:arrow-down\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_text\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"input_datetime.set_datetime\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n                data:\n                  time: &gt;\n                    [[[\n                      var timestamp = entity.attributes.timestamp\n\n                      let unix_timestamp = timestamp - 3540;\n                      // Create a new JavaScript Date object based on the timestamp\n                      // multiplied by 1000 so that the argument is in milliseconds, not seconds.\n                      var date = new Date(unix_timestamp * 1000);\n                      // Hours part from the timestamp\n                      var hours = date.getHours();\n                      // Minutes part from the timestamp\n                      var minutes = \"0\" + date.getMinutes();\n                      // Seconds part from the timestamp\n                      var seconds = \"0\" + date.getSeconds();\n\n                      // Will display time in 10:30:23 format\n                      var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n\n                      return formattedTime;\n                    ]]]\n              hold_action:\n                action: \"perform-action\"\n                perform_action: \"input_datetime.set_datetime\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n                data:\n                  time: &gt;\n                    [[[\n                      var timestamp = entity.attributes.timestamp\n\n                      let unix_timestamp = timestamp - 3660;\n                      // Create a new JavaScript Date object based on the timestamp\n                      // multiplied by 1000 so that the argument is in milliseconds, not seconds.\n                      var date = new Date(unix_timestamp * 1000);\n                      // Hours part from the timestamp\n                      var hours = date.getHours();\n                      // Minutes part from the timestamp\n                      var minutes = \"0\" + date.getMinutes();\n                      // Seconds part from the timestamp\n                      var seconds = \"0\" + date.getSeconds();\n\n                      // Will display time in 10:30:23 format\n                      var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n\n                      return formattedTime;\n                    ]]]\n\n          item3:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"input_datetime.set_datetime\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n                data:\n                  time: &gt;\n                    [[[\n                      var timestamp = entity.attributes.timestamp\n\n                      let unix_timestamp = timestamp - 2700;\n                      var date = new Date(unix_timestamp * 1000);\n                      var hours = date.getHours();\n                      var minutes = \"0\" + date.getMinutes();\n                      var seconds = \"0\" + date.getSeconds();\n                      var formattedTime = hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n\n                      return formattedTime;\n                    ]]]\n              icon: \"mdi:arrow-up\"\n\ninput_datetime:\n  tap_action:\n    action: \"more-info\"\n  show_last_changed: true\n\nwidget_text:\n  tap_action:\n    action: \"toggle\"\n  template:\n    - \"ulm_translation_engine\"\n  show_icon: false\n  show_label: true\n  show_name: false\n  label: \"[[[ return variables.ulm_translation_state ]]]\"\n  styles:\n    grid:\n      - grid-template-areas: \"'l'\"\n    card:\n      - box-shadow: \"none\"\n      - padding: \"0px\"\n      - background-color: \"rgba(var(--color-theme),0.05)\"\n      - border-radius: \"14px\"\n      - place-self: \"center\"\n      - height: \"42px\"\n    state:\n      - color: \"rgba(var(--color-theme),0.9)\"\n  size: \"20px\"\n  color: \"var(--google-grey)\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_input_number/","title":"Input Number Custom-card","text":""},{"location":"usage/custom_cards/custom_card_input_number/#custom-card-input-number","title":"Custom-card \"Input Number\"","text":"<p>The <code>card_input_number</code> you can control a input_number entity</p> <p></p>"},{"location":"usage/custom_cards/custom_card_input_number/#credits","title":"CreditsBraking changes","text":"<p>Author: sildehoop - 2021 Version: 1.1.0</p> 1.1.0 <pre><code>#OLD\n- type: \"custom:button-card\"\n  template:\n    - card_input_number\n  variables:\n    ulm_card_input_number_name: \"YOUR_NAME\"\n    ulm_card_input_number_entity: \"input_number.YOUR_INPUT_NUMBER\"\n</code></pre> <pre><code>#NEW\n- type: \"custom:button-card\"\n  template: card_input_number\n  entity: input_number.YOUR_INPUT_NUMBER_ENTITY\n  variables:\n    ulm_card_input_number_name: \"YOUR_CARD_NAME\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_input_number/#changelog","title":"Changelog","text":"1.1.0 Adds ability to work with counter entities. Compatibility with input number entities is not affected.  1.0.1 Added option to leave ulm_card_input_number_name empty (takes the friendly_name of the entity) Removed background from middle text (because it is not a button). Removed variables ulm_card_input_number_entity.  1.0.0 Initial release"},{"location":"usage/custom_cards/custom_card_input_number/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: card_input_number\n  entity: input_number.YOUR_INPUT_NUMBER\n  variables:\n    ulm_card_input_number_name: \"YOUR_NAME\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_input_number/#requirements","title":"Requirements","text":"<p>n/a</p>"},{"location":"usage/custom_cards/custom_card_input_number/#variables","title":"Variables","text":"Variable Example Required Explanation ulm_card_input_number_name Bathroom Ceiling Fan Threshold false The name to display on your card"},{"location":"usage/custom_cards/custom_card_input_number/#template-code","title":"Template code","text":"Template Code custom_card_input_number.yaml<pre><code>---\ncard_input_number:\n  variables:\n    ulm_card_input_number_name: \"[[[ return entity.attributes.friendly_name ]]]\"\n  triggers_update: \"all\"\n  show_icon: false\n  show_label: false\n  show_name: false\n  styles:\n    grid:\n      - grid-template-areas: \"'item1' 'item2'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content  min-content\"\n      - row-gap: \"12px\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        template:\n          - \"icon_info\"\n          - \"ulm_translation_engine\"\n          - \"input_number\"\n        tap_action:\n          action: \"more-info\"\n        entity: \"[[[ return entity.entity_id ]]]\"\n        name: \"[[[ return variables.ulm_card_input_number_name ]]]\"\n    item2:\n      card:\n        type: \"custom:button-card\"\n        template: \"list_3_items\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: |\n                  [[[\n                    if( entity.entity_id.startsWith(\"input_number.\") )\n                      return \"input_number.decrement\";\n                    else if( entity.entity_id.startsWith(\"counter.\") )\n                      return \"counter.decrement\";\n                    else if( entity.entity_id.startsWith(\"select.\") )\n                      return \"select.select_previous\";\n                    return \"\";\n                  ]]]\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n              icon: \"mdi:arrow-down\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_text\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"cover.stop_cover\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n          item3:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: |\n                  [[[\n                    if( entity.entity_id.startsWith(\"input_number.\") )\n                      return \"input_number.increment\";\n                    else if( entity.entity_id.startsWith(\"counter.\") )\n                      return \"counter.increment\";\n                    else if( entity.entity_id.startsWith(\"select.\") )\n                      return \"select.select_next\";\n                    return \"\";\n                  ]]]\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n              icon: \"mdi:arrow-up\"\n\ninput_number:\n  tap_action:\n    action: \"more-info\"\n  show_last_changed: true\n\nwidget_text:\n  tap_action:\n    action: \"toggle\"\n  template:\n    - \"ulm_translation_engine\"\n  show_icon: false\n  show_label: true\n  show_name: false\n  label: \"[[[ return variables.ulm_translation_state ]]]\"\n  styles:\n    grid:\n      - grid-template-areas: \"'l'\"\n    card:\n      - box-shadow: \"none\"\n      - padding: \"0px\"\n      - border-radius: \"14px\"\n      - place-self: \"center\"\n      - height: \"42px\"\n    state:\n      - color: \"rgba(var(--color-theme),0.9)\"\n  size: \"20px\"\n  color: \"var(--google-grey)\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_irmajavi_entities/","title":"Entities Custom-card","text":""},{"location":"usage/custom_cards/custom_card_irmajavi_entities/#custom-card-entities","title":"Custom-card \"Entities\"","text":"<p>This is a <code>custom-card</code> to display states from multiple entities or from an entity with multiples attributes (To use it with attributes need to modify the code)</p> <p></p>"},{"location":"usage/custom_cards/custom_card_irmajavi_entities/#credits","title":"Credits","text":"<p>Author: irmajavi - 2022 Version: 1.0.0</p>"},{"location":"usage/custom_cards/custom_card_irmajavi_entities/#changelog","title":"Changelog","text":"1.0.0 Initial release"},{"location":"usage/custom_cards/custom_card_irmajavi_entities/#requirements","title":"Requirements","text":"<p>none</p>"},{"location":"usage/custom_cards/custom_card_irmajavi_entities/#usage","title":"Usage","text":"<pre><code>type: custom:button-card\ntemplate: custom_card_irmajavi_entities\nvariables:\n  ulm_custom_card_irmajavi_entities_entity_1: sensor.inverter_voltage\n  ulm_custom_card_irmajavi_entities_entity_2: sensor.inverter_temperature\n  ulm_custom_card_irmajavi_entities_entity_3: sensor.active_ac_power\n  ulm_custom_card_irmajavi_entities_entity_4: sensor.ac_load_current\n  ulm_custom_card_irmajavi_entities_name_1: Voltage\n  ulm_custom_card_irmajavi_entities_name_2: Temperature\n  ulm_custom_card_irmajavi_entities_name_3: AC Power\n  ulm_custom_card_irmajavi_entities_name_4: Current\n  ulm_custom_card_irmajavi_entities_name: System Status\n  ulm_custom_card_irmajavi_entities: sensor.inverter_operating_mode\n</code></pre>"},{"location":"usage/custom_cards/custom_card_irmajavi_entities/#variables","title":"Variables","text":"Variable Example Required Explanation ulm_custom_card_irmajavi_entities sensor.main Yes Main entity ulm_custom_card_irmajavi_entitites_name Status Yes Main entity name ulm_custom_card_irmajavi_entities_entity_1 sensor.test1 Yes The first entity ulm_custom_card_irmajavi_entities_entity_2 sensor.test2 Yes The second entity ulm_custom_card_irmajavi_entities_entity_3 sensor.test3 Yes The third entity ulm_custom_card_irmajavi_entities_entity_4 sensor.test4 Yes The forth entity ulm_custom_card_irmajavi_entities_name_1 Test1 Yes The name of the first entity ulm_custom_card_irmajavi_entities_name_2 Test2 Yes The name of the second entity ulm_custom_card_irmajavi_entities_name_3 Test3 Yes The name of the third entity ulm_custom_card_irmajavi_entities_name_4 Test4 Yes The name of the forth entity"},{"location":"usage/custom_cards/custom_card_irmajavi_entities/#template-code","title":"Template Code","text":"Template Code custom_card_irmajavi_entities.yaml<pre><code>---\ncustom_card_irmajavi_entities:\n  template:\n    - \"ulm_translation_engine\"\n  triggers_update: \"all\"\n  show_icon: false\n  show_name: false\n  show_label: false\n  styles:\n    grid:\n      - grid-template-areas: \"'item1' 'item2''item3' 'item4'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content min-content\"\n      - row-gap: \"12px\"\n    card:\n      - border-radius: \"30px\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n      - height: \"160px\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        color: \"var(--google-grey)\"\n        show_icon: false\n        show_label: true\n        show_name: true\n        styles:\n          name:\n            - align-self: \"start\"\n            - justify-self: \"start\"\n            - font-weight: \"bold\"\n            - font-size: \"14px\"\n            - margin-left: \"12px\"\n          grid:\n            - grid-template-areas: \"'n' 'l'\"\n            - grid-template-columns: \"min-content auto min-content\"\n            - grid-template-rows: \"min-content min-content\"\n          card:\n            - box-shadow: \"none\"\n            - border-radius: \"20px\"\n            - border: \"2px solid var(--google-grey)\"\n            - height: \"70px\"\n          label:\n            - justify-self: \"start\"\n            - align-self: \"end\"\n            - font-weight: \"bold\"\n            - font-size: \"14px\"\n            - filter: \"opacity(40%)\"\n            - margin-left: \"35px\"\n        name: |\n          [[[\n            var icon = '\ud83d\udc7d';\n            if (variables.ulm_custom_card_irmajavi_entities_icon)\n            {\n              var icon = variables.ulm_custom_card_irmajavi_entities_icon;\n            }\n            return icon + \"' '\" + variables.ulm_custom_card_irmajavi_entities_name;\n          ]]]\n        label: |\n          [[[ return states[variables.ulm_custom_card_irmajavi_entities].state ]]]\n    item2:\n      card:\n        type: \"custom:button-card\"\n        template: \"list_4_items\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template: \"custom_widget_irmajavi\"\n              entity: &gt;-\n                [[[ return variables.ulm_custom_card_irmajavi_entities_entity_1;\n                ]]]\n              name: &gt;-\n                [[[ return variables.ulm_custom_card_irmajavi_entities_name_1\n                ]]]\n          item2:\n            card:\n              type: \"custom:button-card\"\n              template: \"custom_widget_irmajavi\"\n              entity: &gt;-\n                [[[ return variables.ulm_custom_card_irmajavi_entities_entity_2;\n                ]]]\n              name: &gt;-\n                [[[ return variables.ulm_custom_card_irmajavi_entities_name_2\n                ]]]\n          item3:\n            card:\n              type: \"custom:button-card\"\n              template: \"custom_widget_irmajavi\"\n              entity: &gt;-\n                [[[ return variables.ulm_custom_card_irmajavi_entities_entity_3;\n                ]]]\n              name: &gt;-\n                [[[ return variables.ulm_custom_card_irmajavi_entities_name_3\n                ]]]\n          item4:\n            card:\n              type: \"custom:button-card\"\n              template: \"custom_widget_irmajavi\"\n              entity: &gt;-\n                [[[ return variables.ulm_custom_card_irmajavi_entities_entity_4;\n                ]]]\n              name: &gt;-\n                [[[ return variables.ulm_custom_card_irmajavi_entities_name_4\n                ]]]\ncustom_widget_irmajavi:\n  show_label: true\n  show_icon: false\n  label: \"[[[ return variables.ulm_translation_state ]]]\"\n  styles:\n    name:\n      - justify-self: \"center\"\n      - align-self: \"start\"\n      - font-weight: \"bolder\"\n      - font-size: \"12px\"\n      - filter: \"opacity(40%)\"\n    label:\n      - margin-top: \"10px\"\n      - justify-self: \"center\"\n      - font-weight: \"bold\"\n      - font-size: \"14px\"\n    grid:\n      - grid-template-areas: \"'l' 'n'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content min-content\"\n    card:\n      - box-shadow: \"none\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_irmajavi_speedtest/","title":"Speedtest Custom-card","text":""},{"location":"usage/custom_cards/custom_card_irmajavi_speedtest/#custom-card-speedtest","title":"Custom-card \"Speedtest\"","text":"<p>This is a <code>custom-card</code> to display the results from the <code>Speedtest.net</code> integration. The integration uses the Speedtest.net web service to measure network bandwidth performance.</p> <p></p>"},{"location":"usage/custom_cards/custom_card_irmajavi_speedtest/#credits","title":"CreditsBreaking changes","text":"<p>Author: irmajavi - 2022 Version: 1.0.0</p> 1.1.0  Changed from speedtestdotnet.speedtest service to update entity service from Home Assistant due to announced deprecation of the speedtest service."},{"location":"usage/custom_cards/custom_card_irmajavi_speedtest/#changelog","title":"Changelog","text":"1.1.0 The variable ulm_custom_card_irmajavi_speedtest_download_speed_entity is now used to trigger an update of all the speedtest sensors.  1.0.0 Initial release"},{"location":"usage/custom_cards/custom_card_irmajavi_speedtest/#requirements","title":"Requirements","text":"<p>Home Assistant Speedtest.net integration</p>"},{"location":"usage/custom_cards/custom_card_irmajavi_speedtest/#usage","title":"Usage","text":"<pre><code>type: custom:button-card\ntemplate: custom_card_irmajavi_speedtest\nvariables:\n  ulm_custom_card_irmajavi_speedtest_download_speed_entity: sensor.speedtest_download\n  ulm_custom_card_irmajavi_speedtest_upload_speed_entity: sensor.speedtest_upload\n  ulm_custom_card_irmajavi_speedtest_ping_entity: sensor.speedtest_ping\n  ulm_custom_card_irmajavi_speedtest_color: blue\n  ulm_custom_card_irmajavi_speedtest_router_name: router_name\n  ulm_custom_card_irmajavi_speedtest_router_model: router_model\n</code></pre>"},{"location":"usage/custom_cards/custom_card_irmajavi_speedtest/#variables","title":"Variables","text":"Variable Example Required Explanation ulm_custom_card_irmajavi_speedtest_router_name Linksys Yes Your router name ulm_custom_card_irmajavi_speedtest_router_model EA8549 Yes Your router model ulm_custom_card_irmajavi_speedtest_color blue Yes The color of the icon ulm_custom_card_irmajavi_speedtest_upload_speed_entity sensor.test2 Yes The upload sensor created by the integration ulm_custom_card_irmajavi_speedtest_download_speed_entity sensor.test3 Yes The download sensor created by the integration ulm_custom_card_irmajavi_speedtest_ping_entity sensor.test4 Yes The ping sensor created by the integration"},{"location":"usage/custom_cards/custom_card_irmajavi_speedtest/#template-code","title":"Template Code","text":"Template Code custom_card_irmajavi_speedtest.yaml<pre><code>---\ncustom_card_irmajavi_speedtest:\n  triggers_update: \"all\"\n  show_name: false\n  show_label: false\n  template:\n    - \"ulm_custom_card_irmajavi_speedtest_language_variables\"\n  variables:\n    ulm_custom_card_irmajavi_speedtest_color: \"blue\"\n    ulm_custom_card_irmajavi_speedtest_router_name: \"router_name\"\n    ulm_custom_card_irmajavi_speedtest_router_model: \"router_model\"\n  styles:\n    grid:\n      - grid-template-areas: \"'item1' 'item2' 'item3'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content  min-content\"\n      - row-gap: \"12px\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        tap_action:\n          action: \"none\"\n        show_last_changed: false\n        show_label: true\n        show_name: true\n        show_icon: true\n        label: &gt;-\n          [[[ return variables.ulm_custom_card_irmajavi_speedtest_router_model ]]]\n        name: &gt;-\n          [[[ return variables.ulm_custom_card_irmajavi_speedtest_router_name ]]]\n        icon: \"mdi:wifi\"\n        styles:\n          icon:\n            - color: &gt;-\n                [[[ return\n                `rgba(var(--color-${variables.ulm_custom_card_irmajavi_speedtest_color}),\n                1)`; ]]]\n            - width: \"32px\"\n          label:\n            - justify-self: \"center\"\n            - align-self: \"start\"\n            - font-weight: \"bolder\"\n            - font-size: \"12px\"\n            - filter: \"opacity(40%)\"\n          name:\n            - margin-top: \"10px\"\n            - justify-self: \"center\"\n            - font-weight: \"bold\"\n            - font-size: \"14px\"\n          img_cell:\n            - background-color: &gt;-\n                [[[ return\n                `rgba(var(--color-${variables.ulm_custom_card_irmajavi_speedtest_color}),\n                0.2)`; ]]]\n            - border-radius: \"50%\"\n            - place-self: \"center\"\n            - width: \"62px\"\n            - height: \"62px\"\n          grid:\n            - grid-template-areas: \"'i' 'n' 'l'\"\n          card:\n            - box-shadow: \"none\"\n        size: \"20px\"\n    item2:\n      card:\n        type: \"custom:button-card\"\n        tap_action:\n          action: \"perform-action\"\n          perform_action: \"homeassistant.update_entity\"\n          target:\n            entity_id:\n              - \"[[[ return variables.ulm_custom_card_irmajavi_speedtest_download_speed_entity]]]\"\n              - \"[[[ return variables.ulm_custom_card_irmajavi_speedtest_upload_speed_entity]]]\"\n              - \"[[[ return variables.ulm_custom_card_irmajavi_speedtest_ping_entity]]]\"\n        color: \"var(--google-grey)\"\n        show_icon: true\n        show_label: false\n        show_name: true\n        styles:\n          custom_fields:\n            item1:\n              - justify-self: \"end\"\n              - margin-top: \"-23px\"\n              - margin-right: \"3px\"\n          icon:\n            - color: \"rgba(var(--color-theme),0.9)\"\n            - width: \"20px\"\n          img_cell:\n            - background-color: \"none\"\n            - place-self: \"center\"\n            - justify-self: \"start\"\n            - width: \"40px\"\n            - height: \"20px\"\n          name:\n            - align-self: \"end\"\n            - justify-self: \"start\"\n            - font-weight: \"bold\"\n            - font-size: \"16px\"\n            - margin-left: \"40px\"\n            - margin-top: \"3px\"\n          grid:\n            - grid-template-areas: \"i n item1\"\n            - grid-template-columns: \"min-content\"\n            - grid-template-rows: \"auto\"\n          card:\n            - box-shadow: \"none\"\n            - border-radius: \"10px\"\n            - border: \"2px solid var(--google-grey)\"\n            - padding_bottom: \"-8px\"\n            - height: \"40px\"\n            - padding-top: \"5px\"\n            - padding-left: \"5px\"\n        name: \"[[[ return variables.ulm_custom_card_irmajavi_speedtest_speedtest ]]]\"\n        icon: \"mdi:speedometer\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              show_icon: true\n              show_name: false\n              show_label: false\n              styles:\n                icon:\n                  - color: \"rgba(var(--color-theme),0.9)\"\n                  - width: \"20px\"\n                  - justify-self: \"end\"\n                grid:\n                  - grid-template-areas: \"i\"\n                  - grid-template-columns: \"auto\"\n                  - grid-template-rows: \"auto\"\n                card:\n                  - box-shadow: \"none\"\n              icon: \"mdi:chevron-right\"\n    item3:\n      card:\n        type: \"custom:button-card\"\n        template: \"list_2_items\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              color: \"var(--google-blue)\"\n              show_label: true\n              show_icon: false\n              name: \"[[[ return variables.ulm_custom_card_irmajavi_speedtest_download ]]]\"\n              entity: &gt;-\n                [[[ return\n                variables.ulm_custom_card_irmajavi_speedtest_download_speed_entity;\n                ]]]\n              label: |\n                [[[\n                    var state1 = \"\";\n                    if (states[variables.ulm_custom_card_irmajavi_speedtest_download_speed_entity].state){\n                      var state1 = states[variables.ulm_custom_card_irmajavi_speedtest_download_speed_entity].state;\n                      if (states[variables.ulm_custom_card_irmajavi_speedtest_download_speed_entity].attributes.unit_of_measurement){\n                        state1 += states[variables.ulm_custom_card_irmajavi_speedtest_download_speed_entity].attributes.unit_of_measurement;\n                      }\n                    }\n                    return state1;\n                ]]]\n              styles:\n                icon:\n                  - width: \"30px\"\n                  - height: \"30px\"\n                label:\n                  - align-self: \"center\"\n                  - justify-self: \"center\"\n                  - font-weight: \"bold\"\n                  - font-size: \"23px\"\n                name:\n                  - align-self: \"center\"\n                  - justify-self: \"center\"\n                  - font-weight: \"bold\"\n                  - font-size: \"12px\"\n                  - filter: \"opacity(40%)\"\n                grid:\n                  - grid-template-areas: \"'l' 'n'\"\n                  - grid-template-columns: \"auto\"\n                  - grid-template-rows: \"min-content\"\n                card:\n                  - box-shadow: \"none\"\n                  - padding-top: \"15px\"\n                  - padding-botton: \"10px\"\n                  - background-color: \"rgba(var(--color-theme),0.05)\"\n                  - border-radius: \"14px\"\n                  - place-self: \"center\"\n                  - height: \"80px\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              color: \"var(--google-blue)\"\n              show_label: true\n              show_icon: false\n              name: \"[[[ return variables.ulm_custom_card_irmajavi_speedtest_upload ]]]\"\n              entity: &gt;-\n                [[[ return\n                variables.ulm_custom_card_irmajavi_speedtest_upload_speed_entity;\n                ]]]\n              label: |\n                [[[\n                    var state1 = \"\";\n                    if (states[variables.ulm_custom_card_irmajavi_speedtest_upload_speed_entity].state){\n                      var state1 = states[variables.ulm_custom_card_irmajavi_speedtest_upload_speed_entity].state;\n                      if (states[variables.ulm_custom_card_irmajavi_speedtest_upload_speed_entity].attributes.unit_of_measurement){\n                        state1 += states[variables.ulm_custom_card_irmajavi_speedtest_upload_speed_entity].attributes.unit_of_measurement;\n                      }\n                    }\n                    return state1;\n                ]]]\n              styles:\n                icon:\n                  - width: \"30px\"\n                  - height: \"30px\"\n                label:\n                  - align-self: \"center\"\n                  - justify-self: \"center\"\n                  - font-weight: \"bold\"\n                  - font-size: \"23px\"\n                name:\n                  - align-self: \"center\"\n                  - justify-self: \"center\"\n                  - font-weight: \"bold\"\n                  - font-size: \"12px\"\n                  - filter: \"opacity(40%)\"\n                grid:\n                  - grid-template-areas: \"'l' 'n'\"\n                  - grid-template-columns: \"auto\"\n                  - grid-template-rows: \"min-content\"\n                card:\n                  - box-shadow: \"none\"\n                  - padding-top: \"15px\"\n                  - padding-botton: \"10px\"\n                  - background-color: \"rgba(var(--color-theme),0.05)\"\n                  - border-radius: \"14px\"\n                  - place-self: \"center\"\n                  - height: \"80px\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_irmajavi_weather/","title":"Weather Custom-card","text":""},{"location":"usage/custom_cards/custom_card_irmajavi_weather/#custom-card-weather","title":"Custom-card \"Weather\"","text":"<p>This is a <code>custom-card</code> to display states from weather entities or from a weather entity with multiples attributes (To use it with attributes need to modify the code)</p> <p></p>"},{"location":"usage/custom_cards/custom_card_irmajavi_weather/#credits","title":"Credits","text":"<p>Author: irmajavi - 2022 Version: 1.0.0</p>"},{"location":"usage/custom_cards/custom_card_irmajavi_weather/#changelog","title":"Changelog","text":"1.0.0 Initial release"},{"location":"usage/custom_cards/custom_card_irmajavi_weather/#requirements","title":"Requirements","text":"<p>In your <code>configuration.yaml</code> you need to create a new sensor in order to use the custom date format the card uses.</p> <pre><code>- platform: template\n  sensors:\n    date_long:\n      friendly_name: \"Date and Day of week\"\n      value_template: &gt;\n        {% set months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Agu\", \"Sep\", \"Oct\", \"Nov\", \"Dic\"] %}\n        {% set days = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"] %}\n        {{ months[now().month-1] }}.{{ now().day }}th. {{ days[now().weekday()] }}\n</code></pre>"},{"location":"usage/custom_cards/custom_card_irmajavi_weather/#usage","title":"Usage","text":"<pre><code>type: custom:button-card\ntemplate: custom_card_irmajavi_weather\nvariables:\n  ulm_custom_card_irmajavi_weather: weather.aguada_2\n  ulm_custom_card_irmajavi_weather_entity_1: sensor.aguada_wind\n  ulm_custom_card_irmajavi_weather_entity_2: sensor.aguada_precipitation\n  ulm_custom_card_irmajavi_weather_entity_3: sensor.aguada_uv_index\n  ulm_custom_card_irmajavi_weather_entity_4: sensor.weather_humidity\n  ulm_custom_card_irmajavi_weather_name_1: Wind\n  ulm_custom_card_irmajavi_weather_name_2: Precipitation\n  ulm_custom_card_irmajavi_weather_name_3: UV\n  ulm_custom_card_irmajavi_weather_name_4: Humidity\n  ulm_custom_card_irmajavi_weather_temperature_outside: sensor.aguada_realfeel_temperature\n  ulm_custom_card_irmajavi_weather_date: sensor.date_long\n</code></pre>"},{"location":"usage/custom_cards/custom_card_irmajavi_weather/#variables","title":"Variables","text":"Variable Example Required Explanation ulm_custom_card_irmajavi_weather weather.yourplace Yes The main entity ulm_custom_card_irmajavi_weather_entity_1 weather.humidity Yes Weather entity ulm_custom_card_irmajavi_weather_entity_2 sensor.test1 Yes Weather entity ulm_custom_card_irmajavi_weather_entity_3 sensor.test2 Yes Weather entity ulm_custom_card_irmajavi_weather_entity_4 sensor.test3 Yes Weather entity ulm_custom_card_irmajavi_weather_name_1 Wind Yes Entity name ulm_custom_card_irmajavi_weather_name_2 Humidity Yes Entity name ulm_custom_card_irmajavi_weather_name_3 UV Index Yes Entity name ulm_custom_card_irmajavi_weather_name_4 Precipitation Yes Entity name ulm_custom_card_irmajavi_weather_temperature_outside sensor.test4 Yes Weather entity ulm_custom_card_irmajavi_weather_date sensor.test5 Yes Custom date format sensor"},{"location":"usage/custom_cards/custom_card_irmajavi_weather/#template-code","title":"Template Code","text":"Template Code custom_card_irmajavi_weather.yaml<pre><code>---\ncustom_card_irmajavi_weather:\n  show_icon: false\n  show_name: false\n  show_label: false\n  styles:\n    grid:\n      - grid-template-areas: \"'item1' 'item2' 'item3' 'item4'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content min-content\"\n      - row-gap: \"12px\"\n    card:\n      - border-radius: \"30px\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n      - height: \"160px\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        color: \"var(--google-grey)\"\n        show_icon: false\n        show_label: true\n        show_name: true\n        styles:\n          name:\n            - justify-self: \"end\"\n            - align-self: \"end\"\n            - font-weight: \"bold\"\n            - font-size: \"20px\"\n            - border: \"10px solid var(--google-grey)\"\n            - background-color: \"var(--google-grey)\"\n            - color: \"#000000\"\n            - border-radius: \"12px\"\n            - margin-right: \"10px\"\n            - margin-top: \"'-4px'\"\n          label:\n            - align-self: \"start\"\n            - justify-self: \"center\"\n            - font-weight: \"bold\"\n            - font-size: \"14px\"\n            - margin-left: \"12px\"\n          grid:\n            - grid-template-areas: \"'l n item1'\"\n            - grid-template-columns: \"min-content auto min-content\"\n            - grid-template-rows: \"min-content min-content\"\n          card:\n            - box-shadow: \"none\"\n            - border-radius: \"20px\"\n            - border: \"2px solid var(--google-grey)\"\n            - height: \"70px\"\n        label: |\n          [[[\n            var icon = '\u2754';\n            if (states[variables.ulm_custom_card_irmajavi_weather].state == 'clear-night'){\n              var icon = '\ud83c\udf19';\n            } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'cloudy'){\n              var icon = '\u2601\ufe0f';\n            } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'exceptional'){\n              var icon = '\ud83c\udf1e';\n            } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'fog'){\n              var icon = '\ud83c\udf2b\ufe0f';\n            } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'hail'){\n              var icon = '\u26c8\ufe0f';\n            } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'lightning'){\n              var icon = '\u26a1';\n            } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'lightning-rainy'){\n              var icon = '\u26c8\ufe0f';\n            } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'partlycloudy'){\n              var icon = '\u26c5';\n            } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'pouring'){\n              var icon = '\ud83c\udf27\ufe0f';\n            } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'rainy'){\n              var icon = '\ud83d\udca7';\n            } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'snowy'){\n              var icon = '\u2744\ufe0f';\n            } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'snowy-rainy'){\n              var icon = '\ud83c\udf28\ufe0f';\n            } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'sunny'){\n              var icon = '\u2600\ufe0f';\n            } else if(states[variables.ulm_custom_card_irmajavi_weather].state == 'windy'){\n              var icon = '\ud83c\udf2a\ufe0f';\n            }\n            return icon + ' ' + states[variables.ulm_custom_card_irmajavi_weather_date].state;\n          ]]]\n        name: |\n          [[[\n            var unit = states[variables.ulm_custom_card_irmajavi_weather_temperature_outside].attributes.unit_of_measurement != null ? ' ' + states[variables.ulm_custom_card_irmajavi_weather_temperature_outside].attributes.unit_of_measurement : ''\n            return states[variables.ulm_custom_card_irmajavi_weather_temperature_outside].state + unit;\n          ]]]\n    item2:\n      card:\n        type: \"custom:button-card\"\n        template: \"list_4_items\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template: \"generic_text\"\n              entity: \"'[[[ return variables.ulm_custom_card_irmajavi_weather_entity_1; ]]]'\"\n              name: \"'[[[ return variables.ulm_custom_card_irmajavi_weather_name_1; ]]]'\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              template: \"generic_text\"\n              entity: \"'[[[ return variables.ulm_custom_card_irmajavi_weather_entity_2; ]]]'\"\n              name: \"'[[[ return variables.ulm_custom_card_irmajavi_weather_name_2; ]]]'\"\n          item3:\n            card:\n              type: \"custom:button-card\"\n              template: \"generic_text\"\n              entity: \"'[[[ return variables.ulm_custom_card_irmajavi_weather_entity_3; ]]]'\"\n              name: \"'[[[ return variables.ulm_custom_card_irmajavi_weather_name_3; ]]]'\"\n          item4:\n            card:\n              type: \"custom:button-card\"\n              template: \"generic_text\"\n              entity: \"'[[[ return variables.ulm_custom_card_irmajavi_weather_entity_4; ]]]'\"\n              name: \"'[[[ return variables.ulm_custom_card_irmajavi_weather_name_4; ]]]'\"\ngeneric_text:\n  show_label: true\n  show_icon: false\n  label: |\n    [[[\n      var unit = entity.attributes.unit_of_measurement != null ? ' ' + entity.attributes.unit_of_measurement : ''\n      return entity.state + unit;\n    ]]]\n  styles:\n    name:\n      - justify-self: \"center\"\n      - align-self: \"start\"\n      - font-weight: \"bolder\"\n      - font-size: \"12px\"\n      - filter: \"opacity(40%)\"\n    label:\n      - margin-top: \"10px\"\n      - justify-self: \"center\"\n      - font-weight: \"bold\"\n      - font-size: \"14px\"\n    grid:\n      - grid-template-areas: \"'l' 'n'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content min-content\"\n    card:\n      - box-shadow: \"none\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_light_colorpick/","title":"Colorpicker Light Card Custom-card","text":""},{"location":"usage/custom_cards/custom_card_light_colorpick/#custom-card-colorpicker-light-card","title":"Custom-card \"Colorpicker Light Card\"","text":"<p>This is a <code>custom-card</code> to add additional function to the <code>light_card</code>.</p> <p>The card uses a slider as well as six conditional icons to pick the color of the light.</p>"},{"location":"usage/custom_cards/custom_card_light_colorpick/#credits","title":"Credits","text":"<p>Author: 13robin37 - 2021 Version: 1.0.0</p>"},{"location":"usage/custom_cards/custom_card_light_colorpick/#changelog","title":"Changelog","text":"1.0.0 Initial release"},{"location":"usage/custom_cards/custom_card_light_colorpick/#requirements","title":"Requirements","text":"<p>This card needs the following to function correctly:</p> Component / card required Note light-entity yes RGB Light Card yes"},{"location":"usage/custom_cards/custom_card_light_colorpick/#usage","title":"Usage","text":"<pre><code>- type: custom:button-card\n  template: card_light_colorpick\n  entity: light.your_light\n  variables:\n    ulm_card_light_colorpick_name: Ceiling light\n    ulm_card_light_colorpick_transition: 1\n</code></pre>"},{"location":"usage/custom_cards/custom_card_light_colorpick/#variables","title":"Variables","text":"Card type Variable Example Required Explanation all ulm_card_light_colorpick_name Light no This is the name the card shows all ulm_card_light_colorpick_transition 1 no This is the color change transition in seconds"},{"location":"usage/custom_cards/custom_card_media_player_sonos/","title":"Mediaplayer Sonos Custom-card","text":""},{"location":"usage/custom_cards/custom_card_media_player_sonos/#media-player-sonos","title":"Media player: sonos","text":"<p>NOTE This card is under review and is not ready to use!</p> <p></p> Usage  #### Example  <pre><code>- type: \"custom:button-card\"\n  template: card_media_player_sonos_with_controls\n  variables:\n    ulm_card_media_player_with_controls_name: \"Slaapkamer\"\n    ulm_card_media_player_with_controls_entity: media_player.slaapkamer\n</code></pre>  #### Variables   Variable Example Required Explanation ulm_card_media_player_with_controls_name Sonos room 1 Yes Name shown in lovelace ulm_card_media_player_with_controls_entity media_player.sonos_room_1 Yes Entity id Template Code custom_card_media_player_sonos.yaml<pre><code>---\ncard_media_player_sonos:\n  size: \"20px\"\n  show_icon: true\n  show_entity_picture: false\n  show_state: false\n  show_name: true\n  template:\n    - \"green_playing\"\n    - \"icon_info_bg\"\n    - \"ulm_translation_engine\"\n  label: |\n    [[[\n        if (entity.state == 'idle' || entity.state == 'paused' || entity.state == 'unavailable'){\n          return variables.ulm_translation_state;\n        } else {\n        return (entity.attributes.source ? entity.attributes.source : variables.ulm_translation_state)\n            + ' \u2022 ' +  ( Math.round(entity.attributes.volume_level / 0.01)) + '%' ;\n        }\n    ]]]\n\ncard_media_player_sonos_with_controls:\n  variables:\n    ulm_card_media_player_with_controls_name: \"No name set\"\n  triggers_update:\n    - \"[[[ ulm_card_media_player_with_controls_entity ]]]\"\n  styles:\n    grid:\n      - grid-template-areas: \"'item1' 'item2'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content  min-content\"\n      - row-gap: \"12px\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        template:\n          - \"card_media_player_sonos\"\n        tap_action:\n          action: \"more-info\"\n        entity: \"[[[ return variables.ulm_card_media_player_with_controls_entity ]]]\"\n        name: \"[[[ return variables.ulm_card_media_player_with_controls_name ]]]\"\n        styles:\n          card:\n            - box-shadow: \"none\"\n            - padding: \"0px\"\n    item2:\n      card:\n        type: \"custom:button-card\"\n        template: \"list_items\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"media_player.volume_down\"\n                target:\n                  entity_id: \"[[[ return variables.ulm_card_media_player_with_controls_entity ]]]\"\n              icon: \"mdi:volume-minus\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              entity: \"[[[ return variables.ulm_card_media_player_with_controls_entity ]]]\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"media_player.media_play_pause\"\n                target:\n                  entity_id: \"[[[ return variables.ulm_card_media_player_with_controls_entity ]]]\"\n              icon: \"mdi:pause\"\n              state:\n                - value: \"paused\"\n                  icon: \"mdi:play\"\n                - value: \"off\"\n                  icon: \"mdi:play\"\n          item3:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"media_player.volume_up\"\n                target:\n                  entity_id: \"[[[ return variables.ulm_card_media_player_with_controls_entity ]]]\"\n              icon: \"mdi:volume-plus\"\n\nicon_info_bg_sonos:\n  color: \"var(--google-grey)\"\n  show_icon: true\n  show_label: true\n  show_name: true\n  state:\n    - value: \"unavailable\"\n      styles:\n        custom_fields:\n          notification:\n            - border-radius: \"50%\"\n            - position: \"absolute\"\n            - left: \"3px\"\n            - top: \"8px\"\n            - height: \"18px\"\n            - width: \"18px\"\n            - font-size: \"12px\"\n            - line-height: \"14px\"\n            - background-color: &gt;\n                [[[\n                  return \"rgba(var(--color-red),1)\";\n                ]]]\n  styles:\n    icon:\n      - color: \"rgba(var(--color-theme),0.2)\"\n    label:\n      - justify-self: \"start\"\n      - align-self: \"start\"\n      - font-weight: \"bold\"\n      - font-size: \"12px\"\n      - filter: \"opacity(40%)\"\n      - margin-left: \"12px\"\n    name:\n      - align-self: \"end\"\n      - justify-self: \"start\"\n      - font-weight: \"bold\"\n      - font-size: \"14px\"\n      - margin-left: \"12px\"\n    state:\n      - justify-self: \"start\"\n      - align-self: \"start\"\n      - font-weight: \"bold\"\n      - font-size: \"12px\"\n      - filter: \"opacity(40%)\"\n      - margin-left: \"12px\"\n    img_cell:\n      - background-color: \"rgba(var(--color-theme),0.05)\"\n      - border-radius: \"50%\"\n      - place-self: \"center\"\n    grid:\n      - grid-template-areas: \"'i n' 'i l'\"\n      - grid-template-columns: \"min-content auto\"\n      - grid-template-rows: \"min-content min-content\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n  size: \"20px\"\n\ngreen_playing:\n  state:\n    - styles:\n        icon:\n          - color: \"rgba(var(--color-green),1)\"\n        img_cell:\n          - background-color: \"rgba(var(--color-green), 0.2)\"\n      value: \"playing\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_more_power_outlet/","title":"More Power Outlet Card","text":""},{"location":"usage/custom_cards/custom_card_more_power_outlet/#description","title":"Description","text":"<p>This is the power outlet card is very similar to the default <code>power-outlet-card</code> from UI-Minimalist but it is also possible to show two additional sensors - one for total energy and one for time.</p>"},{"location":"usage/custom_cards/custom_card_more_power_outlet/#credits","title":"Credits","text":"<p>Author: Wranglatang - 2022 Version 1.0.0</p>"},{"location":"usage/custom_cards/custom_card_more_power_outlet/#variables","title":"Variables","text":"Variable Default Required Notes entity name Enable background custom_card_more_power_outlet_power_sensor If you set this sensor, the <code>custom_card_more_power_outlet</code> shows the current power consumption (W). custom_card_more_power_outlet_energy_sensor If you set this sensor, the <code>custom_card_more_power_outlet</code> shows the energy consumption (kWh) - Typically used with a Daily Utility Meter. custom_card_more_power_outlet_time_sensor If you set this sensor, the <code>custom_card_more_power_outlet</code> shows the a duration (Mins) - Typically used with the History Stats."},{"location":"usage/custom_cards/custom_card_more_power_outlet/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: custom_card_more_power_outlet\n  variables:\n    custom_card_more_power_outlet_power_sensor: sensor.immersion_heater_power\n    custom_card_more_power_outlet_energy_sensor: sensor.immersion_heater_energy_daily\n    custom_card_more_power_outlet_time_sensor: sensor.time_immersion_heater_heating\n  entity: switch.immersion_heater\n  name: Immersion Heater\n</code></pre>"},{"location":"usage/custom_cards/custom_card_more_power_outlet/#template-code","title":"Template code","text":"Template Code custom_card_more_power_outlet.yaml<pre><code>---\n### Custom Card More Power Outlet ###\ncustom_card_more_power_outlet:\n  template:\n    - \"icon_info_bg\"\n    - \"yellow\"\n    - \"ulm_translation_engine\"\n  variables:\n    custom_card_more_power_outlet_power_sensor:\n    custom_card_more_power_outlet_energy_sensor:\n    custom_card_more_power_outlet_time_sensor:\n  triggers_update: \"all\"\n  label: |-\n    [[[\n      if (entity.state === \"on\" &amp;&amp; variables.custom_card_more_power_outlet_power_sensor !== null &amp;&amp; variables.custom_card_more_power_outlet_energy_sensor !== null &amp;&amp; variables.custom_card_more_power_outlet_time_sensor !== null) {\n        if (states[variables.custom_card_more_power_outlet_time_sensor].state &lt; 1){\n          return states[variables.custom_card_more_power_outlet_power_sensor].state + \"W \u2022 \" + states[variables.custom_card_more_power_outlet_energy_sensor].state + \"kWh \u2022 \" +\n          (states[variables.custom_card_more_power_outlet_time_sensor].state * 100) + \"Mins\";\n        } else\n          return states[variables.custom_card_more_power_outlet_power_sensor].state + \"W \u2022 \" + states[variables.custom_card_more_power_outlet_energy_sensor].state + \"kWh \u2022 \" + states[variables.custom_card_more_power_outlet_time_sensor].state + \"Hrs\";\n      } else if (entity.state === \"on\" &amp;&amp; variables.custom_card_more_power_outlet_power_sensor !== null &amp;&amp; variables.custom_card_more_power_outlet_energy_sensor !== null) {\n        return states[variables.custom_card_more_power_outlet_power_sensor].state + \"W \u2022 \" + states[variables.custom_card_more_power_outlet_energy_sensor].state + \"kWh\";\n      } else if (entity.state === \"on\" &amp;&amp; variables.custom_card_more_power_outlet_power_sensor !== null &amp;&amp; variables.custom_card_more_power_outlet_time_sensor !== null) {\n          if (states[variables.custom_card_more_power_outlet_time_sensor].state &lt; 1){\n          return states[variables.custom_card_more_power_outlet_power_sensor].state + \"W \u2022 \" + (states[variables.custom_card_more_power_outlet_time_sensor].state * 100) + \"Mins\";\n        } else\n          return states[variables.custom_card_more_power_outlet_power_sensor].state + \"W \u2022 \" + states[variables.custom_card_more_power_outlet_time_sensor].state + \"Hrs\";\n      } else if (entity.state === \"on\" &amp;&amp; variables.custom_card_more_power_outlet_energy_sensor !== null &amp;&amp; variables.custom_card_more_power_outlet_time_sensor !== null) {\n          if (states[variables.custom_card_more_power_outlet_time_sensor].state &lt; 1){\n          return states[variables.custom_card_more_power_outlet_energy_sensor].state + \"kWh \u2022 \" + (states[variables.custom_card_more_power_outlet_time_sensor].state * 100) + \"Mins\";\n        } else\n          return states[variables.custom_card_more_power_outlet_energy_sensor].state + \"kWh \u2022 \" + states[variables.custom_card_more_power_outlet_time_sensor].state + \"Hrs\";\n      } else if (entity.state === \"on\" &amp;&amp; variables.custom_card_more_power_outlet_power_sensor !== null) {\n        return states[variables.custom_card_more_power_outlet_power_sensor].state + \"W\";\n      } else if (entity.state === \"on\" &amp;&amp; variables.custom_card_more_power_outlet_energy_sensor !== null) {\n        return states[variables.custom_card_more_power_outlet_energy_sensor].state + \"kWh\";\n      } else if (entity.state === \"on\" &amp;&amp; variables.custom_card_more_power_outlet_time_sensor !== null) {\n          if (states[variables.custom_card_more_power_outlet_time_sensor].state &lt; 1){\n          return (states[variables.custom_card_more_power_outlet_time_sensor].state * 100) + \"Mins\";\n        } else\n          return states[variables.custom_card_more_power_outlet_time_sensor].state + \"Hrs\";\n      } else if (entity.state === \"on\") {\n        return variables.ulm_translation_state;\n      } else if (entity.state === \"off\" &amp;&amp; variables.custom_card_more_power_outlet_energy_sensor !== null) {\n        if (states[variables.custom_card_more_power_outlet_energy_sensor].state &gt; 0){\n          return variables.ulm_translation_state + \" \u2022 \" + states[variables.custom_card_more_power_outlet_energy_sensor].state + \"kWh\";\n        } else {\n          return variables.ulm_translation_state;\n        }\n      } else {\n        return variables.ulm_translation_state;\n      }\n    ]]]\n</code></pre>"},{"location":"usage/custom_cards/custom_card_mpse_gauge/","title":"Gauge Card Custom-card","text":""},{"location":"usage/custom_cards/custom_card_mpse_gauge/#custom-card-gauge","title":"Custom-card \"Gauge\"","text":"<p>The <code>custom_card_mpse_gauge</code> is used present a value in form of a gauge. The card can handle two gauges so it would be easy to adapt the card to that if required. I preferred the minimal look.</p> <p></p>"},{"location":"usage/custom_cards/custom_card_mpse_gauge/#credits","title":"Credits","text":"<p>Author: mpse Version: 0.1.0</p>"},{"location":"usage/custom_cards/custom_card_mpse_gauge/#changelog","title":"Changelog","text":"Initial release."},{"location":"usage/custom_cards/custom_card_mpse_gauge/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: custom_card_mpse_gauge\n  entity: sensor.temp_office_temperature\n  variables:\n    ulm_card_mpse_gauge_min: 10\n    ulm_card_mpse_gauge_max: 30\n</code></pre>"},{"location":"usage/custom_cards/custom_card_mpse_gauge/#requirements","title":"Requirements","text":"<p>Uses this card: https://github.com/custom-cards/dual-gauge-card which can be installed via HACS.</p>"},{"location":"usage/custom_cards/custom_card_mpse_gauge/#variables","title":"Variables","text":"Variable Example Required Explanation ulm_card_mpse_gauge_min 0 no Minimum value, defaults to 0. ulm_card_mpse_gauge_max 100 no Maximum value, defaults to 100."},{"location":"usage/custom_cards/custom_card_mpse_gauge/#template-code","title":"Template code","text":"Template Code custom_card_mpse_gauge.yaml<pre><code>---\ncustom_card_mpse_gauge:\n  variables:\n    ulm_card_mpse_gauge_min: 0\n    ulm_card_mpse_gauge_max: 100\n  styles:\n    grid:\n      - grid-template-areas: \"'item1' 'item2'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content  min-content\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"0px\"\n  show_name: false\n  show_icon: false\n  custom_fields:\n    item1:\n      card:\n        entity: \"[[[ return entity.entity_id ]]]\"\n        label: &gt;-\n          [[[\n            return entity.state;\n          ]]]\n        template:\n          - \"icon_info\"\n        styles:\n          card:\n            - padding: \"12px\"\n        type: \"custom:button-card\"\n    item2:\n      card:\n        type: \"custom:dual-gauge-card\"\n        min: \"[[[ return variables.ulm_card_mpse_gauge_min ]]]\"\n        max: \"[[[ return variables.ulm_card_mpse_gauge_max ]]]\"\n        title: &gt;\n          [[[\n            var min = variables.ulm_card_mpse_gauge_min;\n            var max = variables.ulm_card_mpse_gauge_max;\n\n            if( min == 0 &amp;&amp; max == 100 )\n              return \"\";\n\n            return min + ' - ' + max;\n          ]]]\n        shadeInner: false\n        cardwidth: 200\n        outer:\n          entity: \"[[[ return entity.entity_id ]]]\"\n        inner:\n          entity: \"[[[ return entity.entity_id ]]]\"\n        colors:\n          - color: \"var(--google-blue)\"\n            value: 0\n        card_mod:\n          style: |\n            div.gauge-value.gauge-value-inner {\n              color: rgba(0,0,0,0);\n            }\n            div.gauge-value.gauge-value-outer {\n              color: rgba(0,0,0,0);\n            }\n            div.gauge-dual-card {\n              margin: 0px 0px;\n              --title-font-size: calc(var(--gauge-card-width) / 16);\n              color: var(--google-grey);\n            }\n</code></pre>"},{"location":"usage/custom_cards/custom_card_mpse_printer/","title":"Printer Card Custom-card","text":""},{"location":"usage/custom_cards/custom_card_mpse_printer/#custom-card-printer","title":"Custom-card \"Printer\"","text":"<p>The <code>custom_card_mpse_printer</code> is used to display the status of a printer and the toner.</p> <p></p>"},{"location":"usage/custom_cards/custom_card_mpse_printer/#credits","title":"Credits","text":"<p>Author: mpse (based on clemalex post) Version: 0.3.0</p>"},{"location":"usage/custom_cards/custom_card_mpse_printer/#changelog","title":"Changelog","text":"0.3.0 Updated documentation. Cleanup code in card. Updated colors to match input values.  0.2.0 Added reference to used card. Fixed yaml indentation  0.1.0 Initial release adapted from a post on home assistant forum by user clemalex."},{"location":"usage/custom_cards/custom_card_mpse_printer/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: custom_card_mpse_printer\n  entity: sensor.hp_color_laser_mfp_178nw\n  variables:\n    ulm_card_printer_name: HP Color Laser MFP 178nw\n    ulm_card_printer_black_name: sensor.hp_color_laser_mfp_178nw_black_toner\n    ulm_card_printer_yellow_name: sensor.hp_color_laser_mfp_178nw_yellow_toner\n    ulm_card_printer_cyan_name: sensor.hp_color_laser_mfp_178nw_cyan_toner\n    ulm_card_printer_magenta_name: sensor.hp_color_laser_mfp_178nw_magenta_toner\n</code></pre>"},{"location":"usage/custom_cards/custom_card_mpse_printer/#requirements","title":"Requirements","text":"<p>Uses this card: https://github.com/custom-cards/bar-card Tested with the IPP Integration from Home Assistant: https://www.home-assistant.io/integrations/ipp On my printer i cannot get any state update, it always reports idle. I wanted to highlight the button when the printer is active.</p>"},{"location":"usage/custom_cards/custom_card_mpse_printer/#variables","title":"Variables","text":"Variable Example Required Explanation ulm_card_printer_name HP Color Laser MFP 178nw yes Name of printer to display on card ulm_card_printer_black_name sensor.hp_color_laser_mfp_178nw_black_toner yes Name of black toner sensor ulm_card_printer_yellow_name sensor.hp_color_laser_mfp_178nw_yellow_toner yes Name of yellow toner sensor ulm_card_printer_cyan_name sensor.hp_color_laser_mfp_178nw_cyan_toner yes Name of cyan toner sensor ulm_card_printer_magenta_name sensor.hp_color_laser_mfp_178nw_magenta_toner yes Name of magenta toner sensor"},{"location":"usage/custom_cards/custom_card_mpse_printer/#template-code","title":"Template code","text":"Template Code custom_card_mpse_printer.yaml<pre><code>---\ncustom_card_mpse_printer:\n  show_icon: false\n  show_name: false\n  show_label: false\n  styles:\n    card:\n      - border-radius: \"20px\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"0px\"\n    grid:\n      - grid-template-areas: \"'item1' 'item2' 'item3' 'item4' 'item5'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content\"\n  custom_fields:\n    item1:\n      card:\n        entity: \"[[[ return entity.entity_id ]]]\"\n        name: \"[[[ return variables.ulm_card_printer_name ]]]\"\n        label: &gt;-\n          [[[\n          return entity.state;\n          ]]]\n        template:\n          - \"icon_info\"\n          - \"custom_card_mpse_printer_blue\"\n        styles:\n          card:\n            - padding: \"12px\"\n        type: \"custom:button-card\"\n    item2:\n      card:\n        type: \"custom:bar-card\"\n        height: \"20px\"\n        positions:\n          name: off\n          value: \"inside\"\n          icon: off\n          indicator: off\n          minmax: off\n        color: \"black\"\n        entities:\n          - entity: \"[[[ return variables.ulm_card_printer_black_name ]]]\"\n        card_mod:\n          style: |\n            bar-card-currentbar{\n              border: 0.01rem solid rgba(var(--color-theme),.4);\n            }\n            bar-card-backgroundbar{\n              display: none;\n            }\n            bar-card-name{\n              width: 2rem;\n              margin-right: 40px !important;\n            }\n            bar-card-value{\n              width: 2rem;\n              margin-left: 40px !important;\n              justify-content: center;\n              display: flex;\n              color: grey;\n            }\n            bar-card-background{\n              margin: 4px 0 4px 0 !important;\n              text-align: initial;\n            }\n            ha-card{\n              --bar-card-border-radius: 5px;\n              border-radius: 0px;\n              box-shadow: none;\n            }\n            #states{\n              padding: 0 16px;\n            }\n    item3:\n      card:\n        type: \"custom:bar-card\"\n        height: \"20px\"\n        positions:\n          name: off\n          value: \"inside\"\n          icon: off\n          indicator: off\n          minmax: off\n        color: \"rgb(250,255,0)\"\n        entities:\n          - entity: \"[[[ return variables.ulm_card_printer_yellow_name ]]]\"\n        card_mod:\n          style: |\n            bar-card-currentbar{\n              border: 0.01rem solid rgba(var(--color-theme),.4);\n            }\n            bar-card-backgroundbar{\n              display: none;\n            }\n            bar-card-name{\n              width: 2rem;\n              margin-right: 40px !important;\n            }\n            bar-card-value{\n              width: 2rem;\n              margin-left: 40px !important;\n              justify-content: center;\n              display: flex;\n              color: grey;\n            }\n            bar-card-background{\n              margin: 4px 0 4px 0 !important;\n              text-align: initial;\n            }\n            ha-card{\n              --bar-card-border-radius: 5px;\n              border-radius: 0px;\n              box-shadow: none;\n            }\n            #states{\n              padding: 0 16px;\n            }\n    item4:\n      card:\n        type: \"custom:bar-card\"\n        height: \"20px\"\n        positions:\n          name: off\n          value: \"inside\"\n          icon: off\n          indicator: off\n          minmax: off\n        color: \"rgb(248,0,255)\"\n        entities:\n          - entity: \"[[[ return variables.ulm_card_printer_magenta_name ]]]\"\n        card_mod:\n          style: |\n            bar-card-currentbar{\n              border: 0.01rem solid rgba(var(--color-theme),.4);\n            }\n            bar-card-backgroundbar{\n              display: none;\n            }\n            bar-card-name{\n              width: 2rem;\n              margin-right: 40px !important;\n            }\n            bar-card-value{\n              width: 2rem;\n              margin-left: 40px !important;\n              justify-content: center;\n              display: flex;\n              color: grey;\n            }\n            bar-card-background{\n              margin: 4px 0 4px 0 !important;\n              text-align: initial;\n            }\n            ha-card{\n              --bar-card-border-radius: 5px;\n              border-radius: 0px;\n              box-shadow: none;\n            }\n            #states{\n              padding: 0 16px;\n            }\n    item5:\n      card:\n        type: \"custom:bar-card\"\n        height: \"20px\"\n        positions:\n          name: off\n          value: \"inside\"\n          icon: off\n          indicator: off\n          minmax: off\n        color: \"rgb(0,255,255)\"\n        entities:\n          - entity: \"[[[ return variables.ulm_card_printer_cyan_name ]]]\"\n        card_mod:\n          style: |\n            bar-card-currentbar{\n              border: 0.01rem solid rgba(var(--color-theme),.4);\n            }\n            bar-card-backgroundbar{\n              display: none;\n            }\n            bar-card-name{\n              width: 2rem;\n              margin-right: 40px !important;\n            }\n            bar-card-value{\n              width: 2rem;\n              margin-left: 40px !important;\n              justify-content: center;\n              display: flex;\n              color: grey;\n            }\n              bar-card-background{\n              margin: 4px 0 4px 0 !important;\n              text-align: initial;\n            }\n            ha-card{\n              --bar-card-border-radius: 5px;\n              border-radius: 0px;\n              box-shadow: none;\n            }\n            #states{\n              padding: 0 16px 16px 16px;\n            }\ncustom_card_mpse_printer_blue:\n  state:\n    - styles:\n        icon:\n          - color: \"rgba(var(--color-blue),1)\"\n        label:\n          - color: \"rgba(var(--color-blue-text),1)\"\n        name:\n          - color: \"rgba(var(--color-blue-text),1)\"\n        img_cell:\n          - background-color: \"rgba(var(--color-blue), 0.2)\"\n        card:\n          - background-color: \"rgba(var(--color-background-blue), var(--opacity-bg))\"\n      operator: \"template\"\n      value: &gt;\n        [[[\n          return entity.state!=\"idle\" ? true : false\n        ]]]\n</code></pre>"},{"location":"usage/custom_cards/custom_card_mpse_thermostat/","title":"Thermostat mpse Custom-card","text":""},{"location":"usage/custom_cards/custom_card_mpse_thermostat/#custom-card-thermostat","title":"Custom-card \"Thermostat\"","text":"<p>The <code>custom_card_mpse_thermostat</code> is used to display temperature and control a simple thermostat. I have tested this with a cooling function that I use to control my beer fridge.</p> <p>The buttons are used to lower/raise the set temperature which is displayed between the arrows. It uses the defined steps configured on the thermostat (In my case I use esphome to control the frigde). The current temperature is shown in the grey label. The card uses the standard language parameters.</p> <p></p>"},{"location":"usage/custom_cards/custom_card_mpse_thermostat/#credits","title":"Credits","text":"<p>Author: mpse Version: 0.1.0</p>"},{"location":"usage/custom_cards/custom_card_mpse_thermostat/#changelog","title":"Changelog","text":"0.1.0 Initial release inspired from various posts on home assistant forum."},{"location":"usage/custom_cards/custom_card_mpse_thermostat/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: custom_card_mpse_thermostat\n  entity: climate.fermentation_climate_controller\n</code></pre>"},{"location":"usage/custom_cards/custom_card_mpse_thermostat/#requirements","title":"Requirements","text":""},{"location":"usage/custom_cards/custom_card_mpse_thermostat/#variables","title":"Variables","text":"Variable Example Required Explanation None"},{"location":"usage/custom_cards/custom_card_mpse_thermostat/#template-code","title":"Template code","text":"Template Code custom_card_mpse_thermostat.yaml<pre><code>---\ncustom_card_mpse_thermostat:\n  show_name: false\n  show_icon: false\n  template:\n    - \"icon_info_bg\"\n  hold_action:\n    action: \"more-info\"\n  styles:\n    grid:\n      - grid-template-areas: \"'item1' 'item2'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content  min-content\"\n      - row-gap: \"12px\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        template:\n          - \"icon_info\"\n          - \"ulm_translation_engine\"\n        tap_action:\n          action: \"more-info\"\n        entity: \"[[[ return entity.entity_id ]]]\"\n        name: \"[[[ return entity.name ]]]\"\n        label: &gt;-\n          [[[\n              label = variables.ulm_translation_state;\n              if(entity.attributes.temperature){\n                return (entity.attributes.current_temperature ) + '\u00b0' + ' \u2022 ' + label + ' (' + entity.attributes.hvac_action + ')';\n              }\n              return variables.ulm_translation_state;\n          ]]]\n        icon: &gt;\n          [[[\n            var icon = \"mdi:thermostat\";\n            var state = entity.state;\n\n            if( state == \"cool\" )\n              icon = \"mdi:snowflake\"\n            else if( state == \"heat\" )\n              icon = \"mdi:fire\"\n\n            return icon;\n          ]]]\n        state:\n          - operator: \"template\"\n            value: \"[[[return entity.state == 'heat']]]\"\n            styles:\n              icon:\n                - color: \"rgba(var(--color-red),1)\"\n              img_cell:\n                - background-color: \"rgba(var(--color-red),0.2)\"\n              card:\n                - background-color: \"rgba(var(--color-background-red),var(--opacity-bg))\"\n              name:\n                - color: \"rgba(var(--color-red-text),1)\"\n              label:\n                - color: \"rgba(var(--color-red-text),1)\"\n          - operator: \"template\"\n            value: \"[[[return entity.state == 'cool']]]\"\n            styles:\n              icon:\n                - color: \"rgba(var(--color-blue),1)\"\n              img_cell:\n                - background-color: \"rgba(var(--color-blue),0.2)\"\n              card:\n                - background-color: \"rgba(var(--color-background-blue),var(--opacity-bg))\"\n              name:\n                - color: \"rgba(var(--color-blue-text),1)\"\n              label:\n                - color: \"rgba(var(--color-blue-text),1)\"\n    item2:\n      card:\n        type: \"custom:button-card\"\n        template: \"list_items\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              icon: \"mdi:arrow-down\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"climate.set_temperature\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n                data:\n                  temperature: \"[[[ return entity.attributes.temperature - entity.attributes.target_temp_step ]]]\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              name: \"[[[ return entity.attributes.temperature + '\u00b0C' ]]]\"\n              styles:\n                card:\n                  - box-shadow: \"none\"\n              show_icon: false\n              tap_action: \"none\"\n          item3:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              icon: \"mdi:arrow-up\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"climate.set_temperature\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n                data:\n                  temperature: \"[[[ return entity.attributes.temperature + entity.attributes.target_temp_step ]]]\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_mpse_wifisignal/","title":"Wifi Signal Custom-card","text":""},{"location":"usage/custom_cards/custom_card_mpse_wifisignal/#custom-card-wifi-signal","title":"Custom-card \"WiFi Signal\"","text":"<p>The <code>custom_card_mpse_wifisignal</code> is used to display the status of a wifi signal (dBm). Icon changes based on signal strength.</p> <p></p>"},{"location":"usage/custom_cards/custom_card_mpse_wifisignal/#credits","title":"Credits","text":"<p>Author: mpse Version: 0.2.0</p>"},{"location":"usage/custom_cards/custom_card_mpse_wifisignal/#changelog","title":"Changelog","text":"0.2.0 Cleanup and updated documentation.  0.1.0 Initial release."},{"location":"usage/custom_cards/custom_card_mpse_wifisignal/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: custom_card_mpse_wifisignal\n  entity: sensor.wifi_julgran\n</code></pre>"},{"location":"usage/custom_cards/custom_card_mpse_wifisignal/#requirements","title":"Requirements","text":"<p>No special cards needed.</p>"},{"location":"usage/custom_cards/custom_card_mpse_wifisignal/#variables","title":"Variables","text":"Variable Example Required Explanation None"},{"location":"usage/custom_cards/custom_card_mpse_wifisignal/#template-code","title":"Template code","text":"Template Code custom_card_mpse_wifisignal.yaml<pre><code>---\ncustom_card_mpse_wifisignal:\n  template:\n    - \"icon_info_bg\"\n  icon: |\n    [[[\n      var icon = \"mdi:wifi-strength-off\";\n      var signal = states[entity.entity_id].state;\n      if (signal &gt;= -50) {\n        icon = \"mdi:wifi-strength-4\";\n      } else if (signal &gt;= -60) {\n        icon = \"mdi:wifi-strength-3\";\n      } else if (signal &gt;= -70) {\n        icon = \"mdi:wifi-strength-2\";\n      } else if (signal &gt;= -80) {\n        icon = \"mdi:wifi-strength-1\";\n      }\n      return icon;\n    ]]]\n  label: |\n    [[[\n      return entity.state + \" dBm\";\n    ]]]\n</code></pre>"},{"location":"usage/custom_cards/custom_card_nas/","title":"NAS Custom-card","text":""},{"location":"usage/custom_cards/custom_card_nas/#custom-card-nas","title":"Custom-card \"NAS\"","text":"<p>The <code>card-nas</code> shows you a specific sensor value from your NAS, eg. the disk space used.</p> <p></p>"},{"location":"usage/custom_cards/custom_card_nas/#credits","title":"Credits","text":"<p>Author: tben - 2021 Version: 1.0.0</p>"},{"location":"usage/custom_cards/custom_card_nas/#changelog","title":"Changelog","text":"1.0.0 Initial release  1.0.1 Fix card &amp; add Screenshot"},{"location":"usage/custom_cards/custom_card_nas/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template:\n    - custom_card_nas\n  variables:\n    ulm_custom_card_nas_sensor: sensor.pinas_disk_use\n    ulm_custom_card_nas_text: \"HDD used\"\n    ulm_custom_cad_nas_unit: %\n</code></pre>"},{"location":"usage/custom_cards/custom_card_nas/#requirements","title":"Requirements","text":"<p>n/a</p>"},{"location":"usage/custom_cards/custom_card_nas/#variables","title":"Variables","text":"Variable Example Required Explanation ulm_custom_card_nas_sensor sensor.nas_disk_use yes The sensor that shows your sensor state, eg. the disk use on your NAS ulm_custom_card_nas_text HDD used yes The text to show on your card ulm_custom_card_nas_unit % yes The unit to show after your sensors state"},{"location":"usage/custom_cards/custom_card_nas/#template-code","title":"Template code","text":"Template Code custom_card_nik_door.yaml<pre><code>---\ncustom_card_nas:\n  template:\n    - \"blue_no_state\"\n  tap_action:\n    action: \"more-info\"\n    entity: \"[[[ return variables.ulm_custom_card_nas_sensor; ]]]\"\n  show_icon: true\n  show_label: true\n  show_name: true\n  icon: |-\n    [[[\n       return \"mdi:nas\";\n    ]]]\n  label: |-\n    [[[\n       return variables.ulm_custom_card_nas_text + \" \" + states[variables.ulm_custom_card_nas_sensor].state + variables.ulm_custom_card_nas_unit;\n    ]]]\n  name: |-\n    [[[\n       return \"Nas\";\n    ]]]\n  size: \"20px\"\n  styles:\n    label:\n      - justify-self: \"start\"\n      - align-self: \"start\"\n      - font-weight: \"bolder\"\n      - font-size: \"12px\"\n      - filter: \"opacity(40%)\"\n      - margin-left: \"12px\"\n    name:\n      - align-self: \"end\"\n      - justify-self: \"start\"\n      - font-weight: \"bold\"\n      - font-size: \"14px\"\n      - margin-left: \"12px\"\n      - filter: \"opacity(100%)\"\n    img_cell:\n      - border-radius: \"50%\"\n      - place-self: \"center\"\n      - width: \"42px\"\n      - height: \"42px\"\n    grid:\n      - grid-template-areas: \"'i n' 'i l'\"\n      - grid-template-columns: \"min-content auto\"\n      - grid-template-rows: \"min-content min-content\"\n    card:\n      - border-radius: \"20px\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_neekster_update/","title":"Custom Card Update","text":""},{"location":"usage/custom_cards/custom_card_neekster_update/#custom-card-update","title":"Custom-card \"Update\"","text":""},{"location":"usage/custom_cards/custom_card_neekster_update/#credits","title":"Credits","text":"<p>Author: Neekster - 2022 Version: 1.0.0</p>"},{"location":"usage/custom_cards/custom_card_neekster_update/#changelog","title":"Changelog","text":"1.0.0   Initial release"},{"location":"usage/custom_cards/custom_card_neekster_update/#description","title":"Description","text":"<p>This custom cards works with any entity in the update domain and gives options for two-button control to begin the update or skip. It also supports both horizontal and vertical configurations.</p>"},{"location":"usage/custom_cards/custom_card_neekster_update/#variables","title":"Variables","text":"Variable Default Required Notes enable_controls false No Enable two-button controls for update and skip collapsible false No Auto-collapse controls when no update is available/update has been skipped horizontal false No Display card horizontally narrow_buttons false No Allow more space for text in horizontal configuration"},{"location":"usage/custom_cards/custom_card_neekster_update/#usage","title":"Usage","text":"Example 1 <pre><code>- type: custom:button-card\n  template: card_neekster_update\n  entity: update.home_assistant_core_update\n</code></pre> Example 2 <pre><code>- type: custom:button-card\n  template: card_neekster_update\n  entity: update.home_assistant_core_update\n  variables:\n    ulm_card_neekster_update_enable_controls: true\n    ulm_card_neekster_update_collapsible: true\n    ulm_card_neekster_update_horizontal: true\n    ulm_card_neekster_update_narrow_buttons: true\n</code></pre>"},{"location":"usage/custom_cards/custom_card_neekster_update/#template-code","title":"Template code","text":"Template Code custom_card_neekster_update.yaml<pre><code>---\n### Card Neekster Update ###\ncard_neekster_update:\n  template:\n    - \"ulm_language_variables\"\n  variables:\n    ulm_card_neekster_update_icon: false\n    ulm_card_neekster_update_enable_controls: false\n    ulm_card_neekster_update_collapsible: false\n    ulm_card_neekster_update_horizontal: false\n    ulm_card_neekster_update_narrow_buttons: false\n  triggers_update: \"all\"\n  show_icon: false\n  show_name: false\n  show_label: false\n  hold_action:\n    action: \"more-info\"\n  styles:\n    grid:\n      - grid-template-areas: &gt;\n          [[[\n                if (variables.ulm_card_neekster_update_collapsible &amp;&amp; entity.state != \"on\") {\n                    return \"\\\"item1\\\"\";\n                } else if (variables.ulm_card_neekster_update_horizontal) {\n                    return \"\\\"item1 item2\\\"\";\n                } else if (variables.ulm_card_neekster_update_enable_controls) {\n                    return \"\\\"item1\\\" \\\"item2\\\"\";\n                } else {\n                    return \"\\\"item1\\\"\";\n                }\n          ]]]\n      - grid-template-columns: &gt;\n          [[[\n                if (variables.ulm_card_neekster_update_collapsible &amp;&amp; entity.state != \"on\") {\n                    return \"1fr\";\n                } else if (variables.ulm_card_neekster_update_horizontal) {\n                  if(variables.ulm_card_neekster_update_narrow_buttons){\n                    return \"2fr 1fr\";\n                    } else {\n                      return \"1fr 1fr\";\n                    }\n                } else {\n                    return \"1fr\";\n                }\n          ]]]\n      - grid-template-rows: &gt;\n          [[[\n                if (variables.ulm_card_neekster_update_collapsible &amp;&amp; entity.state != \"on\") {\n                    return \"1fr\";\n                } else if (variables.ulm_card_neekster_update_enable_controls &amp;&amp; !variables.ulm_card_neekster_update_horizontal) {\n                    return \"min-content min-content\";\n                } else {\n                    return \"1fr\";\n                }\n          ]]]\n      - row-gap: |-\n          [[[\n            if (!variables.ulm_card_neekster_update_collapsible) {\n                return \"12px\";\n              } else {\n                return entity.state !== \"off\" ? \"12px\" : \"0px\";\n              }\n          ]]]\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n    custom_fields:\n      item2:\n        - display: |\n            [[[\n              if(variables.ulm_card_neekster_update_enable_controls) {\n                if(variables.ulm_card_neekster_update_collapsible){\n                  return entity.state === \"off\" ? \"none\" : \"block\";\n                }\n                return \"block\";\n              }\n              return \"none\";\n            ]]]\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        template:\n          - \"icon_info_bg\"\n          - \"ulm_language_variables\"\n        entity: \"[[[ return entity.entity_id ]]]\"\n        hold_action:\n          action: \"more-info\"\n        styles:\n          label:\n            - opacity: \"1\"\n            - filter: \"opacity(100%)\"\n          card:\n            - padding: \"0px\"\n            - background: \"none\"\n            - border-radius: \"0\"\n            - box-shadow: \"none\"\n        state:\n          - operator: \"template\"\n            value: \"[[[ return entity.state == 'off' ]]]\"\n            icon: \"mdi:cloud-check\"\n            label: \"Up to Date.\"\n            styles:\n              img_cell:\n                - background-color: \"rgba(var(--color-green), 0.2)\"\n          - operator: \"template\"\n            value: \"[[[ return entity.state != 'off' ]]]\"\n            icon: \"mdi:cloud-download\"\n            label: \"Update Available!\"\n            styles:\n              img_cell:\n                - background-color: \"rgba(var(--color-yellow), 0.2)\"\n    item2:\n      card:\n        type: \"custom:button-card\"\n        template: \"list_2_items\"\n        hold_action:\n          action: \"more-info\"\n        styles:\n          card:\n            - padding: \"0px\"\n            - background: \"none\"\n            - border-radius: \"0\"\n            - box-shadow: \"none\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              hold_action:\n                action: \"more-info\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"update.install\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n              icon: \"mdi:package-down\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              hold_action:\n                action: \"cperform-action\"\n                perform_action: \"update.clear_skipped\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"update.skip\"\n                target:\n                  entity_id: \"[[[ return entity.entity_id ]]]\"\n              icon: \"mdi:cancel\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_nik_clock/","title":"Tablet Clock Card","text":""},{"location":"usage/custom_cards/custom_card_nik_clock/#custom-card-tablet-clock-card","title":"Custom-card \"Tablet clock Card\"","text":"<p>This is a <code>custom-card</code> that shows the current time and Date. This is designed for a tablet or big monitor.</p> <p></p>"},{"location":"usage/custom_cards/custom_card_nik_clock/#credits","title":"Credits","text":"<p>Author: Nik - 2022 Version: 1.0.0</p>"},{"location":"usage/custom_cards/custom_card_nik_clock/#changelog","title":"Changelog","text":"1.0.0 Initial release"},{"location":"usage/custom_cards/custom_card_nik_clock/#requirements","title":"Requirements","text":"<ul> <li>To have all the Minimalist Card and Custom Cards installed</li> </ul>"},{"location":"usage/custom_cards/custom_card_nik_clock/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: custom_card_nik_clock\n  variables:\n    ulm_custom_card_nik_clock_switch: input_boolean.menu_tablet\n    ulm_custom_card_nik_clock_switch_enable: false\n</code></pre>"},{"location":"usage/custom_cards/custom_card_nik_clock/#variables","title":"Variables","text":"Variable Example Required Explanation ulm_custom_card_nik_clock_switch lock.input_boolean.menu_tablet no This is an optional hidden switch to combine with a state-switch card to use some additional logics. ulm_custom_card_nik_clock_switch_enable true / false no Default is false. It enables the options above."},{"location":"usage/custom_cards/custom_card_nik_clock/#template-sensor-code","title":"Template Sensor Code","text":"Template Code custom_card_irmajavi_weather.yaml<pre><code>---\ncustom_card_nik_clock:\n  triggers_update: \"all\"\n  variables:\n    ulm_custom_card_nik_clock_switch:\n    ulm_custom_card_nik_clock_switch_enable: false\n    ulm_language: &gt;\n      [[[\n        return hass[\"language\"];\n      ]]]\n  show_icon: false\n  show_name: true\n  show_state: false\n  show_label: true\n  name: &gt;\n    [[[\n      const time = new Date();\n      let hour = time.getHours();\n      let minute = (time.getMinutes()&lt;10?'0':'') + time.getMinutes()\n      return hour + \":\" + minute;\n    ]]]\n  layout: \"vertical\"\n  label: &gt;\n    [[[\n      const event = new Date();\n      const options = {weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n      var locale = variables.ulm_language;\n      let formatted_date = event.toLocaleDateString(locale, options);\n      return formatted_date;\n    ]]]\n  tap_action:\n    action: &gt;\n      [[[\n          if (variables.ulm_custom_card_nik_clock_switch_enable){\n            return 'perform-action'\n          }\n          else{\n            return 'none'\n          }\n      ]]]\n    perform_action: \"input_boolean.toggle\"\n    target:\n      entity_id: \"[[[ return variables.ulm_custom_card_nik_clock_switch ]]]\"\n  styles:\n    card:\n      - background-color: \"transparent\"\n      - height: \"100px\"\n      - box-shadow: \"none\"\n    name:\n      - font-size: \"290%\"\n      - font-weight: \"bold\"\n      - justify-self: \"center\"\n    label:\n      - justify-self: \"center\"\n      - font-size: \"110%\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_nik_door/","title":"Minimal Door Lock Card","text":""},{"location":"usage/custom_cards/custom_card_nik_door/#custom-card-minimal-door-lock","title":"Custom-card \"Minimal Door Lock\"","text":"<p>This is a <code>custom-card</code> that shows the current state of your Lock and allows you to open and close it showing the state with a Minimal Design.</p> <p></p>"},{"location":"usage/custom_cards/custom_card_nik_door/#credits","title":"Credits","text":"<p>Author: Nik - 2022 Version: 2.0.0</p>"},{"location":"usage/custom_cards/custom_card_nik_door/#changelog","title":"Changelog","text":"1.0.0 Initial release  2.0.0 Added Battery Level for monitoring Added double_tap unlock to prevent accidental opening"},{"location":"usage/custom_cards/custom_card_nik_door/#requirements","title":"Requirements","text":"<p>To have the Minimalist cards and custom cards installed</p>"},{"location":"usage/custom_cards/custom_card_nik_door/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: \"custom_card_nik_door\"\n  entity: \"sensor.nuki_blindato_door_security_state\"\n  variables:\n    ulm_custom_card_entity_1_name: \"Blindato\"\n    ulm_custom_card_entity_1_lock: \"lock.nuki_blindato_lock\"\n    ulm_custom_card_entity_1_lock_battery: \"sensor.blindato_battery\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_nik_door/#variables","title":"Variables","text":"Variable Example Required Explanation ulm_custom_card_entity_1_name sensor.nuki_blindato_door_security_state Yes Your Door Name ulm_custom_card_entity_1_lock lock.nuki_blindato_lock Yes Your Door Lock entity ulm_custom_card_entity_1_lock_battery sensor.blindato_battery Yes Your Door Lock battery sensor entity sensor.nuki_blindato_door_security_state Yes Your door sensor to track \"Open\" and \"Close\" state."},{"location":"usage/custom_cards/custom_card_nik_door/#template-code","title":"Template code","text":"Template Code custom_card_nik_door.yaml<pre><code>---\ncustom_card_nik_door:\n  template:\n    - \"ulm_language_variables\"\n  variables:\n    ulm_custom_card_entity_1_name: \"[[[ return variables.ulm_custom_card_entity_1_name ]]]\"\n    ulm_custom_card_entity_1_lock: \"[[[ return variables.ulm_custom_card_entity_1_lock ]]]\"\n    ulm_custom_card_entity_1_lock_battery: \"[[[ return variables.ulm_custom_card_entity_1_lock_battery ]]]\"\n  show_icon: false\n  show_name: false\n  show_label: false\n  lock:\n    enabled: true\n    unlock: \"double_tap\"\n  styles:\n    grid:\n      - grid-template-areas: &gt;\n          [[[\n            var areas = [];\n            areas.push(\"item1 item1\");\n            areas.push(\"item2 item2\");\n            return \"\\\"\" + areas.join(\"\\\" \\\"\") + \"\\\"\";\n          ]]]\n      - grid-template-columns: \"1fr 1fr\"\n      - grid-template-rows: \"min-content min-content\"\n      - row-gap: \"12px\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        template:\n          - \"icon_more_info\"\n        styles:\n          icon:\n            - color: \"rgba(var(--color-theme),0.9)\"\n            - width: \"20px\"\n            - place-self: \"center\"\n          custom_fields:\n            lock:\n              - z-index: 2\n              - border-radius: \"50%\"\n              - position: \"absolute\"\n              - left: \"30px\"\n              - top: \"24px\"\n              - height: \"18px\"\n              - width: \"18px\"\n              - border: \"2px solid var(--card-background-color)\"\n              - font-size: \"12px\"\n              - line-height: \"14px\"\n              - background-color: &gt;\n                  [[[\n                    if (states[variables.ulm_custom_card_entity_1_lock_battery].state &lt;= 40){\n                      return \"rgba(var(--color-red),1)\";\n                    } else {\n                      return \"rgba(var(--color-green),1)\";\n                    }\n                  ]]]\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              icon: \"mdi:door\"\n              styles:\n                icon:\n                  - color: \"rgba(var(--color-blue),1)\"\n                img_cell:\n                  - background-color: \"rgba(var(--color-blue),0.2)\"\n              tap_action:\n                action: \"none\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              name: \"[[[ return variables.ulm_custom_card_entity_1_name ]]]\"\n              label: &gt;\n                [[[\n                  return entity.state\n                ]]]\n          lock: &gt;\n            [[[\n              if (states[variables.ulm_custom_card_entity_1_lock_battery].state == 100){\n                return '&lt;ha-icon icon=\"mdi:battery\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;';\n\n              } if (states[variables.ulm_custom_card_entity_1_lock_battery].state &gt;= 80){\n                return '&lt;ha-icon icon=\"mdi:battery-70\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;';\n\n              } if (states[variables.ulm_custom_card_entity_1_lock_battery].state &gt;= 60){\n                return '&lt;ha-icon icon=\"mdi:battery-60\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;';\n\n              } if (states[variables.ulm_custom_card_entity_1_lock_battery].state &gt;= 50){\n                return '&lt;ha-icon icon=\"mdi:battery-50\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;';\n              }\n                if (states[variables.ulm_custom_card_entity_1_lock_battery].state &lt;= 40){\n                return '&lt;ha-icon icon=\"mdi:battery-20\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;';\n              }\n            ]]]\n    item2:\n      card:\n        type: \"custom:button-card\"\n        template: \"list_2_items\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              icon: \"mdi:lock-open-variant\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"lock.open\"\n                target:\n                  entity_id: \"[[[ return variables.ulm_custom_card_entity_1_lock ]]]\"\n              state:\n                - value: \"Open\"\n                  styles:\n                    icon:\n                      - color: \"rgba(var(--color-red),1)\"\n                    img_cell:\n                      - background-color: \"rgba(var(--color-red),0.2)\"\n                - value: \"Closed &amp; Unlocked\"\n                  styles:\n                    icon:\n                      - color: \"rgba(var(--color-yellow),1)\"\n                    img_cell:\n                      - background-color: \"rgba(var(--color-yellow),0.2)\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              icon: \"mdi:lock\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"lock.lock\"\n                target:\n                  entity_id: \"[[[ return variables.ulm_custom_card_entity_1_lock ]]]\"\n              state:\n                - value: \"Closed &amp; Locked\"\n                  styles:\n                    icon:\n                      - color: \"rgba(var(--color-green),1)\"\n                    img_cell:\n                      - background-color: \"rgba(var(--color-green),0.2)\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_nik_nas/","title":"Nas Summary Card","text":""},{"location":"usage/custom_cards/custom_card_nik_nas/#custom-card-nas-summary-card","title":"Custom-card \"Nas Summary Card\"","text":"<p>This is a <code>custom-card</code> that shows you a summary for your NAS with sensors, Wake on Lan and collapsed info. Once the NAS is off or unavailable it collapses the info.</p> <p> </p>"},{"location":"usage/custom_cards/custom_card_nik_nas/#credits","title":"Credits","text":"<p>Author: Nik - 2022 Version: 1.0.0</p>"},{"location":"usage/custom_cards/custom_card_nik_nas/#changelog","title":"Changelog","text":"1.0.0 Initial release  0.1.1 <p>Fix for UI Minimalist v1.0.1. </p>"},{"location":"usage/custom_cards/custom_card_nik_nas/#requirements","title":"Requirements","text":"<p>To have the Minimalist cards and custom cards installed</p>"},{"location":"usage/custom_cards/custom_card_nik_nas/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n    template: \"custom_card_nik_nas\"\n    entity: switch.qnap_wol\n    variables:\n      graph_span: \"1d\"\n      chart_type: \"radialBar\"\n      entity_1:\n        entity_id: \"sensor.nas_cpu_temperature\"\n        icon: ''\n        name: \"Temp\"\n        color: \"yellow\"\n        max_value: 100\n      entity_2:\n        entity_id: \"sensor.nas_memory_usage\"\n        icon: ''\n        name: \"Memory\"\n        color: \"blue\"\n        max_value: 100\n      entity_3:\n        entity_id: \"sensor.nas_cpu_usage\"\n        icon: ''\n        name: \"CPU\"\n        color: \"green\"\n        max_value: 100\n      entity_4:\n        entity_id: \"sensor.disk_use_percent\"\n        icon: \"mdi:harddisk\"\n        name: \"Disk\"\n        color: \"red\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_nik_nas/#variables","title":"Variables","text":"Variable Example Required Explanation entity switch.qnap_wol yes The Switch to turn On or Off the NAS chart_type line, scatter, pie, donut or radialBar yes The chart type you want to display graph_span 1h, 12min, 1d, 1h25, 10sec, ... yes The span of the graph as a time interval entity_id sensor.disk_use_percent yes Entity sensor of choice. 4 entities must be added icon mdi:cpu-64-bit no mdi icon you want to be exposed in the img_cell, '' will return entity.attributes.icon  name name for the used sensor no '' will return entity.attributes.friendly_name color green, blue, yellow, red or grey no if you don't use the color variable it will choice a random color max_value 10, 300, ... no Maximum value of the sensor. Default will be 100"},{"location":"usage/custom_cards/custom_card_nik_nas/#template-code","title":"Template Code","text":"Template Code custom_card_nik_nas.yaml<pre><code>---\ncustom_card_nik_nas:\n  template:\n    - \"ulm_translation_engine\"\n  variables:\n    entity_1:\n      entity_id:\n      icon: \"[[[ return entity.attributes.icon ]]]\"\n      name: \"[[[ return entity.attributes.friendly_name ]]]\"\n      color: &gt;\n        [[[\n          var colors = [\"yellow\", \"blue\", \"red\", \"green\"];\n          var color = colors[Math.floor(Math.random() * colors.length)];\n          return color;\n        ]]]\n    entity_2:\n      entity_id:\n      icon: \"[[[ return entity.attributes.icon  ]]]\"\n      name: \"[[[ return entity.attributes.friendly_name ]]]\"\n      color: &gt;\n        [[[\n          var colors = [\"yellow\", \"blue\", \"red\", \"green\"];\n          var color = colors[Math.floor(Math.random() * colors.length)];\n          return color;\n        ]]]\n    entity_3:\n      entity_id:\n      icon: \"[[[ return entity.attributes.icon  ]]]\"\n      name: \"[[[ return entity.attributes.friendly_name ]]]\"\n      color: &gt;\n        [[[\n          var colors = [\"yellow\", \"blue\", \"red\",\"green\"];\n          var color = colors[Math.floor(Math.random() * colors.length)];\n          return color;\n        ]]]\n    entity_4:\n      entity_id:\n      icon: \"[[[ return entity.attributes.icon  ]]]\"\n      name: \"[[[ return entity.attributes.friendly_name ]]]\"\n      color: &gt;\n        [[[\n          var colors = [\"yellow\", \"blue\", \"red\",\"green\"];\n          var color = colors[Math.floor(Math.random() * colors.length)];\n          return color;\n        ]]]\n  show_name: false\n  show_state: false\n  show_label: false\n  show_icon: false\n  show_last_changed: false\n  show_entity_picture: false\n  styles:\n    grid:\n      - grid-template-areas: &gt;\n          [[[\n            var areas = [];\n            if (entity.state == \"off\" || entity.state == \"unavailable\") {\n                areas.push(\"item5\");\n                return \"\\\"\" + areas.join(\"\\\" \\\"\") + \"\\\"\";\n            } else {\n                areas.push(\"item4 item4\");\n                areas.push(\"item1 radial\");\n                areas.push(\"item2 radial\");\n                areas.push(\"item3 radial\");\n                return \"\\\"\" + areas.join(\"\\\" \\\"\") + \"\\\"\";\n            }\n          ]]]\n      - grid-template-columns: &gt;\n          [[[\n            if (entity.state == \"off\" || entity.state == \"unavailable\") {\n                return \"1fr\";\n            } else {\n                return \"35% 65%\";\n            }\n          ]]]\n      - grid-template-rows: &gt;\n          [[[\n            if (entity.state == \"off\" || entity.state == \"unavailable\") {\n                return \"min-content\";\n            } else {\n                return \"1fr\";\n            }\n          ]]]\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n    custom_fields:\n      item1:\n        - display: &gt;\n            [[[\n              if (entity.state == \"off\" || entity.state == \"unavailable\") {\n                  return \"none\";\n              } else {\n                  return \"block\";\n              }\n            ]]]\n      item2:\n        - display: &gt;\n            [[[\n              if (entity.state == \"off\" || entity.state == \"unavailable\") {\n                  return \"none\";\n              } else {\n                  return \"block\";\n              }\n            ]]]\n      item3:\n        - display: &gt;\n            [[[\n              if (entity.state == \"off\" || entity.state == \"unavailable\") {\n                  return \"none\";\n              } else {\n                  return \"block\";\n              }\n            ]]]\n      item4:\n        - display: &gt;\n            [[[\n              if (entity.state == \"off\" || entity.state == \"unavailable\") {\n                  return \"none\";\n              } else {\n                  return \"block\";\n              }\n            ]]]\n      item5:\n        - display: &gt;\n            [[[\n              if (entity.state == \"off\" || entity.state == \"unavailable\") {\n                  return \"block\";\n              } else {\n                  return \"none\";\n              }\n            ]]]\n      radial:\n        - display: &gt;\n            [[[\n              if (entity.state == \"off\" || entity.state == \"unavailable\") {\n                  return \"none\";\n              } else {\n                  return \"block\";\n              }\n            ]]]\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        entity: \"[[[ return variables.entity_1.entity_id ]]]\"\n        template: \"card_generic_swap\"\n        variables:\n          ulm_card_generic_swap_name: \"[[[ return variables.entity_1.name ]]]\"\n          ulm_card_generic_swap_icon: \"[[[ return variables.entity_1.icon ]]]\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              custom_fields:\n                item1:\n                  card:\n                    type: \"custom:button-card\"\n                    styles:\n                      icon:\n                        - color: \"[[[ return `rgba(var(--color-${variables.entity_1.color}), 1)`;]]]\"\n                      img_cell:\n                        - background-color: \"[[[ return `rgba(var(--color-${variables.entity_1.color}), 0.20)`;]]]\"\n        styles:\n          card:\n            - box-shadow: \"none\"\n            - border-radius: \"none\"\n            - padding-top: \"1px\"\n            - padding-bottom: \"1px\"\n    item2:\n      card:\n        type: \"custom:button-card\"\n        entity: \"[[[ return variables.entity_2.entity_id ]]]\"\n        template: \"card_generic_swap\"\n        variables:\n          ulm_card_generic_swap_name: \"[[[ return variables.entity_2.name ]]]\"\n          ulm_card_generic_swap_icon: \"[[[ return variables.entity_2.icon ]]]\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              custom_fields:\n                item1:\n                  card:\n                    type: \"custom:button-card\"\n                    styles:\n                      icon:\n                        - color: \"[[[ return `rgba(var(--color-${variables.entity_2.color}), 1)`;]]]\"\n                      img_cell:\n                        - background-color: \"[[[ return `rgba(var(--color-${variables.entity_2.color}), 0.20)`;]]]\"\n        styles:\n          card:\n            - box-shadow: \"none\"\n            - border-radius: \"none\"\n            - padding-top: \"1px\"\n            - padding-bottom: \"1px\"\n    item3:\n      card:\n        type: \"custom:button-card\"\n        entity: \"[[[ return variables.entity_3.entity_id ]]]\"\n        template: \"card_generic_swap\"\n        variables:\n          ulm_card_generic_swap_name: \"[[[ return variables.entity_3.name ]]]\"\n          ulm_card_generic_swap_icon: \"[[[ return variables.entity_3.icon ]]]\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              custom_fields:\n                item1:\n                  card:\n                    type: \"custom:button-card\"\n                    styles:\n                      icon:\n                        - color: \"[[[ return `rgba(var(--color-${variables.entity_3.color}), 1)`;]]]\"\n                      img_cell:\n                        - background-color: \"[[[ return `rgba(var(--color-${variables.entity_3.color}), 0.20)`;]]]\"\n        styles:\n          card:\n            - box-shadow: \"none\"\n            - border-radius: \"none\"\n            - padding-top: \"1px\"\n            - padding-bottom: \"1px\"\n    item4:\n      card:\n        type: \"horizontal-stack\"\n        cards:\n          - type: \"custom:button-card\"\n            template: \"card_input_boolean\"\n            entity: \"[[[ return entity.entity_id]]]\"\n            variables:\n              ulm_card_input_boolean_name: \"[[[ return variables.ulm_translation_status ]]]\"\n              ulm_card_input_boolean_icon: \"mdi:nas\"\n            styles:\n              card:\n                - background-color: \"transparent\"\n                - box-shadow: \"none\"\n                - border: \"2px solid var(--google-grey)\"\n            tap_action:\n              action: \"more-info\"\n\n          - type: \"custom:button-card\"\n            template: \"card_generic_swap\"\n            entity: \"[[[ return variables.entity_4.entity_id ]]]\"\n            variables:\n              ulm_card_generic_swap_name: \"[[[ return variables.entity_4.name ]]]\"\n              ulm_card_generic_swap_icon: \"[[[ return variables.entity_4.icon ]]]\"\n            custom_fields:\n              item1:\n                card:\n                  type: \"custom:button-card\"\n                  custom_fields:\n                    item1:\n                      card:\n                        type: \"custom:button-card\"\n                        styles:\n                          icon:\n                            - color: \"[[[ return `rgba(var(--color-${variables.entity_4.color}), 1)`;]]]\"\n                          img_cell:\n                            - background-color: \"[[[ return `rgba(var(--color-${variables.entity_4.color}), 0.20)`;]]]\"\n            styles:\n              card:\n                - background-color: \"transparent\"\n                - box-shadow: \"none\"\n                - border: \"2px solid var(--google-grey)\"\n            tap_action:\n              action: \"none\"\n    item5:\n      card:\n        type: \"custom:button-card\"\n        template: \"card_input_boolean\"\n        entity: \"[[[ return entity.entity_id]]]\"\n        variables:\n          ulm_card_input_boolean_name: \"[[[ return variables.ulm_translation_status ]]]\"\n          ulm_card_input_boolean_icon: \"mdi:nas\"\n        styles:\n          card:\n            - background-color: \"transparent\"\n            - box-shadow: \"none\"\n            - border: \"2px solid var(--google-grey)\"\n        tap_action:\n          action: \"more-info\"\n    radial:\n      card:\n        type: \"custom:apexcharts-card\"\n        graph_span: \"[[[ return variables.graph_span ]]]\"\n        chart_type: \"[[[ return variables.chart_type ]]]\"\n        style: |\n          ha-card {\n            border-radius: \"var(--border-radius)\";\n            box-shadow: none;\n            padding-left: 10px;\n            padding-bottom: 0px;\n          }\n        header:\n          show: false\n        apex_config:\n          title:\n            floating: false\n            align: \"top\"\n            style:\n              fontSize: \"2px\"\n              fontWeight: \"bold\"\n          chart:\n            foreColor: \"rgb(148,148,148)\"\n            offsetY: 5\n          legend:\n            show: false\n        series:\n          - entity: \"[[[ return variables.entity_1.entity_id ]]]\"\n            name: \"[[[ return variables.entity_1.name ]]]\"\n            color: \"[[[ return `var(--google-${variables.entity_1.color})`;]]]\"\n            max: \"[[[ return variables.entity_1.max_value ]]]\"\n          - entity: \"[[[ return variables.entity_2.entity_id ]]]\"\n            name: \"[[[ return variables.entity_2.name ]]]\"\n            color: \"[[[ return `var(--google-${variables.entity_2.color})`;]]]\"\n            max: \"[[[ return variables.entity_2.max_value ]]]\"\n          - entity: \"[[[ return variables.entity_3.entity_id ]]]\"\n            name: \"[[[ return variables.entity_3.name ]]]\"\n            color: \"[[[ return `var(--google-${variables.entity_3.color})`;]]]\"\n            max: \"[[[ return variables.entity_3.max_value ]]]\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_nik_tablet/","title":"Tablet Custom Card","text":""},{"location":"usage/custom_cards/custom_card_nik_tablet/#custom-card-tablet-custom-card","title":"Custom-card \"Tablet Custom Card\"","text":"<p>This is a <code>custom-card</code> that uses the installed Kiosk app on a tablet to get information from. It includes USB Power (if the tablet has it), Motion, light and maintenance switch as well as restart and reload mode.</p> <p> </p>"},{"location":"usage/custom_cards/custom_card_nik_tablet/#credits","title":"Credits","text":"<p>Author: Nik - 2022 Version: 1.0.0</p>"},{"location":"usage/custom_cards/custom_card_nik_tablet/#changelog","title":"Changelog","text":"1.0.0 Initial release  0.1.1 Fix for UI Minimalist v1.0.1."},{"location":"usage/custom_cards/custom_card_nik_tablet/#requirements","title":"Requirements","text":"<ul> <li>To have all the Minimalist Cards and Custom Cards;</li> <li>To have installed and configured Kiosk APP on the Tablet (enabled permissions etc...);</li> <li>To have the HACS Integration \"Fully Kiosk Browser\" installed and configured in HomeAssistant;</li> <li>Add Bar Card to HACS frontend</li> </ul>"},{"location":"usage/custom_cards/custom_card_nik_tablet/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: \"custom_card_nik_tablet\"\n  variables:\n    ulm_custom_card_nik_tablet_main: binary_sensor.ping_tablet_1p\n    ulm_custom_card_nik_tablet_name: \"Tablet 1P\"\n    ulm_custom_card_nik_tablet_battery: sensor.tablet_1p_battery_level\n    ulm_custom_card_nik_tablet_battery_name: \"Battery\"\n    ulm_custom_card_nik_tablet_button1: switch.sonoff_tablet_1p\n    ulm_custom_card_nik_tablet_button2: switch.tablet_1p_motion_detection\n    ulm_custom_card_nik_tablet_button3: light.tablet_1p_screen\n    ulm_custom_card_nik_tablet_restart: button.tablet_1p_restart_browser\n    ulm_custom_card_nik_tablet_reload: button.tablet_1p_load_start_url\n    ulm_custom_card_nik_tablet_maintenance: switch.tablet_1p_maintenance_mode\n    ulm_custom_card_nik_tablet_par1: sensor.tablet_1p_ram_free_memory\n    ulm_custom_card_nik_tablet_par1_name: \"RAM\"\n    ulm_custom_card_nik_tablet_par2: sensor.tablet_1p_internal_storage_free_space\n    ulm_custom_card_nik_tablet_par2_name: \"Disk\"\n    ulm_custom_card_nik_tablet_par3: binary_sensor.tablet_1p_plugged_in\n    ulm_custom_card_nik_tablet_par3_name: \"Power\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_nik_tablet/#variables","title":"Variables","text":"Variable Example Required Explanation ulm_custom_card_nik_tablet_main binary_sensor.ping_tablet_1p Yes A sensor that checks if the tablet is online. A simple binary ping sensor does the job. ulm_custom_card_nik_tablet_name Tablet 1P Yes Name of the Tablet ulm_custom_card_nik_tablet_battery sensor.tablet_1p_battery_level Yes Battery sensor for the Tablet ulm_custom_card_nik_tablet_battery_name Battery Yes If you want to customize the Battery name ulm_custom_card_nik_tablet_button1 switch.sonoff_tablet_1p Yes A Switch that enables or not USB Power for the Tablet. If not present you can replace it with another Switch of your choice. (check your device configs) ulm_custom_card_nik_tablet_button2 switch.tablet_1p_motion_detection Yes The Motion detection switch for your tablet (check your device configs) ulm_custom_card_nik_tablet_button3 light.tablet_1p_screen Yes The entity that turns on or off the Screen of the Tablet (check your device configs) ulm_custom_card_nik_tablet_restart button.tablet_1p_restart_browser Yes The entity to restart the Kiosk App of the Tablet (check your device configs) ulm_custom_card_nik_tablet_reload button.tablet_1p_load_start_url Yes The entity to reload the web page of the Kios App of the Tablet (check your device configs) ulm_custom_card_nik_tablet_maintenance switch.tablet_1p_maintenance_mode Yes The entity to put the tablet in maintenance mode. (check your device configs) ulm_custom_card_nik_tablet_par1 sensor.example Yes An entity of your choice to monitor a specific tablet parameter ulm_custom_card_nik_tablet_par2 sensor.example Yes An entity of your choice to monitor a specific tablet parameter ulm_custom_card_nik_tablet_par3 sensor.example Yes An entity of your choice to monitor a specific tablet parameter ulm_custom_card_nik_tablet_par1_name sensor.example Yes Name for Parameter 1 ulm_custom_card_nik_tablet_par2_name sensor.example Yes Name for Parameter 2 ulm_custom_card_nik_tablet_par3_name sensor.example Yes Name for Parameter 3"},{"location":"usage/custom_cards/custom_card_nik_tablet/#template-code","title":"Template Code","text":"<pre><code>---\ncustom_card_nik_tablet:\n  template:\n    - \"ulm_language_variables\"\n  triggers_update: \"all\"\n  show_icon: false\n  show_name: false\n  show_label: false\n  variables:\n    ulm_custom_card_nik_tablet_main: \"[[[ return variables.ulm_custom_card_nik_tablet_main ]]]\"\n    ulm_custom_card_nik_tablet_name: \"[[[ return variables.ulm_custom_card_nik_tablet_name ]]]\"\n    ulm_custom_card_nik_tablet_battery: \"[[[ return variables.ulm_custom_card_nik_tablet_battery ]]]\"\n    ulm_custom_card_nik_tablet_battery_name: \"[[[ return variables.ulm_custom_card_nik_tablet_battery_name ]]]\"\n    ulm_custom_card_nik_tablet_button1: \"[[[ return variables.ulm_custom_card_nik_tablet_button1 ]]]\"\n    ulm_custom_card_nik_tablet_button2: \"[[[ return variables.ulm_custom_card_nik_tablet_button2 ]]]\"\n    ulm_custom_card_nik_tablet_button3: \"[[[ return variables.ulm_custom_card_nik_tablet_button3 ]]]\"\n    ulm_custom_card_nik_tablet_restart: \"[[[ return variables.ulm_custom_card_nik_tablet_restart ]]]\"\n    ulm_custom_card_nik_tablet_reload: \"[[[ return variables.ulm_custom_card_nik_tablet_reload ]]]\"\n    ulm_custom_card_nik_tablet_maintenance: \"[[[ return variables.ulm_custom_card_nik_tablet_maintenance ]]]\"\n    ulm_custom_card_nik_tablet_par1: \"[[[ return variables.ulm_custom_card_nik_tablet_par1 ]]]\"\n    ulm_custom_card_nik_tablet_par2: \"[[[ return variables.ulm_custom_card_nik_tablet_par2 ]]]\"\n    ulm_custom_card_nik_tablet_par3: \"[[[ return variables.ulm_custom_card_nik_tablet_par3 ]]]\"\n    ulm_custom_card_nik_tablet_par1_name: \"[[[ return variables.ulm_custom_card_nik_tablet_par1_name ]]]\"\n    ulm_custom_card_nik_tablet_par2_name: \"[[[ return variables.ulm_custom_card_nik_tablet_par2_name ]]]\"\n    ulm_custom_card_nik_tablet_par3_name: \"[[[ return variables.ulm_custom_card_nik_tablet_par3_name ]]]\"\n  styles:\n    grid:\n      - grid-template-areas: &gt;\n          [[[\n            var areas = [];\n            areas.push(\"item1 item1\");\n            areas.push(\". .\");\n            areas.push(\"item2 item2\");\n            areas.push(\". .\");\n            areas.push(\"item3 item3\");\n            areas.push(\"item4 item4\");\n            areas.push(\"item5 item5\");\n            return \"\\\"\" + areas.join(\"\\\" \\\"\") + \"\\\"\";\n          ]]]\n      - grid-template-columns: \"1fr 1fr\"\n      - grid-template-rows: \"min-content 10px min-content 10px min-content min-content min-content\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        template: \"card_input_boolean\"\n        entity: \"[[[ return variables.ulm_custom_card_nik_tablet_main ]]]\"\n        icon: \"mdi:tablet\"\n        name: \"[[[ return variables.ulm_custom_card_nik_tablet_name ]]]\"\n        styles:\n          card:\n            - box-shadow: \"none\"\n        tap_action:\n          action: \"none\"\n    item2:\n      card:\n        type: \"custom:button-card\"\n        template: \"list_3_items\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template:\n                - \"widget_icon\"\n                - \"green\"\n              entity: \"[[[ return variables.ulm_custom_card_nik_tablet_button1 ]]]\"\n              icon: \"mdi:usb\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              template:\n                - \"widget_icon\"\n                - \"green\"\n              entity: \"[[[ return variables.ulm_custom_card_nik_tablet_button2 ]]]\"\n              icon: \"mdi:motion-sensor\"\n          item3:\n            card:\n              type: \"custom:button-card\"\n              template:\n                - \"widget_icon\"\n                - \"green\"\n              entity: \"[[[ return variables.ulm_custom_card_nik_tablet_button3 ]]]\"\n              icon: \"mdi:monitor\"\n    item3:\n      card:\n        type: \"custom:button-card\"\n        template: \"list_3_items\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template:\n                - \"widget_icon\"\n                - \"blue_no_state\"\n              entity: \"[[[ return variables.ulm_custom_card_nik_tablet_restart ]]]\"\n              icon: \"mdi:restart-alert\"\n              tap_action:\n              action: \"call-service\"\n              service: \"button.press\"\n              service_data:\n                entity_id: \"[[[ return variables.ulm_custom_card_nik_tablet_restart ]]]\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              template:\n                - \"widget_icon\"\n                - \"yellow\"\n              entity: \"[[[ return variables.ulm_custom_card_nik_tablet_maintenance ]]]\"\n              icon: \"mdi:account-hard-hat-outline\"\n          item3:\n            card:\n              type: \"custom:button-card\"\n              template:\n                - \"widget_icon\"\n                - \"blue_no_state\"\n              entity: \"[[[ return variables.ulm_custom_card_nik_tablet_reload ]]]\"\n              icon: \"mdi:reload\"\n              tap_action:\n                action: \"call-service\"\n                service: \"button.press\"\n                service_data:\n                  entity_id: \"[[[ return variables.ulm_custom_card_nik_tablet_reload ]]]\"\n    item4:\n      card:\n        type: \"custom:button-card\"\n        template: \"list_3_items\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template: \"custom_widget_nik_tablet\"\n              entity: \"[[[ return variables.ulm_custom_card_nik_tablet_par1 ]]]\"\n              name: \"[[[ return variables.ulm_custom_card_nik_tablet_par1_name ]]]\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              template: \"custom_widget_nik_tablet\"\n              entity: \"[[[ return variables.ulm_custom_card_nik_tablet_par2 ]]]\"\n              name: \"[[[ return variables.ulm_custom_card_nik_tablet_par2_name ]]]\"\n          item3:\n            card:\n              type: \"custom:button-card\"\n              template: \"custom_widget_nik_tablet\"\n              entity: \"[[[ return variables.ulm_custom_card_nik_tablet_par3 ]]]\"\n              name: \"[[[ return variables.ulm_custom_card_nik_tablet_par3_name ]]]\"\n    item5:\n      card:\n        type: \"custom:button-card\"\n        template: \"custom_bar_card_nik_tablet\"\n        variables:\n          ulm_custom_bar_card_nik_tablet_card_entity: \"[[[ return variables.ulm_custom_card_nik_tablet_battery ]]]\"\n          ulm_custom_bar_card_nik_tablet_card_name: \"[[[ return variables.ulm_custom_card_nik_tablet_battery_name ]]]\"\n          ulm_custom_bar_card_nik_tablet_card_value: true\n          ulm_custom_bar_card_nik_tablet_card_indicator: false\n\ncustom_widget_nik_tablet:\n  show_label: true\n  show_icon: false\n  label: |\n    [[[\n      if (entity.attributes.unit_of_measurement) {\n        var unit = entity.attributes.unit_of_measurement != null ? ' ' + entity.attributes.unit_of_measurement: ''\n        return entity.state + unit;\n      } else {\n        return entity.state;\n      }\n    ]]]\n  styles:\n    name:\n      - justify-self: \"center\"\n      - align-self: \"start\"\n      - font-weight: \"bolder\"\n      - font-size: \"12px\"\n      - filter: \"opacity(40%)\"\n    label:\n      - margin-top: \"10px\"\n      - justify-self: \"center\"\n      - font-weight: \"bold\"\n      - font-size: \"14px\"\n    grid:\n      - grid-template-areas: \"'l' 'n'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content min-content\"\n    card:\n      - box-shadow: \"none\"\n\ncustom_bar_card_nik_tablet:\n  triggers_update: \"all\"\n  styles:\n    grid:\n      - grid-template-areas: \"'item1' 'item2'\"\n      - grid-template-rows: \"1fr\"\n    card:\n      - border-radius: \"none\"\n      - background-color: \"transparent\"\n      - box-shadow: \"none\"\n      - padding: \"0px\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        template:\n          - \"icon_info\"\n          - \"card_generic\"\n        styles:\n          card:\n            - box-shadow: \"none\"\n            - border-radius: \"none\"\n            - padding: \"12px\"\n        entity: \"[[[ return variables.ulm_custom_bar_card_nik_tablet_card_entity ]]]\"\n        name: \"[[[ return variables.ulm_custom_bar_card_nik_tablet_card_name != '' ? variables.ulm_custom_bar_card_nik_tablet_card_name : '' ]]]\"\n    item2:\n      card:\n        type: \"custom:bar-card\"\n        entities:\n          - entity: \"[[[ return variables.ulm_custom_bar_card_nik_tablet_card_entity ]]]\"\n        positions:\n          icon: \"off\"\n          indicator: \"[[[ return variables.ulm_custom_bar_card_nik_tablet_card_indicator == true ? 'inside' : 'off' ]]]\"\n          minmax: \"off\"\n          title: \"off\"\n          value: \"[[[ return variables.ulm_custom_bar_card_nik_tablet_card_value == true ? 'inside' : 'off' ]]]\"\n          name: \"off\"\n        severity:\n          - color: \"var(--google-red)\"\n            from: 1\n            to: 30\n          - color: \"var(--google-yellow)\"\n            from: 31\n            to: 59\n          - color: \"var(--google-green)\"\n            from: 60\n            to: 100\n        min: 1\n        max: 100\n        style: |-\n          bar-card-currentbar {\n            right: 0;\n          }\n          bar-card-backgroundbar {\n            right: 0;\n          }\n          #states {\n            padding: 0;\n            height: 35px;\n          }\n          bar-card-background {\n            height: 35px !important;\n          }\n          bar-card-indicator {\n            left: 10px;\n          }\n          bar-card-value {\n            font-weight: bold;\n            font-size: 12px;\n          }\n</code></pre>"},{"location":"usage/custom_cards/custom_card_paddy_dwd_pollen/","title":"DWD Pollen Custom-card","text":""},{"location":"usage/custom_cards/custom_card_paddy_dwd_pollen/#custom-card-dwd-pollen","title":"Custom-card \"DWD Pollen\"","text":"<p>This is a <code>custom-card</code> to show the pollen count, taken from the DWD pollen service via a rest sensor.</p>"},{"location":"usage/custom_cards/custom_card_paddy_dwd_pollen/#credits","title":"Credits","text":"<p>Author: Paddy0174 - 2021 Version: 1.0.0</p>"},{"location":"usage/custom_cards/custom_card_paddy_dwd_pollen/#changelog","title":"Changelog","text":"1.0.0 Initial release  1.0.1 Fix for UI Minimalist v1.0.1."},{"location":"usage/custom_cards/custom_card_paddy_dwd_pollen/#usage","title":"Usage","text":"<pre><code>- type: custom:button-card\n  template:\n    - custom_card_paddy_dwd_pollen\n  entity: sensor.dwd_pollenbelastung_birke\n</code></pre>"},{"location":"usage/custom_cards/custom_card_paddy_dwd_pollen/#requirements","title":"Requirements","text":"<p>n/a</p>"},{"location":"usage/custom_cards/custom_card_paddy_dwd_pollen/#template-code","title":"Template code","text":"Template Code custom_card_paddy_dwd_pollen.yaml<pre><code>---\ncustom_card_paddy_dwd_pollen:\n  template:\n    - \"card_generic_swap\"\n    - \"ulm_custom_card_paddy_dwd_pollen_language_variables\"\n  variables:\n    ulm_card_generic_swap_name: \"[[[ return variables.ulm_custom_card_paddy_dwd_pollen_name; ]]]\"\n    ulm_card_generic_swap_icon: \"[[[ return variables.ulm_custom_card_paddy_dwd_pollen_icon; ]]]\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        template:\n          - \"icon_more_info\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              state:\n                - value: \"6\"\n                  styles:\n                    img_cell:\n                      - background-color: \"rgba(190,0,33,1)\"\n                - value: \"5\"\n                  styles:\n                    img_cell:\n                      - background-color: \"rgba(240,56,26,1)\"\n                - value: \"4\"\n                  styles:\n                    img_cell:\n                      - background-color: \"rgba(254,154,36,1)\"\n                - value: \"3\"\n                  styles:\n                    img_cell:\n                      - background-color: \"rgba(254,197,77,1)\"\n                - value: \"2\"\n                  styles:\n                    img_cell:\n                      - background-color: \"rgba(254,228,156,1)\"\n                - value: \"1\"\n                  styles:\n                    img_cell:\n                      - background-color: \"rgba(219,250,200,1)\"\n                - value: \"0\"\n                  styles:\n                    icon:\n                      - color: \"rgba(var(--color-theme),0.2)\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              label: &gt;\n                [[[\n                  if (entity.state == \"6\"){\n                    return variables.ulm_custom_card_paddy_dwd_pollen_6;\n                  } else if (entity.state == \"5\"){\n                    return variables.ulm_custom_card_paddy_dwd_pollen_5;\n                  } else if (entity.state == \"4\"){\n                    return variables.ulm_custom_card_paddy_dwd_pollen_4;\n                  } else if (entity.state == \"3\"){\n                    return variables.ulm_custom_card_paddy_dwd_pollen_3;\n                  } else if (entity.state == \"2\"){\n                    return variables.ulm_custom_card_paddy_dwd_pollen_2;\n                  } else if (entity.state == \"1\"){\n                    return variables.ulm_custom_card_paddy_dwd_pollen_1;\n                  }\n                  return variables.ulm_custom_card_paddy_dwd_pollen_none;\n                ]]]\n</code></pre>"},{"location":"usage/custom_cards/custom_card_paddy_dwd_pollen/#homeassistant","title":"HomeAssistant","text":"<p>I use the following <code>rest</code> and <code>template</code> sensors in HA:</p> <pre><code>sensor:\n  - platform: rest\n    scan_interval: 3600\n    name: \"DWD Pollenbelastung\"\n    resource: https://opendata.dwd.de/climate_environment/health/alerts/s31fg.json\n    json_attributes_path: \"$..content[?(@.partregion_id==XXX)].Pollen\"\n    json_attributes:\n      #- Erle\n      #- Beifuss\n      #- Ambrosia\n      - Birke\n      #- Esche\n      - Hasel\n      - Graeser\n      #- Roggen\n    value_template: \"{{ value_json.last_update }}\"\n  - platform: template\n    sensors:\n      dwd_pollenbelastung_birke:\n        icon_template: \"mdi:tree-outline\"\n        friendly_name: \"Birke\"\n        value_template: &gt;-\n          {% set dwd_state = state_attr('sensor.dwd_pollenbelastung', 'Birke')['today'] %}\n          {% if dwd_state == \"3\" %}6{% elif dwd_state == \"2-3\"%}5{% elif dwd_state == \"2\"%}4{% elif dwd_state == \"1-2\"%}3{% elif dwd_state == \"1\"%}2{% elif dwd_state == \"0-1\"%}1{% else %}0{% endif %}\n        attribute_templates:\n          today: &gt;-\n            {% set dwd_state = state_attr('sensor.dwd_pollenbelastung', 'Birke')['today'] %}\n            {% if dwd_state == \"3\" %}6{% elif dwd_state == \"2-3\"%}5{% elif dwd_state == \"2\"%}4{% elif dwd_state == \"1-2\"%}3{% elif dwd_state == \"1\"%}2{% elif dwd_state == \"0-1\"%}1{% else %}0{% endif %}\n          tomorrow: &gt;-\n            {% set dwd_state = state_attr('sensor.dwd_pollenbelastung', 'Birke')['tomorrow'] %}\n            {% if dwd_state == \"3\" %}6{% elif dwd_state == \"2-3\"%}5{% elif dwd_state == \"2\"%}4{% elif dwd_state == \"1-2\"%}3{% elif dwd_state == \"1\"%}2{% elif dwd_state == \"0-1\"%}1{% else %}0{% endif %}\n</code></pre>"},{"location":"usage/custom_cards/custom_card_paddy_dwd_pollen/#notes","title":"Notes","text":"<ul> <li>As this card is mainly for the DWD pollen sensor, that is based in Germany and shows only german data, the only available language is \"German\". If you want another language added, please leave a message in the support thread.</li> </ul>"},{"location":"usage/custom_cards/custom_card_paddy_waste_collection/","title":"Waste Collection Custom-card","text":""},{"location":"usage/custom_cards/custom_card_paddy_waste_collection/#custom-card-waste-collection","title":"Custom-card \"Waste collection\"","text":"<p>This is a <code>custom-card</code> to show the next waste collection date. It uses the data from the <code>custom_component</code> \"Waste Collection Framework\".</p>"},{"location":"usage/custom_cards/custom_card_paddy_waste_collection/#credits","title":"Credits","text":"<p>Author: Paddy0174 - 2021 Version: 1.0.0</p>"},{"location":"usage/custom_cards/custom_card_paddy_waste_collection/#changelog","title":"Changelog","text":"1.0.0 Initial release  1.0.1 Fix for UI Minimalist v1.0.1.  1.0.2 Fixed the bug where card doesn't show at all"},{"location":"usage/custom_cards/custom_card_paddy_waste_collection/#usage","title":"Usage","text":"<pre><code>- type: custom:button-card\n  template:\n    - custom_card_paddy_waste_collection\n  entity: sensor.waste_collection_paper\n</code></pre>"},{"location":"usage/custom_cards/custom_card_paddy_waste_collection/#requirements","title":"Requirements","text":"<p>This card needs the following to function correctly:</p> Component / card required Link Waste Collection Schedule Framework yes more info"},{"location":"usage/custom_cards/custom_card_paddy_waste_collection/#variables","title":"Variables","text":"Variable Example Required Explanation entity sensor.waste_collection_paper yes Your waste collection sensor. See HA example on how to configure. ulm_card_generic_swap_name Paper no ulm_card_generic_swap_icon mdi:trash-can no"},{"location":"usage/custom_cards/custom_card_paddy_waste_collection/#template-code","title":"Template code","text":"Template Code custom_card_paddy_waste_collection.yaml<pre><code>---\ncustom_card_paddy_waste_collection:\n  template:\n    - \"card_generic_swap\"\n  variables:\n    ulm_card_generic_swap_name: \"[[[ return entity.name; ]]]\"\n    ulm_card_generic_swap_icon: \"[[[ return entity.icon; ]]]\"\n  state:\n    - operator: \"template\"\n      value: \"[[[ return states[entity.entity_id].attributes.daysTo == 0; ]]]\"\n      styles:\n        custom_fields:\n          notification:\n            - border-radius: \"50%\"\n            - position: \"absolute\"\n            - left: \"38px\"\n            - top: \"8px\"\n            - height: \"16px\"\n            - width: \"16px\"\n            - border: \"2px solid var(--card-background-color)\"\n            - font-size: \"12px\"\n            - line-height: \"14px\"\n            - z-index: \"1\"\n            - background-color: &gt;\n                [[[\n                  return \"rgba(var(--color-red),1)\";\n                ]]]\n    - operator: \"template\"\n      value: \"[[[ return states[entity.entity_id].attributes.daysTo == 1; ]]]\"\n      styles:\n        custom_fields:\n          notification:\n            - border-radius: \"50%\"\n            - position: \"absolute\"\n            - left: \"38px\"\n            - top: \"8px\"\n            - height: \"16px\"\n            - width: \"16px\"\n            - border: \"2px solid var(--card-background-color)\"\n            - font-size: \"12px\"\n            - line-height: \"14px\"\n            - z-index: \"1\"\n            - background-color: &gt;\n                [[[\n                  return \"rgba(var(--color-red),1)\";\n                ]]]\n    - value: \"unavailable\"\n      styles:\n        custom_fields:\n          notification:\n            - border-radius: \"50%\"\n            - position: \"absolute\"\n            - left: \"38px\"\n            - top: \"8px\"\n            - height: \"16px\"\n            - width: \"16px\"\n            - border: \"2px solid var(--card-background-color)\"\n            - font-size: \"12px\"\n            - line-height: \"14px\"\n            - z-index: \"1\"\n            - background-color: &gt;\n                [[[\n                  return \"rgba(var(--color-red),1)\";\n                ]]]\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        template:\n          - \"icon_more_info\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              state:\n                - operator: \"template\"\n                  value: \"[[[ return states[entity.entity_id].attributes.daysTo == 0; ]]]\"\n                  styles:\n                    img_cell:\n                      - background-color: \"rgba(var(--color-red),0.5)\"\n                    icon:\n                      - color: \"rgba(var(--color-red),1)\"\n                - operator: \"template\"\n                  value: \"[[[ return states[entity.entity_id].attributes.daysTo == 1; ]]]\"\n                  styles:\n                    img_cell:\n                      - background-color: \"rgba(var(--color-red),0.05)\"\n                    icon:\n                      - color: \"rgba(var(--color-red),1)\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n    notification: &gt;\n      [[[\n        if (entity.state == 'unavailable' || states[entity.entity_id].attributes.daysTo == 0 || states[entity.entity_id].attributes.daysTo == 1){\n          return '&lt;ha-icon icon=\"mdi:exclamation\" style=\"width: 12px; height: 12px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;'\n        }\n      ]]]\n</code></pre>"},{"location":"usage/custom_cards/custom_card_paddy_waste_collection/#homeassistant","title":"HomeAssistant","text":"<p>This is my <code>sensor</code> setup in HA. I do the change from \"days\" to \"friendly days\" in my template sensor.</p> <pre><code>sensor:\n  - platform: waste_collection_schedule\n    name: waste_collection_paper\n    details_format: upcoming\n    add_days_to: true # this line is important\n    value_template: &gt;-\n      {% if value.daysTo == 0 %}\n      HEUTE\n      {% elif value.daysTo == 1 %}\n      MORGEN\n      {% else %}\n      in {{value.daysTo}} Tagen\n      {% endif %}\n    types:\n      - Papiertonne\n</code></pre>"},{"location":"usage/custom_cards/custom_card_paddy_waste_collection/#note","title":"Note","text":"<ul> <li>Don't forget to set <code>add_days_to</code> in your <code>sensor</code> config</li> <li>\"HEUTE\" is german for today or aujourd'hui</li> <li>\"MORGEN\" is german for tomorrow or demain</li> </ul>"},{"location":"usage/custom_cards/custom_card_paddy_waste_collection/#notes","title":"Notes","text":"<p>n/a</p>"},{"location":"usage/custom_cards/custom_card_paddy_welcome/","title":"Welcome Custom-card","text":""},{"location":"usage/custom_cards/custom_card_paddy_welcome/#custom-card-welcome","title":"Custom-card \"Welcome\"","text":"<p>This is a <code>custom-card</code> to show a welcome message to the user. It comes in four different versions:</p> <ul> <li>welcome message (custom_card_paddy_welcome)</li> <li>welcome message + weather-forecast (custom_card_paddy_welcome_with_weather)</li> <li>welcome message + news (custom_card_paddy_welcome_with_news) [based on home-feed-card]</li> </ul> <p>The card shows a time based message (good morning/afternoon/evening/hello) to the logged-in user with username. The second part of the card varies depending on what version you choose. Note, that you have different requirements depending on the version!</p>"},{"location":"usage/custom_cards/custom_card_paddy_welcome/#credits","title":"Credits","text":"<p>Author: Paddy0174 - 2021 Version: 1.0.0</p>"},{"location":"usage/custom_cards/custom_card_paddy_welcome/#changelog","title":"Changelog","text":"1.0.0 Initial release"},{"location":"usage/custom_cards/custom_card_paddy_welcome/#requirements","title":"Requirements","text":"<p>This card needs the following to function correctly:</p> Component / card required Note lovelace-card-mod yes a weather integration/provider only for welcome-card-with-weather See setup instructions for a HA weather integration home-feed-card only for welcome-card-with-news"},{"location":"usage/custom_cards/custom_card_paddy_welcome/#usage","title":"Usage","text":"<pre><code>- type: custom:button-card\n  template: custom_card_paddy_welcome\n  variables:\n    ulm_custom_card_paddy_welcome_time: sensor.time\n\n- type: custom:button-card\n  template: custom_card_paddy_welcome_with_weather\n  variables:\n    ulm_custom_card_paddy_welcome_time: sensor.time\n    ulm_custom_card_paddy_welcome_weather_provider: weather.accu_weather\n\n- type: custom:button-card\n  template: custom_card_paddy_welcome_with_news\n  variables:\n    ulm_custom_card_paddy_welcome_time: sensor.time\n    ulm_custom_card_paddy_welcome_news_entities:\n      - entity: sensor.waste_collection_paper\n        content_template: \"&lt;b&gt;{{display_name}}&lt;/b&gt;&lt;br&gt;{{state}}\"\n      - entity: sensor.waste_collection_waste\n        content_template: \"&lt;b&gt;{{display_name}}&lt;/b&gt;&lt;br&gt;{{state}}\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_paddy_welcome/#variables","title":"Variables","text":"Card type Variable Example Required Explanation all ulm_custom_card_paddy_welcome_time sensor.time yes This is your Home Assistant sensor.time _welcome_with_weather ulm_custom_card_paddy_welcome_weather_provider weather.accu_weather yes This is your weather provider _welcome_with_news ulm_custom_card_paddy_welcome_news_entities entity: sensor.waste_collection_papercontent_template: \"&lt;b&gt;{{display_name}}&lt;/b&gt;&lt;br&gt;{{state}}\" yes A list of your entities to show in the news feed, see the note underneath."},{"location":"usage/custom_cards/custom_card_paddy_welcome/#note-_welcome_with_news","title":"Note _welcome_with_news","text":"<p>This card is based on home-feed-card and needs a little different configuration in the variables. To allow almost all entities from HomeAssistant to show in the news, you're able to set all options that <code>home-feed-card</code> provides. This makes it necessary, that you set these entities in a list. Let me show you an example:</p> <pre><code># normally you do this\nvariables:\n  ulm_variable: your_variable_entity\n\n# here you need to do a list\nvariables:\n  ulm_variable:\n    - your_variable_entity_1\n    - your_variable_entity_2\n\n# to use an option from home-feed-card\nvariables:\n  ulm_variable:\n    - entity: your_variable_entity_1\n      content_template: \"&lt;b&gt;{{ display_name }}&lt;/b&gt;&lt;br&gt;{{ state }}\"\n    - your_variable_entity_2\n</code></pre> <p>You can find all available options and their description here.</p> <p>I recommend to use a <code>content_template</code> to format the output for every news item, eg. like this:</p> <pre><code>content_template: \"&lt;b&gt;{{ display_name }}&lt;/b&gt;&lt;br /&gt;{{ state }}\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_paddy_welcome/#example","title":"Example","text":"<pre><code>- type: custom:button-card\n  template: custom_card_paddy_welcome_with_news\n  variables:\n    ulm_custom_card_paddy_welcome_news_entities:\n      - entity: input_datetime.alarm_clock\n        content_template: \"&lt;b&gt;{{display_name}}&lt;/b&gt;&lt;br /&gt;{{state}}\"\n      - entity: sensor.waste_collection_bio\n        content_template: \"&lt;b&gt;{{display_name}}&lt;/b&gt;&lt;br /&gt;{{state}}\"\n      - entity: sensor.waste_collection_paper\n        content_template: \"&lt;b&gt;{{display_name}}&lt;/b&gt;&lt;br /&gt;{{state}}\"\n      - entity: sensor.waste_collection_plastic\n        content_template: \"&lt;b&gt;{{display_name}}&lt;/b&gt;&lt;br /&gt;{{state}}\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_paddy_welcome/#template-code","title":"Template code","text":"Template Code custom_card_paddy_welcome.yaml<pre><code>---\ncustom_card_paddy_welcome:\n  template:\n    - \"ulm_language_variables\"\n  show_icon: false\n  show_name: false\n  show_label: false\n  styles:\n    grid:\n      - grid-template-areas: \"'item1'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content\"\n      - row-gap: \"12px\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n  custom_fields:\n    item1:\n      card:\n        type: \"markdown\"\n        content: &gt;\n          [[[\n            let time = states[variables.ulm_custom_card_paddy_welcome_time].state;\n            let welcome = '';\n\n            if (time &gt; '18:00'){\n              welcome = variables.ulm_evening;\n            } else if (time &gt; '12:00'){\n              welcome = variables.ulm_afternoon;\n            } else if (time &gt; '05:00'){\n              welcome = variables.ulm_morning;\n            } else {\n              welcome = variables.ulm_hello;\n            }\n            return welcome + ',&lt;br&gt;' + user.name + '!';\n          ]]]\n        card_mod:\n        style: |\n          ha-card {\n            border-radius: 14px;\n            box-shadow: none;\n            font-size: 30px;\n            text-align: left;\n            cursor: default;\n          }\n\ncustom_card_paddy_welcome_with_weather:\n  template:\n    - \"ulm_language_variables\"\n  show_icon: false\n  show_name: false\n  show_label: false\n  styles:\n    grid:\n      - grid-template-areas: \"'item1' 'item2'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content min-content\"\n      - row-gap: \"12px\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n  custom_fields:\n    item1:\n      card:\n        type: \"markdown\"\n        content: &gt;\n          [[[\n            let time = states[variables.ulm_custom_card_paddy_welcome_time].state;\n            let welcome = '';\n\n            if (time &gt; '18:00'){\n              welcome = variables.ulm_evening;\n            } else if (time &gt; '12:00'){\n              welcome = variables.ulm_afternoon;\n            } else if (time &gt; '05:00'){\n              welcome = variables.ulm_morning;\n            } else {\n              welcome = variables.ulm_hello;\n            }\n            return welcome + ',&lt;br&gt;' + user.name + '!';\n          ]]]\n        card_mod:\n        style: |\n          ha-card {\n            border-radius: 14px;\n            box-shadow: none;\n            font-size: 30px;\n            text-align: left;\n            cursor: default;\n          }\n    item2:\n      card:\n        type: \"weather-forecast\"\n        entity: \"[[[ return variables.ulm_custom_card_paddy_welcome_weather_provider; ]]]\"\n        show_forecast: false\n        card_mod:\n        style: |\n          ha-card.type-weather-forecast {\n            border-radius: 14px;\n            box-shadow: none;\n          }\n          ha-card.type-weather-forecast .state {\n            text-align: left;\n            font-size: 14px;\n            font-weight: bolder;\n          }\n          ha-card.type-weather-forecast .name {\n            text-align: left;\n            font-size: 14px;\n          }\n          ha-card.type-weather-forecast .temp-attribute {\n            text-align: right;\n          }\n          ha-card.type-weather-forecast .temp {\n            text-align: right;\n            font-size: medium;\n            font-weight: bolder;\n            margin-right: 16px;\n          }\n          ha-card.type-weather-forecast .temp span {\n            text-align: right;\n            font-size: medium;\n            font-weight: bolder;\n          }\n          ha-card.type-weather-forecast .attribute {\n            text-align: right;\n            font-size: smaller;\n          }\n\ncustom_card_paddy_welcome_with_news:\n  template:\n    - \"ulm_language_variables\"\n  show_icon: false\n  show_name: false\n  show_label: false\n  styles:\n    grid:\n      - grid-template-areas: \"'item1' 'item2'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content min-content\"\n      - row-gap: \"12px\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n  custom_fields:\n    item1:\n      card:\n        type: \"markdown\"\n        content: &gt;\n          [[[\n            let time = states[variables.ulm_custom_card_paddy_welcome_time].state;\n            let welcome = '';\n\n            if (time &gt; '18:00'){\n              welcome = variables.ulm_evening;\n            } else if (time &gt; '12:00'){\n              welcome = variables.ulm_afternoon;\n            } else if (time &gt; '05:00'){\n              welcome = variables.ulm_morning;\n            } else {\n              welcome = variables.ulm_hello;\n            }\n            return welcome + ',&lt;br&gt;' + user.name + '!';\n          ]]]\n        card_mod:\n        style: |\n          ha-card {\n            border-radius: 14px;\n            box-shadow: none;\n            font-size: 30px;\n            text-align: left;\n            cursor: default;\n          }\n    item2:\n      card:\n        type: \"custom:home-feed-card\"\n        card_id: \"main_feed\"\n        show_empty: false\n        more_info_on_tap: true\n        state_color: false\n        compact_mode: true\n        max_item_count: 3\n        show_icons: true\n        entities: &gt;\n          [[[\n            return variables.ulm_custom_card_paddy_welcome_news_entities;\n          ]]]\n        card_mod:\n        style: |\n          ha-card {\n            border-radius: 14px;\n            box-shadow: none;\n            font-size: 14px;\n            text-align: left;\n          }\n</code></pre>"},{"location":"usage/custom_cards/custom_card_paddy_welcome/#custom-configuration-example","title":"Custom configuration Example","text":"<p>Here is one example, on how you can extend this (actually every) card. In the end we have the welcome card extended by four buttons to have something like a header with a navigation.</p> <pre><code>- type: horizontal-stack\n    cards:\n      - type: custom:button-card\n        template: edge\n      - type: custom:button-card\n        template: custom_card_paddy_welcome\n        # here we override the styles to extend the welcome card with a second item\n        styles:\n          grid:\n            - grid-template-areas: '\"item1\" \"item2\"'\n            - grid-template-rows: min-content min-content\n            - row-gap: 12px\n        custom_fields:\n        # here we set up the second item and its contents\n          item2:\n            card:\n              type: horizontal-stack\n              cards:\n                - type: custom:button-card\n                  template: edge\n                - type: custom:button-card\n                  template: vertical_buttons\n                  tap_action:\n                    action: navigate\n                    navigation_path: /ui-lovelace-minimalist/living\n                  icon: \"mdi:sofa\"\n                  name: Living\n                  label: Livingroom\n                - type: custom:button-card\n                  template: vertical_buttons\n                  tap_action:\n                    action: navigate\n                    navigation_path: /ui-lovelace-minimalist/working\n                  icon: \"mdi:factory\"\n                  name: Working\n                  label: Office\n                - type: custom:button-card\n                  template: vertical_buttons\n                  tap_action:\n                    action: navigate\n                    navigation_path: /ui-lovelace-minimalist/sleeping\n                  icon: \"mdi:bed-king-outline\"\n                  name: Sleeping\n                  label: Bedroom\n                - type: custom:button-card\n                  template: vertical_buttons\n                  tap_action:\n                    action: navigate\n                    navigation_path: /ui-lovelace-minimalist/climate\n                  icon: \"mdi:air-conditioner\"\n                  name: Air Conditioning\n                  label: Livingroom\n                - type: custom:button-card\n                  template: edge\n      - type: custom:button-card\n        template: edge\n</code></pre>"},{"location":"usage/custom_cards/custom_card_person_chip/","title":"Person Chip Custom-card","text":""},{"location":"usage/custom_cards/custom_card_person_chip/#custom-card-person-chip","title":"Custom-card \"Person Chip\"","text":"<p>This is a <code>custom-card</code> to display a person entity as a chip.</p> <p></p>"},{"location":"usage/custom_cards/custom_card_person_chip/#credits","title":"Credits","text":"<p>Author: tmatheussen - 2022 Version: 1.0.0</p>"},{"location":"usage/custom_cards/custom_card_person_chip/#changelog","title":"Changelog","text":"1.0.0 Initial release."},{"location":"usage/custom_cards/custom_card_person_chip/#usage","title":"Usage","text":"<pre><code>- type: 'custom:button-card'\n  template: custom_card_person_chip\n  variables:\n    ulm_custom_card_person_chip_entity: person.tom\n</code></pre>"},{"location":"usage/custom_cards/custom_card_person_chip/#variables","title":"Variables","text":"Variable Example Required Default Explanation ulm_custom_card_person_chip_entity person.tom yes The person to show"},{"location":"usage/custom_cards/custom_card_person_chip/#example","title":"Example","text":"<pre><code>- type: 'custom:button-card'\n  template: custom_card_person_chip\n  variables:\n    ulm_custom_card_person_chip_entity: person.tom\n</code></pre>"},{"location":"usage/custom_cards/custom_card_person_info/","title":"Person Info Card","text":""},{"location":"usage/custom_cards/custom_card_person_info/#description","title":"Description","text":"<p>The <code>custom_card_person_info</code> is an extension of <code>card_person</code>. It can also show if the user is driving, a related battery level, and a related commute time.</p>"},{"location":"usage/custom_cards/custom_card_person_info/#credits","title":"Credits","text":"<ul> <li>Author: Jordan Janzen &lt;@jordandrako&gt;</li> <li>Version: 1.0.0</li> </ul>"},{"location":"usage/custom_cards/custom_card_person_info/#variables","title":"Variables","text":"Variable Default Required Notes ulm_card_person_entity The person entity ulm_card_person_use_entity_picture If you set this to true, the card shows the entity picture from your user, otherwise (set to false) shows the icon. Default is false. ulm_card_person_zone1 Set another zone (beside \"home\") to use for the card. You can set up two zones besides \"home\". ulm_card_person_zone2 Set another zone (beside \"home\") to use for the card. You can set up two zones besides \"home\". ulm_address Show an address as label, add an entity with a geo location ulm_multiline false Show battery and commute sensors below state ulm_card_person_driving_entity Set a binary sensor that depicts when this person is driving ulm_card_person_battery_entity Set a battery level sensor ulm_card_person_battery_state_entity Set a battery state sensor (eg the battery state sensor from the home assistant companion app will have the states \"charging\" or \"discharging\") ulm_card_person_commute_entity Set a travel time sensor ulm_card_person_cummute_icon \"mdi:car\" Set an icon for the commute sensor to use"},{"location":"usage/custom_cards/custom_card_person_info/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: card_person_info\n  variables:\n    ulm_card_person_entity: person.lee\n    ulm_card_person_use_entity_picture: true\n    ulm_card_person_zone1: zone.uw\n    ulm_card_person_zone2: zone.store\n    ulm_multiline: true\n    ulm_card_person_driving_entity: binary_sensor.lee_in_car\n    ulm_card_person_commute_entity: sensor.uw_commute\n    ulm_card_person_commute_icon: mdi:bus\n    ulm_card_person_battery_entity: sensor.lees_phone_battery_level\n    ulm_card_person_battery_state_entity: sensor.lees_phone_battery_state\n</code></pre>"},{"location":"usage/custom_cards/custom_card_person_info/#template-code","title":"Template Code","text":"Template Code custom_card_person_info.yaml<pre><code>---\ncard_person_info:\n  template:\n    - \"icon_info_bg\"\n    - \"ulm_translation_engine\"\n  variables:\n    ulm_card_person_use_entity_picture: false\n    ulm_card_person_zone1: \"\"\n    ulm_card_person_zone2: \"\"\n    ulm_address: \"\"\n    ulm_address_locality: \"\"\n    ulm_card_person_driving_entity: \"\"\n    ulm_card_person_battery_entity: \"\"\n    ulm_card_person_battery_state_entity: \"\"\n    ulm_card_person_commute_entity: \"\"\n    ulm_card_person_cummute_icon: \"mdi:car\"\n    ulm_multiline: true\n  triggers_update: \"all\"\n  tap_action:\n    action: \"more-info\"\n    entity: \"[[[ return variables.ulm_card_person_entity; ]]]\"\n  show_label: true\n  show_name: true\n  label: &gt;\n    [[[\n      if (variables.ulm_address){\n        return states[variables.ulm_address].state;\n      } else if (variables.ulm_address_locality){\n        return states[variables.ulm_address_locality].attributes.Locality;\n      }\n      else if (states[variables.ulm_card_person_driving_entity]?.state === \"on\") {\n        let state = states[variables.ulm_card_person_entity].state;\n        return `Driving - ${variables.ulm_translation_state}`;\n      } else {\n        let state = states[variables.ulm_card_person_entity].state;\n        return hass.resources[hass[\"language\"]][\"component.person.entity_component._.state.\" + state] ? hass.resources[hass[\"language\"]][\"component.person.entity_component._.state.\" + state] : state;\n      }\n    ]]]\n  name: \"[[[ return states[variables.ulm_card_person_entity].attributes.friendly_name ]]]\"\n  entity: \"[[[ return variables.ulm_card_person_entity; ]]]\"\n  icon: \"mdi:face-man\"\n  show_entity_picture: \"[[[ return variables.ulm_card_person_use_entity_picture ]]]\"\n  entity_picture:\n    \"[[[ return variables.ulm_card_person_use_entity_picture != false ? states[variables.ulm_card_person_entity].attributes.entity_picture\\\n    \\ : null ]]]\"\n  styles:\n    grid:\n      - grid-template-areas: &gt;\n          [[[\n            return variables.ulm_multiline\n              ? \"'i n' 'i l' 'battery commute'\"\n              : \"'i n battery' 'i l commute'\"\n          ]]]\n      - grid-template-columns: &gt;\n          [[[\n            return variables.ulm_multiline\n              ? \"min-content auto\"\n              : \"min-content auto min-content\"\n          ]]]\n      - grid-template-rows: \"min-content min-content\"\n    icon:\n      - color: \"rgba(var(--color-theme),0.9)\"\n      - width: &gt;\n          [[[\n            if (variables.ulm_card_person_use_entity_picture !== true){\n              return \"20px\";\n            } else {\n              return \"42px\";\n            }\n          ]]]\n      - place-self: &gt;\n          [[[\n            if (variables.ulm_card_person_use_entity_picture !== true){\n              return \"center\";\n            } else {\n              return \"stretch stretch\";\n            }\n          ]]]\n    custom_fields:\n      notification:\n        - border-radius: \"50%\"\n        - position: \"absolute\"\n        - left: \"38px\"\n        - top: \"8px\"\n        - height: \"16px\"\n        - width: \"16px\"\n        - border: \"2px solid var(--card-background-color)\"\n        - font-size: \"12px\"\n        - line-height: \"14px\"\n        - background-color: &gt;\n            [[[\n              if (states[variables.ulm_card_person_driving_entity]?.state === \"on\") {\n                return \"rgba(var(--color-red),1)\";\n              } else if (states[variables.ulm_card_person_entity].state !== 'home') {\n                return \"rgba(var(--color-green),1)\";\n              } else {\n                return \"rgba(var(--color-blue),1)\";\n              }\n            ]]]\n      battery:\n        - align-self: \"middle\"\n        - justify-self: \"start\"\n        - display: \"flex\"\n        - align-items: \"center\"\n        - margin-top: &gt;\n            [[[\n              return variables.ulm_multiline ? \"6px\" : \"0\";\n            ]]]\n        - font-size: \"12px\"\n      commute:\n        - align-self: \"middle\"\n        - justify-self: \"end\"\n        - display: \"flex\"\n        - align-items: \"center\"\n        - margin-top: \"6px\"\n        - font-size: \"12px\"\n\n  custom_fields:\n    notification: &gt;\n      [[[\n        if (states[variables.ulm_card_person_driving_entity]?.state === \"on\") {\n          var icon = 'mdi:car'\n          return '&lt;ha-icon icon=\"' + icon + '\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;';\n        } else if (states[variables.ulm_card_person_entity].state !== 'home') {\n          if (states[variables.ulm_card_person_entity].state === states[variables.ulm_card_person_zone1]?.attributes?.friendly_name) {\n            var icon = states[variables.ulm_card_person_zone1].attributes.icon !== null ? states[variables.ulm_card_person_zone1].attributes.icon : 'mdi:help-circle'\n            return '&lt;ha-icon icon=\"' + icon + '\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;';\n          } else if (states[variables.ulm_card_person_entity].state === states[variables.ulm_card_person_zone2]?.attributes?.friendly_name) {\n            var icon = states[variables.ulm_card_person_zone2].attributes.icon !== null ? states[variables.ulm_card_person_zone2].attributes.icon : 'mdi:help-circle'\n            return '&lt;ha-icon icon=\"' + icon + '\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;';\n          } else {\n            return '&lt;ha-icon icon=\"mdi:home-minus\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;';\n          }\n        } else {\n          return '&lt;ha-icon icon=\"mdi:home-variant\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;';\n        }\n      ]]]\n    battery: &gt;\n      [[[\n        if (states[variables.ulm_card_person_battery_entity]?.state) {\n          var battery = states[variables.ulm_card_person_battery_entity]?.state;\n          var charging = states[variables.ulm_card_person_battery_state_entity]?.state.toLowerCase() === \"charging\";\n          var iconBase = charging ? \"mdi:battery-charging\" : \"mdi:battery\"\n          var roundedBattery = Math.ceil(battery / 10) * 10;\n          var icon = roundedBattery === 100 ? iconBase : `${iconBase}-${roundedBattery}`;\n          var foo = \"mdi:battery\"\n          var color = \"rgba(var(--color-green),1)\";\n          if (battery &lt;= 50) {\n            color = \"rgba(var(--color-yellow),1)\"\n          } else if (battery &lt;= 25) {\n            color = \"rgba(var(--color-red),1)\"\n          }\n          return `\n            &lt;ha-icon icon=\"${icon}\" style=\"width: 16px; height: 16px; font-size: 14px; color: ${color}; margin: 0 2px 0 0\"&gt;&lt;/ha-icon&gt;\n            &lt;span style=\"padding-top: 6px;\"&gt;${battery}%&lt;/span&gt;\n          `;\n        }\n      ]]]\n    commute: &gt;\n      [[[\n        if (states[variables.ulm_card_person_commute_entity]?.state) {\n          var icon = variables.ulm_card_person_commute_icon || \"mdi:car\";\n          var commute = states[variables.ulm_card_person_commute_entity]?.state;\n          var color = \"rgba(var(--color-green),1)\";\n          if (commute &gt;= 30) {\n            color = \"rgba(var(--color-yellow),1)\"\n          }\n          if (commute &gt;= 60) {\n            color = \"rgba(var(--color-red),1)\"\n          }\n          return `\n            &lt;ha-icon icon=\"${icon}\" style=\"width: 16px; height: 16px; font-size: 14px; color: ${color}; margin: 0 2px 0 0\"&gt;&lt;/ha-icon&gt;\n            &lt;span style=\"padding-top: 6px;\"&gt;${commute} min&lt;/span&gt;\n          `;\n        }\n      ]]]\n</code></pre>"},{"location":"usage/custom_cards/custom_card_person_info_small/","title":"Person Info Card","text":""},{"location":"usage/custom_cards/custom_card_person_info_small/#description","title":"Description","text":"<p>The <code>custom_card_person_info_small</code> is based on <code>card_person_info</code>.</p>"},{"location":"usage/custom_cards/custom_card_person_info_small/#credits","title":"Credits","text":"<ul> <li>Author: Imaginelenses &lt;@imaginelenses&gt;</li> <li>Based on person info card by Jordan Janzen &lt;@jordandrako&gt;</li> <li>Version: 1.0.0</li> </ul>"},{"location":"usage/custom_cards/custom_card_person_info_small/#variables","title":"Variables","text":"Variable Default Required Notes ulm_card_person_entity The person entity ulm_card_person_use_entity_picture true If you set this to true, the card shows the entity picture from your user, otherwise (set to false) shows the icon. Default is false. ulm_card_person_zone1 Set another zone (beside \"home\") to use for the card. You can set up two zones besides \"home\". ulm_card_person_zone2 Set another zone (beside \"home\") to use for the card. You can set up two zones besides \"home\". ulm_address Show an address as label, add an entity with a geo location ulm_card_person_driving_entity Set a binary sensor that depicts when this person is driving ulm_card_person_battery_entity Set a battery level sensor ulm_card_person_battery_state_entity Set a battery state sensor (eg the battery state sensor from the home assistant companion app will have the states \"charging\" or \"discharging\") ulm_card_battery_battery_level_danger 15 Changes the color of the Icon, if the battery level falls below the provided value. Must be higher than ulm_card_battery_battery_level_waring ulm_card_battery_battery_level_waring 30 Changes the color of the Icon, if the battery level falls below the provided value. ulm_card_battery_color_battery_level_danger var(--google-red) Color of icon if battery level is within the 'danger' zone. ulm_card_battery_color_battery_level_warning var(--google-yellow) Color of icon if battery level is within the 'warning' zone. ulm_card_battery_color_battery_level_ok var(--google-green) Color of icon if battery level is not within the 'danger' or 'warning' zone."},{"location":"usage/custom_cards/custom_card_person_info_small/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: card_person_info_small\n  variables:\n    ulm_card_person_entity: person.imaginelenses\n    ulm_card_person_zone1: zone.work\n    ulm_card_person_driving_entity: binary_sensor.driving\n    ulm_card_person_battery_entity: sensor.phone_battery_level\n    ulm_card_person_battery_state_entity: sensor.phone_battery_state\n</code></pre>"},{"location":"usage/custom_cards/custom_card_person_info_small/#template-code","title":"Template Code","text":"Template Code custom_card_person_info_small.yaml<pre><code>---\ncard_person_info_small:\n  template:\n    - \"icon_info_bg\"\n    - \"ulm_translation_engine\"\n  variables:\n    ulm_card_person_use_entity_picture: true\n    ulm_card_person_zone1: \"\"\n    ulm_card_person_zone2: \"\"\n    ulm_card_person_icon: \"mdi:face-man\"\n    ulm_address: \"\"\n    ulm_address_locality: \"\"\n    ulm_card_person_driving_entity: \"\"\n    ulm_card_person_battery_entity: \"\"\n    ulm_card_person_battery_state_entity: \"\"\n    ulm_card_battery_battery_level_danger: 15\n    ulm_card_battery_battery_level_warning: 30\n    ulm_card_battery_color_battery_level_danger: \"var(--google-red)\"\n    ulm_card_battery_color_battery_level_warning: \"var(--google-yellow)\"\n    ulm_card_battery_color_battery_level_ok: \"var(--google-green)\"\n  triggers_update: \"all\"\n  tap_action:\n    action: \"more-info\"\n    entity: \"[[[ return variables.ulm_card_person_entity; ]]]\"\n  hold_action:\n    action: \"more-info\"\n    entity: \"[[[ return variables.ulm_card_person_battery_entity; ]]]\"\n  show_label: true\n  show_name: true\n  label: &gt;\n    [[[\n      if (variables.ulm_address){\n        return states[variables.ulm_address].state;\n      } else if (variables.ulm_address_locality){\n        return states[variables.ulm_address_locality].attributes.Locality;\n      }\n      else if (states[variables.ulm_card_person_driving_entity]?.state === \"on\") {\n        let state = states[variables.ulm_card_person_entity].state;\n        return `Driving - ${variables.ulm_translation_state}`;\n      } else {\n        let state = states[variables.ulm_card_person_entity].state;\n        return hass.resources[hass[\"language\"]][\"component.person.entity_component._.state.\" + state] ? hass.resources[hass[\"language\"]][\"component.person.entity_component._.state.\" + state] : state;\n      }\n    ]]]\n  name: \"[[[ return states[variables.ulm_card_person_entity].attributes.friendly_name ]]]\"\n  entity: \"[[[ return variables.ulm_card_person_entity; ]]]\"\n  icon: \"[[[ return variables.ulm_card_person_icon; ]]]\"\n  show_entity_picture: \"[[[ return variables.ulm_card_person_use_entity_picture ]]]\"\n  entity_picture:\n    \"[[[ return variables.ulm_card_person_use_entity_picture != false ? states[variables.ulm_card_person_entity].attributes.entity_picture\\\n    \\ : null ]]]\"\n  styles:\n    grid:\n      - grid-template-areas: \"'i battery' 'n n' 'l l'\"\n    icon:\n      - color: \"rgba(var(--color-theme),0.9)\"\n      - width: \"42px\"\n      - place-self: \"start\"\n    name:\n      - place-self: \"center\"\n      - margin-left: 0\n      - margin-top: \"6%\"\n    label:\n      - place-self: \"center\"\n      - margin-left: 0\n      - text-transform: \"capitalize\"\n    custom_fields:\n      notification:\n        - position: \"absolute\"\n        - top: \"7%\"\n        - left: \"38px\"\n        - height: \"16px\"\n        - width: \"16px\"\n        - border: \"2px solid var(--card-background-color)\"\n        - border-radius: \"50%\"\n        - font-size: \"12px\"\n        - line-height: \"14px\"\n        - background-color: &gt;\n            [[[\n              if (states[variables.ulm_card_person_entity].state == 'home') {\n                return \"rgba(var(--color-blue),1)\";\n              } else {\n                return \"rgba(var(--color-yellow),1)\";\n              }\n            ]]]\n      battery:\n        - width: \"30px\"\n        - height: \"30px\"\n        - place-self: \"end\"\n        - align-self: \"center\"\n        - background-color: \"rgba(var(--primary-background-color), 0.5)\"\n        - border: \"2px solid var(--card-background-color)\"\n        - border-radius: \"50%\"\n\n  custom_fields:\n    notification: &gt;\n      [[[\n        let height = \"11px\";\n        let width = \"11px\";\n        if (states[variables.ulm_card_person_entity].state !== 'home') {\n          if (states[variables.ulm_card_person_entity].state === states[variables.ulm_card_person_zone1]?.attributes?.friendly_name) {\n            var icon = states[variables.ulm_card_person_zone1].attributes.icon !== null ? states[variables.ulm_card_person_zone1].attributes.icon : 'mdi:help-circle'\n            return `&lt;ha-icon icon=\"' + icon + '\" style=\"height: ${height}; width: ${width}; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;`;\n          } else if (states[variables.ulm_card_person_entity].state === states[variables.ulm_card_person_zone2]?.attributes?.friendly_name) {\n            var icon = states[variables.ulm_card_person_zone2].attributes.icon !== null ? states[variables.ulm_card_person_zone2].attributes.icon : 'mdi:help-circle'\n            return `&lt;ha-icon icon=\"' + icon + '\" style=\"height: ${height}; width: ${width}; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;`;\n          } else {\n            return `&lt;ha-icon icon=\"mdi:home-minus\" style=\"height: ${height}; width: ${width}; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;`;\n          }\n        } else {\n          return `&lt;ha-icon icon=\"mdi:home-variant\" style=\"height: ${height}; width: ${width}; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;`;\n        }\n      ]]]\n    battery: &gt;\n      [[[\n        if (states[variables.ulm_card_person_battery_entity]?.state) {\n          let battery_level = states[variables.ulm_card_person_battery_entity]?.state;\n          battery_level = Number(battery_level);\n          let charging = states[variables.ulm_card_person_battery_state_entity]?.state.toLowerCase() === \"charging\";\n\n          var infix = charging ? \"-charging\" : \"\"\n          let icon = \"mdi:help-circle-outline\";\n          if (battery_level == 100) {\n            icon = \"mdi:battery\";\n          } else if (battery_level &lt; 10) {\n            icon = \"mdi:battery\" + infix + \"-outline\";\n          } else if (battery_level == \"unknown\" || battery_level == \"unavailable\") {\n            icon = \"mdi:battery-off\";\n          } else {\n            icon = \"mdi:battery\" + infix + \"-\" + Math.floor(battery_level / 10) * 10;\n          }\n\n          let color = variables.ulm_card_battery_color_battery_level_ok;\n          if (battery_level !== \"unavailable\") {\n            if (battery_level &lt;= variables.ulm_card_battery_battery_level_danger) {\n              color = variables.ulm_card_battery_color_battery_level_danger;\n            } else if (battery_level &lt;= variables.ulm_card_battery_battery_level_warning) {\n              color = variables.ulm_card_battery_color_battery_level_warning;\n            } else {\n              color = variables.ulm_card_battery_color_battery_level_ok;\n            }\n          }\n\n          return `\n            &lt;ha-icon icon=\"${icon}\" style=\"height: 27px; width: 27px; color: ${color};\"&gt;&lt;/ha-icon&gt;\n          `;\n        }\n      ]]]\n</code></pre>"},{"location":"usage/custom_cards/custom_card_playstation/","title":"PS4 Custom-card","text":""},{"location":"usage/custom_cards/custom_card_playstation/#playstation","title":"Playstation","text":"<p>NOTE This card is under review and is not ready to use!</p> Usage  #### Example  <pre><code>- type: \"custom:button-card\"\n  template: card_ps4\n  entity: media_player.example\n</code></pre>  #### Variables   Variable Example Required Explanation Template Code custom_card_playstation.yaml<pre><code>---\ncard_ps4:\n  template:\n    - \"icon_info_bg\"\n    - \"ulm_translation_engine\"\n  label: \"[[[ return variables.ulm_translation_state ]]]\"\n  styles:\n    icon:\n      - color: \"rgba(var(--color-theme),0.2)\"\n    img_cell:\n      - background-color: \"rgba(var(--color-theme),0.05)\"\n  state:\n    - value: \"idle\"\n      styles:\n        icon:\n          - color: \"rgba(var(--color-blue),1)\"\n        img_cell:\n          - background-color: \"rgba(var(--color-blue), 0.2)\"\n    - value: \"standby\"\n      styles:\n        icon:\n          - color: \"rgba(var(--color-theme),0.2)\"\n        img_cell:\n          - background-color: \"rgba(var(--color-theme),0.05)\"\n    - operator: \"template\"\n      value: \"[[[ return entity.state !='unknown' ]]]\"\n      name: \"[[[ return entity.attributes.media_title; ]]]\"\n      label: \"[[[ return entity.attributes.friendly_name; ]]]\"\n      styles:\n        label:\n          - color: \"white\"\n          - filter: \"opacity(100%)\"\n        img_cell:\n          - background-color: \"none\"\n        icon:\n          - color: \"white\"\n        name:\n          - color: \"white\"\n        card:\n          - background-blend-mode: \"multiply\"\n          - background: &gt;\n              [[[\n                var image = entity.attributes.entity_picture;\n                return 'center / cover url(' + image + ') rgba(0, 0, 0, 0.15)';\n              ]]]\n</code></pre>"},{"location":"usage/custom_cards/custom_card_qubino/","title":"Qubino Custom-card","text":""},{"location":"usage/custom_cards/custom_card_qubino/#custom-card-qubino","title":"Custom-card \"Qubino\"","text":"<p>NOTE This card is under review and is not ready to use!</p>"},{"location":"usage/custom_cards/custom_card_qubino/#credits","title":"Credits","text":"<p>Author: tben - 2021 Version: 1.0.0</p>"},{"location":"usage/custom_cards/custom_card_qubino/#changelog","title":"Changelog","text":"1.0.0 Initial release"},{"location":"usage/custom_cards/custom_card_qubino/#usage","title":"Usage","text":""},{"location":"usage/custom_cards/custom_card_qubino/#requirements","title":"Requirements","text":"<p>This card needs the following to function correctly:</p> Component / card required Note"},{"location":"usage/custom_cards/custom_card_qubino/#variables","title":"Variables","text":"Variable Example Required Explanation"},{"location":"usage/custom_cards/custom_card_qubino/#template-code","title":"Template code","text":"Template Code custom_card_qubino.yaml<pre><code>---\ncard_qubino:\n  icon: \"mdi:memory\"\n  tap_action:\n    action: \"more-info\"\n    entity: \"input_select.ordres_fil_pilote\"\n  label: &gt;-\n    [[[ if (entity.state !='unavailable'){\n          var bri = Math.round(entity.attributes.brightness / 2.55);\n          var bri = (bri ? bri : '0')\n          var consigne = 'Inconnue';\n        if (bri &gt;= 51){\n          var consigne = 'Confort';\n        } else if(bri &lt; 51 &amp;&amp; bri &gt;= 41){\n          var consigne = 'Confort -1\u00b0C';\n        } else if(bri &lt; 41 &amp;&amp; bri &gt;= 31){\n          var consigne = 'Confort -2\u00b0C\ufe0f';\n        } else if(bri &lt; 31 &amp;&amp; bri &gt;= 21){\n          var consigne = 'Eco\ufe0f';\n        } else if(bri &lt; 21 &amp;&amp; bri &gt;= 11){\n          var consigne = 'Hors Gel\ufe0f';\n        } else if(bri &lt; 11 &amp;&amp; bri &gt;= 0){\n          var consigne = 'Arr\u00eat\ufe0f';\n        }\n        return consigne + ' \u2022 ' + bri;\n      }else{\n        return \"Indisponible\";\n      }\n    ]]]\n  template:\n    - \"blue\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_qubino/#homeassistant","title":"HomeAssistant","text":"<p>...</p>"},{"location":"usage/custom_cards/custom_card_qubino/#example","title":"Example","text":"<p>...</p>"},{"location":"usage/custom_cards/custom_card_qubino/#note","title":"Note","text":"<p>...</p>"},{"location":"usage/custom_cards/custom_card_ristou_person/","title":"Custom Card Ristou Person","text":""},{"location":"usage/custom_cards/custom_card_ristou_person/#custom-card-ristou-person","title":"Custom Card Ristou Person","text":"Light Dark"},{"location":"usage/custom_cards/custom_card_ristou_person/#credits","title":"Credits","text":"<ul> <li>Author: Ristou - 2022</li> <li>Version: 1.0.0</li> </ul>"},{"location":"usage/custom_cards/custom_card_ristou_person/#changelog","title":"Changelog","text":"1.0.1  - Fixed image path on documentation - Added new template on card ( `icon_more_info_new` &amp; `ulm_actions_card` )   1.0.0 Initial release"},{"location":"usage/custom_cards/custom_card_ristou_person/#description","title":"Description","text":"<p>The <code>custom_card_ristou_person</code> shows if a person is <code>home</code> or <code>not_home</code>. If you have setup other zones, it will show these as well (e.g <code>work</code>, <code>school</code>, <code>doctor</code>, etc... ).</p> <p>Showing driving state is also possible with a binary sensor.</p> <p>In addition, this card can display a map (either static or using built in map) in a second row.</p>"},{"location":"usage/custom_cards/custom_card_ristou_person/#icon-style","title":"Icon style","text":"<p>As the main icon of this card you can choose the following set up</p> Variables UI ulm_custom_card_ristou_use_badge: <code>true</code>  ulm_custom_card_ristou_use_entity_picture: <code>false</code> ulm_custom_card_ristou_use_badge: <code>true</code>  ulm_custom_card_ristou_use_entity_picture: <code>true</code> ulm_custom_card_ristou_use_badge: <code>false</code>  ulm_custom_card_ristou_use_entity_picture: <code>false</code>"},{"location":"usage/custom_cards/custom_card_ristou_person/#map-style","title":"map style","text":"Variables UI ulm_custom_card_ristou_camera_entity_light != \"\" and  ulm_custom_card_ristou_camera_entity_dark != \"\" ulm_custom_card_ristou_map_enable: <code>true</code> ulm_custom_card_ristou_camera_entity_light = \"\" and ulm_custom_card_ristou_camera_entity_dark = \"\" and ulm_custom_card_ristou_map_enable = <code>false</code>"},{"location":"usage/custom_cards/custom_card_ristou_person/#about-static-maps","title":"About Static maps","text":"<p>The advantage of static map is that it is easy to custom and non-draggable. For instance when you scroll down and you accidentally press first on map card.</p> <p>I choose map box for the following reasons:</p> <ul> <li>Easy to sep it up with static image API playground</li> <li>Already existing styles (light &amp; dark) to fit to your theme.</li> <li>Add many custom markers, I decided to represent my current location , home, and work.</li> <li>Possibility to remove attribution and logo.</li> </ul> <p>URL can be directly used inside a camera entity using dynamic markers as explain here</p> <p>below is an example of the url I use for mapbox:</p> <pre><code>https://api.mapbox.com/styles/v1/mapbox/light-v10/static/pin-l-suitcase+f88927({{ state_attr('zone.work', 'longitude') }},{{ state_attr('zone.work', 'latitude') }}),pin-l-home+01C852({{ state_attr('zone.home', 'longitude') }},{{ state_attr('zone.home', 'latitude') }}),pin-l-m+3D5AFE({{ state_attr('device_tracker.mathieu_phone', 'longitude') }},{{ state_attr('device_tracker.mathieu_phone', 'latitude') }})/auto/466x200?attribution=false&amp;logo=false&amp;&amp;access_token=YOUR_TOKEN\n</code></pre>"},{"location":"usage/custom_cards/custom_card_ristou_person/#known-issues","title":"Known issues","text":""},{"location":"usage/custom_cards/custom_card_ristou_person/#map","title":"map","text":"<p>built in map is not always rendering properly. I observed 2 issues:</p> <ul> <li>Not displaying if under sub stack like <code>horizontal stack</code> or <code>vertical stack</code>. another map has to be added somewhere else in the page. Github issue</li> <li>In IOS (never tried with other devices) bottom corner radius is not taken into consideration</li> </ul>"},{"location":"usage/custom_cards/custom_card_ristou_person/#static-map","title":"Static map","text":"<p>Static map can be blurry if ratio does not fit card width. In my case I used developer tool to find out exact width of the card (which is 466px) and then I adjusted the height to my needs.</p>"},{"location":"usage/custom_cards/custom_card_ristou_person/#variables","title":"Variables","text":"Variable Default Required Notes entity \u2714\ufe0f person entity ulm_custom_card_ristou_use_entity_picture false \u274c If you set this to true, the card shows the entity picture from your user, otherwise (set to false) shows the icon. Default is false. ulm_custom_card_ristou_use_badge true \u274c Show a notification badge on the icon. if set to false and not sing entity picture, then icon will be dynamically displayed to (Home, Away, Known place, or CAR) ulm_custom_card_ristou_map_enable false \u274c Display built in map as a second row ulm_custom_card_ristou_map_aspect_ratio 16:5 \u274c Display built in map as a second row ulm_custom_card_ristou_map_hours_to_show 24 \u274c Display built in map as a second row ulm_custom_card_ristou_map_default_zoom 9 \u274c Display built in map as a second row ulm_custom_card_ristou_camera_entity_light \u274c Camera entity picture in light mode ulm_custom_card_ristou_camera_entity_dark \u274c Camera entity picture in dark mode ulm_custom_card_ristou_zones \u274c Used to display known zone on badge, icon, label or map ulm_custom_card_ristou_find_device_script \u274c Show a button to find your device"},{"location":"usage/custom_cards/custom_card_ristou_person/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: custom_card_ristou_person\n  entity: person.mathieu\n  variables:\n    ulm_custom_card_ristou_use_entity_picture: true\n    ulm_custom_card_ristou_find_device_script: script.find_phone_mathieu\n    ulm_custom_card_ristou_person_driving_entity: binary_sensor.mathieu_driving\n    ulm_custom_card_ristou_camera_entity_light: \"camera.mapbox_mathieu_light\"\n    ulm_custom_card_ristou_camera_entity_dark: \"camera.mapbox_mathieu_dark\"\n    ulm_custom_card_ristou_zones:\n      - person.isabelle\n      - person.mathieu\n      - zone.work\n      - zone.judo\n      - zone.doctor\n      - zone.nounou\n      - zone.work_isabelle\n</code></pre>"},{"location":"usage/custom_cards/custom_card_ristou_person/#template-code","title":"Template code","text":"Template Code custom_card_ristou_person.yaml<pre><code>---\n### custom card ristou person ###\ncustom_card_ristou_person:\n  template:\n    - \"ulm_translation_engine\"\n    - \"ulm_custom_card_ristou_person_language_variables\"\n    - \"icon_more_info_new\"\n    - \"ulm_actions_card\"\n  variables:\n    ulm_custom_card_ristou_name: \"[[[ return entity.attributes.friendly_name ]]]\"\n    ulm_custom_card_ristou_icon: \"[[[ return entity.attributes.icon ]]]\"\n    ulm_custom_card_ristou_use_entity_picture: false\n    ulm_custom_card_ristou_use_badge: true\n    ulm_custom_card_ristou_map_enable: false\n    ulm_custom_card_ristou_find_device_script: \"\"\n    ulm_custom_card_ristou_zones:\n    ulm_custom_card_ristou_person_driving_entity: \"\"\n    ulm_custom_card_ristou_map_aspect_ratio: \"466:200\"\n    ulm_custom_card_ristou_map_hours_to_show: 0\n    ulm_custom_card_ristou_map_default_zoom: 11\n    ulm_custom_card_ristou_camera_entity_light: \"\"\n    ulm_custom_card_ristou_camera_entity_dark: \"\"\n  show_icon: false\n  show_name: false\n  show_label: false\n  triggers_update: \"all\"\n  styles:\n    grid:\n      - grid-template-areas: &gt;\n          [[[\n            if (variables.ulm_custom_card_ristou_map_enable) {\n                return \"\\\"item1\\\" \\\"item3\\\"\";\n            } else if (\n              variables.ulm_custom_card_ristou_camera_entity_light !== \"\"\n              &amp;&amp; variables.ulm_custom_card_ristou_camera_entity_dark !== \"\"\n            ) {\n                return \"\\\"item1\\\" \\\"item2\\\"\";\n            } else {\n              return \"\\\"item1\\\"\"\n            }\n          ]]]\n      - grid-template-columns: &gt;\n          [[[\n\n            return \"1fr\";\n          ]]]\n      - grid-template-rows: &gt;\n          [[[\n            return \"1fr\";\n          ]]]\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"0px\"\n    custom_fields:\n      item2:\n        - display: &gt;\n            [[[\n              if (\n                variables.ulm_custom_card_ristou_camera_entity_light !== \"\"\n                &amp;&amp; variables.ulm_custom_card_ristou_camera_entity_dark !== \"\"\n                &amp;&amp; !variables.ulm_custom_card_ristou_map_enable\n              ) {\n                  return \"block\";\n              } else {\n                  return \"none\";\n              }\n            ]]]\n      item3:\n        - display: &gt;\n            [[[\n              if (variables.ulm_custom_card_ristou_map_enable) {\n                  return \"block\";\n              } else {\n                  return \"none\";\n              }\n            ]]]\n  custom_fields:\n    item1:\n      ###############\n      ### 1ST ROW ###\n      ###############\n      card:\n        type: \"custom:button-card\"\n        template:\n          - \"icon_more_info\"\n        styles:\n          grid:\n            - grid-template-areas: \"'item1 item2 item3'\"\n            - grid-template-columns: \"min-content 1fr auto\"\n            - grid-template-rows: \"min-content\"\n          custom_fields:\n            item3:\n              - display: &gt;\n                  [[[\n                        if (variables.ulm_custom_card_ristou_find_device_script !== \"\") {\n                            return \"block\";\n                        } else {\n                            return \"none\";\n                        }\n                  ]]]\n        custom_fields:\n          ###################\n          ### PERSON ICON ###\n          ###################\n          item1:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              icon: &gt;\n                [[[\n                  if (!variables.ulm_custom_card_ristou_use_badge) {\n                    var zones = variables.ulm_custom_card_ristou_zones;\n                    var person_location = entity.state;\n                    var driving_state = \"off\"\n                    if (variables.ulm_custom_card_ristou_person_driving_entity !== \"\") {\n                      driving_state = states[variables.ulm_custom_card_ristou_person_driving_entity].state;\n                    }\n                    if (driving_state === \"on\" || driving_state === \"true\") {\n                      return \"mdi:car\";\n                    } else {\n                      if (person_location !== 'home'){\n                          for (const item of zones){\n                            if (person_location == states[item]?.attributes?.friendly_name){\n                              var icon = (states[item].attributes.icon !== null) ? states[item].attributes.icon : 'mdi:help-circle';\n                              return icon ;\n                            } else if (person_location == 'not_home'){\n                              return \"mdi:home-minus\";\n                            }\n                          }\n                      } else{\n                        return \"mdi:home-variant\";\n                      }\n                    }\n                  } else {\n                    return  \"mdi:face-man\";\n                  }\n                ]]]\n              show_entity_picture: \"[[[ return variables.ulm_custom_card_ristou_use_entity_picture ]]]\"\n              entity_picture:\n                \"[[[ return variables.ulm_custom_card_ristou_use_entity_picture != false ? states[entity.entity_id].attributes.entity_picture\\\n                \\ : null ]]]\"\n              styles:\n                icon:\n                  - color: &gt;\n                      [[[\n                        if (!variables.ulm_custom_card_ristou_use_badge) {\n                          var zones = variables.ulm_custom_card_ristou_zones;\n                          var person_location = entity.state;\n                          var driving_state = \"off\"\n                          if (variables.ulm_custom_card_ristou_person_driving_entity !== \"\") {\n                            driving_state = states[variables.ulm_custom_card_ristou_person_driving_entity].state;\n                          }\n\n                          if (driving_state === \"on\" || driving_state === \"true\") {\n                            return 'rgba(var(--color-red),0.9)';\n                          } else {\n                            if (person_location !== 'home'){\n                              for (const item of zones){\n                                if (person_location == states[item]?.attributes?.friendly_name){\n                                  return 'rgba(var(--color-yellow),0.9)';\n                                } else if (person_location == 'not_home'){\n                                  return 'rgba(var(--color-blue),0.9)';\n                                }\n                              }\n                            } else{\n                              return 'rgba(var(--color-green),0.9)';\n                            }\n                          }\n                        } else {\n                          return \"rgba(var(--color-theme),0.9)\";\n                        }\n                      ]]]\n                  - width: &gt;\n                      [[[\n                        if (variables.ulm_custom_card_ristou_use_entity_picture !== true){\n                          return \"20px\";\n                        } else {\n                          return \"42px\";\n                        }\n                      ]]]\n                  - place-self: &gt;\n                      [[[\n                        if (variables.ulm_custom_card_ristou_use_entity_picture !== true){\n                          return \"center\";\n                        } else {\n                          return \"stretch stretch\";\n                        }\n                      ]]]\n                img_cell:\n                  - background-color: &gt;\n                      [[[\n                        if (!variables.ulm_custom_card_ristou_use_badge) {\n                          var zones = variables.ulm_custom_card_ristou_zones;\n                          var person_location = entity.state;\n                          var driving_state = \"off\"\n                          if (variables.ulm_custom_card_ristou_person_driving_entity !== \"\") {\n                            driving_state = states[variables.ulm_custom_card_ristou_person_driving_entity].state;\n                          }\n                          if (driving_state === \"on\" || driving_state === \"true\") {\n                            return 'rgba(var(--color-red),0.2)';\n                          } else {\n                            if (person_location !== 'home'){\n                              for (const item of zones){\n                                if (person_location == states[item]?.attributes?.friendly_name){\n                                  return 'rgba(var(--color-yellow),0.2)';\n                                } else if (person_location == 'not_home'){\n                                  return 'rgba(var(--color-blue),0.2)';\n                                }\n                              }\n                            } else {\n                              return 'rgba(var(--color-green),0.2)';\n                            }\n                          }\n                        } else {\n                          return 'rgba(var(--color-theme),0.05)';\n                        }\n                      ]]]\n                card:\n                  - box-shadow: \"none\"\n                  - border-radius: \"var(--border-radius) var(--border-radius) 0px 0px\"\n                  - padding: \"12px 0px 12px 12px\"\n                custom_fields:\n                  notification:\n                    - border-radius: \"50%\"\n                    - position: \"absolute\"\n                    - left: \"38px\"\n                    - top: \"8px\"\n                    - height: \"16px\"\n                    - width: \"16px\"\n                    - border: \"2px solid var(--card-background-color)\"\n                    - font-size: \"12px\"\n                    - line-height: \"14px\"\n                    - background-color: &gt;\n                        [[[\n                          var zones = variables.ulm_custom_card_ristou_zones;\n                          var person_location = entity.state;\n                          var driving_state = \"off\"\n                          if (variables.ulm_custom_card_ristou_person_driving_entity !== \"\") {\n                            driving_state = states[variables.ulm_custom_card_ristou_person_driving_entity].state;\n                          }\n                          if (driving_state === \"on\" || driving_state === \"true\") {\n                            return \"rgba(var(--color-red),1)\";\n                          } else {\n                            if (person_location !== 'home'){\n                              for (const item of zones){\n                                if (person_location == states[item]?.attributes?.friendly_name){\n                                  return \"rgba(var(--color-yellow),1)\";\n                                } else if (person_location == 'not_home'){\n                                  return \"rgba(var(--color-blue),1)\";\n                                }\n                              }\n                            } else{\n                              return \"rgba(var(--color-green),1)\";\n                            }\n                          }\n                        ]]]\n                    - display: &gt;\n                        [[[\n                              if (variables.ulm_custom_card_ristou_use_badge) {\n                                  return \"block\";\n                              } else {\n                                  return \"none\";\n                              }\n                        ]]]\n              custom_fields:\n                notification: &gt;\n                  [[[\n                    var zones = variables.ulm_custom_card_ristou_zones;\n                    var person_location = entity.state;\n                    var driving_state = \"off\"\n                    var icon = \"mdi:help-circle\"\n                    if (variables.ulm_custom_card_ristou_person_driving_entity !== \"\") {\n                      driving_state = states[variables.ulm_custom_card_ristou_person_driving_entity].state;\n                    }\n                    if (driving_state === \"on\" || driving_state === \"true\") {\n                      icon = 'mdi:car';\n                    } else {\n                      if (person_location !== 'home'){\n                        for (const item of zones){\n                          if (person_location == states[item]?.attributes?.friendly_name){\n                            icon = (states[item].attributes.icon !== null) ? states[item].attributes.icon : 'mdi:help-circle';\n                          } else if (person_location == 'not_home'){\n                            icon = 'mdi:home-minus';\n                          }\n                        }\n                      } else{\n                        icon = 'mdi:home-variant';\n                      }\n                    }\n                    return '&lt;ha-icon icon=\"' + icon + '\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;';\n                  ]]]\n          #####################\n          ### LABEL + STATE ###\n          #####################\n          item2:\n            card:\n              type: \"custom:button-card\"\n              entity: \"[[[ return entity.entity_id ]]]\"\n              name: \"[[[ return variables.ulm_custom_card_ristou_name ]]]\"\n              label: &gt;-\n                [[[\n                  var location = entity.state\n                  var driving_state = \"off\"\n                  if (variables.ulm_custom_card_ristou_person_driving_entity !== \"\") {\n                    driving_state = states[variables.ulm_custom_card_ristou_person_driving_entity].state;\n                  }\n                  if (driving_state === \"on\" || driving_state === \"true\") {\n                    return variables.ulm_custom_card_ristou_person_driving;\n                  } else {\n                    let state = location;\n                    let option = [\"home\", \"not_home\", \"unavailable\", \"unknown\"]\n                    return (option.includes(state)) ? variables.ulm_translation_state : state\n                  }\n                ]]]\n          #####################\n          ### FIND MY PHONE ###\n          #####################\n          item3:\n            card:\n              template:\n                - \"icon_info_bg\"\n                - \"blue\"\n              show_name: false\n              show_label: false\n              type: \"custom:button-card\"\n              entity: \"[[[ return variables.ulm_custom_card_ristou_find_device_script ]]]\"\n              icon: \"[[[ return variables.ulm_custom_card_ristou_icon ]]]\"\n              tap_action:\n                action: \"toggle\"\n              styles:\n                card:\n                  - box-shadow: \"none\"\n                  - border-radius: \"var(--border-radius)\"\n                  - padding: \"12px\"\n    ###############\n    ### 2ND ROW ###\n    ###############\n    item2:\n      ##################\n      ### STATIC MAP ###\n      ##################\n      card:\n        type: \"picture-entity\"\n        show_state: false\n        show_name: false\n        camera_view: \"auto\"\n        entity: &gt;-\n          [[[\n              if (hass.themes.darkMode) {\n                return variables.ulm_custom_card_ristou_camera_entity_dark;\n              } else {\n                return variables.ulm_custom_card_ristou_camera_entity_light;\n              }\n          ]]]\n        style:\n          .: |\n            ha-card {\n              box-shadow: none;\n              border-radius: 0px 0px var(--border-radius) var(--border-radius);\n            }\n    item3:\n      ###################\n      ### BUILTIN MAP ###\n      ###################\n      card:\n        type: \"map\"\n        default_zoom: \"[[[ return variables.ulm_custom_card_ristou_map_default_zoom ]]]\"\n        aspect_ratio: \"[[[ return variables.ulm_custom_card_ristou_map_aspect_ratio ]]]\"\n        hours_to_show: \"[[[ return variables.ulm_custom_card_ristou_map_hours_to_show ]]]\"\n        entities: \"[[[ return variables.ulm_custom_card_ristou_zones ]]]\"\n        style:\n          ha-map$: |\n            .leaflet-control-attribution {\n              visibility: hidden;\n            }\n            .leaflet-control-zoom {\n              visibility: hidden;\n            }\n          .: |\n            ha-card {\n              box-shadow: none;\n              border-radius: 0px 0px var(--border-radius) var(--border-radius);\n            }\n</code></pre>"},{"location":"usage/custom_cards/custom_card_saxel_fan/","title":"Fan Card Custom-card","text":""},{"location":"usage/custom_cards/custom_card_saxel_fan/#custom-card-fan","title":"Custom-card \"Fan\"","text":"<p>This is a custom card to control a fan. It allows you to turn on/off the fan, adjusting the fan speed with a slider, and turn on/off oscillation. Two styles are available:</p> Template Description custom_card_saxel_fan Follows the standard theme of UI-Lovelace-Minimalist custom_card_saxel_fan_blue Card is theme based when the fan is OFF, Blue when the fan is ON"},{"location":"usage/custom_cards/custom_card_saxel_fan/#light-theme","title":"Light theme","text":""},{"location":"usage/custom_cards/custom_card_saxel_fan/#dark-theme","title":"Dark theme","text":""},{"location":"usage/custom_cards/custom_card_saxel_fan/#credits","title":"Credits","text":"<p>Author: saxel - 2021 Version: 1.0.0</p>"},{"location":"usage/custom_cards/custom_card_saxel_fan/#changelog","title":"Changelog","text":"1.0.0   Initial release"},{"location":"usage/custom_cards/custom_card_saxel_fan/#requirements","title":"Requirements","text":"<p>This card needs the following to function correctly:</p> Component / card Required Note My Cards yes Card Mod yes"},{"location":"usage/custom_cards/custom_card_saxel_fan/#usage","title":"Usage","text":""},{"location":"usage/custom_cards/custom_card_saxel_fan/#standard","title":"Standard","text":"<pre><code>- type: custom:button-card\n  template: custom_card_saxel_fan_blue\n  entity: fan.smart_fan\n  name: Fan\n  variables:\n    collapsible: false\n    oscillate_attribute: oscillate\n</code></pre>"},{"location":"usage/custom_cards/custom_card_saxel_fan/#blue","title":"Blue","text":"<pre><code>- type: custom:button-card\n  template: custom_card_saxel_fan\n  entity: fan.smart_fan\n  name: Fan\n  variables:\n    collapsible: true\n    oscillate_attribute: oscillate\n</code></pre>"},{"location":"usage/custom_cards/custom_card_saxel_fan/#variables","title":"Variables","text":"Variable Example Required Explanation entity fan.smart_fan yes Fan entity name Fan no Name to show. If not specified the attribute friendly_name is shown instead collapsible true no true/false if the fan speed row should collapse when the fan is turned off. Default: true ulm_card_fan_horizontal true no Single Line Horizontal Control. Collapsible MUST be false for this currently. Default: false ulm_show_button false no Set to false to remove the Button and have a full width Slider. Default: true ulm_button_icon mdi:button no Set the icon for the Button. Default: mdi:rotate-3d-variant ulm_button_service fan.toggle no Name of the Service Call on button press. Default: fan.oscillate oscillate_attribute oscillate no Name of the oscillate attribute of the fan entity. Default: oscillate"},{"location":"usage/custom_cards/custom_card_scenes/","title":"Scenes Card Custom-card","text":""},{"location":"usage/custom_cards/custom_card_scenes/#custom-card-scenes-card","title":"Custom-card \"Scenes Card\"","text":"<p>The <code>card_scenes</code> you can control up to 5 <code>entity</code> such as <code>scene</code>, <code>script</code> or <code>automation</code>.</p> <p></p>"},{"location":"usage/custom_cards/custom_card_scenes/#credits","title":"CreditsBreaking changes","text":"<p>Author: sildehoop - 2021 Version: 1.2.0</p> 1.2.0 <pre><code>#OLD\n- type: \"custom:button-card\"\n template:\n   - card_scenes\n variables:\n   entity_1: \"scene.YOUR_SCENE\"\n   entity_2: \"scene.YOUR_SCENE\"\n   entity_3: \"scene.YOUR_SCENE\"\n   entity_4: \"scene.YOUR_SCENE\"\n   entity_5: \"scene.YOUR_SCENE\"\n   name_1: \"YOUR_NAME\"\n   name_2: \"YOUR_NAME\"\n   name_3: \"YOUR_NAME\"\n   name_4: \"YOUR_NAME\"\n   name_5: \"YOUR_NAME\"\n   icon_1: \"mdi:YOUR_ICON\"\n   icon_2: \"mdi:YOUR_ICON\"\n   icon_3: \"mdi:YOUR_ICON\"\n   icon_4: \"mdi:YOUR_ICON\"\n   icon_5: \"mdi:YOUR_ICON\"\n   icon_color_1: \"yellow\"\n   icon_color_2: \"blue\"\n   icon_color_3: \"purple\"\n   icon_color_4: \"green\"\n   icon_color_5: \"red\"\n   bg_color_1: \"yellow\"\n   bg_color_2: \"blue\"\n   bg_color_3: \"purple\"\n   bg_color_4: \"green\"\n   bg_color_5: \"red\"\n</code></pre> <pre><code>#NEW\n- type: \"custom:button-card\"\n template:\n   - card_scenes\n variables:\n   entity_1:\n     entity_id: \"scene.YOUR_SCENE\"\n     icon: \"mdi:YOUR_ICON\"\n     icon_color: \"yellow\"\n     name: \"YOUR_NAME\"\n     bg_color: \"yellow\"\n   entity_2:\n     entity_id: \"scene.YOUR_SCENE\"\n     icon: \"mdi:YOUR_ICON\"\n     icon_color: \"blue\"\n     name: \"YOUR_NAME\"\n     bg_color: \"blue\"\n   entity_3:\n     entity_id: \"scene.YOUR_SCENE\"\n     icon: \"mdi:YOUR_ICON\"\n     icon_color: \"purple\"\n     name: \"YOUR_NAME\"\n     bg_color: \"purple\"\n   entity_4:\n     entity_id: \"scene.YOUR_SCENE\"\n     icon: \"mdi:YOUR_ICON\"\n     icon_color: \"green\"\n     name: \"YOUR_NAME\"\n     bg_color: \"green\"\n   entity_5:\n     entity_id: \"scene.YOUR_SCENE\"\n     icon: \"mdi:YOUR_ICON\"\n     icon_color: \"red\"\n     name: \"YOUR_NAME\"\n     bg_color: \"red\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_scenes/#changelog","title":"Changelog","text":"1.3.0 Option to trigger automation  1.2.0 Implementation of nested variables  1.1.0 Auto dark mode box shadow  1.0.0 Initial release"},{"location":"usage/custom_cards/custom_card_scenes/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template:\n    - card_scenes\n  variables:\n    entity_1:\n      entity_id: \"scene.YOUR_SCENE\"\n      icon: \"mdi:YOUR_ICON\"\n      icon_color: \"yellow\"\n      name: \"YOUR_NAME\"\n      bg_color: \"yellow\"\n    entity_2:\n      entity_id: \"scene.YOUR_SCENE\"\n      icon: \"mdi:YOUR_ICON\"\n      icon_color: \"blue\"\n      name: \"YOUR_NAME\"\n      bg_color: \"blue\"\n    entity_3:\n      entity_id: \"scene.YOUR_SCENE\"\n      icon: \"mdi:YOUR_ICON\"\n      icon_color: \"purple\"\n      name: \"YOUR_NAME\"\n      bg_color: \"purple\"\n    entity_4:\n      entity_id: \"scene.YOUR_SCENE\"\n      icon: \"mdi:YOUR_ICON\"\n      icon_color: \"green\"\n      name: \"YOUR_NAME\"\n      bg_color: \"green\"\n    entity_5:\n      entity_id: \"scene.YOUR_SCENE\"\n      icon: \"mdi:YOUR_ICON\"\n      icon_color: \"red\"\n      name: \"YOUR_NAME\"\n      bg_color: \"red\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_scenes/#requirements","title":"Requirements","text":"<p>n/a</p>"},{"location":"usage/custom_cards/custom_card_scenes/#variables","title":"Variables","text":"Variable Example Required Explanation entity_ scene.evening_light yes Your scene entity name_ Night yes The name to show icon_ mdi:weather-night yes The icon to show color_icon_ yellow, blue, purple, green, red no The color of the icon to show color_bg_ yellow, blue, purple, green, red no The color of the icon background to show"},{"location":"usage/custom_cards/custom_card_scenes/#template-code","title":"Template code","text":"Template Code custom_card_scenes.yaml<pre><code>---\ncard_scenes:\n  show_icon: false\n  show_name: false\n  show_label: false\n  variables:\n    entity_1:\n      entity_id:\n      icon: \"mdi:help-circle-outline\"\n      icon_color: \"gray\"\n      name: \"n/a\"\n      bg_color: \"gray\"\n    entity_2:\n      entity_id:\n      icon: \"mdi:help-circle-outline\"\n      icon_color: \"gray\"\n      name: \"n/a\"\n      bg_color: \"gray\"\n    entity_3:\n      entity_id:\n      icon: \"mdi:help-circle-outline\"\n      icon_color: \"gray\"\n      name: \"n/a\"\n      bg_color: \"gray\"\n    entity_4:\n      entity_id:\n      icon: \"mdi:help-circle-outline\"\n      icon_color: \"gray\"\n      name: \"n/a\"\n      bg_color: \"gray\"\n    entity_5:\n      entity_id:\n      icon: \"mdi:help-circle-outline\"\n      icon_color: \"gray\"\n      name: \"n/a\"\n      bg_color: \"gray\"\n  styles:\n    grid:\n      - grid-template-areas: \"'item1 item2 item3 item4 item5'\"\n      - grid-template-columns: \"1fr 1fr 1fr 1fr 1fr\"\n      - grid-template-rows: \"min-content\"\n      - justify-items: \"center\"\n      - column-gap: \"auto\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        template: \"card_scenes_pill\"\n        entity: \"[[[ return variables.entity_1.entity_id ]]]\"\n        icon: \"[[[ return variables.entity_1.icon ]]]\"\n        name: \"[[[ return variables.entity_1.name ]]]\"\n        variables:\n          color_icon: \"[[[ return variables.entity_1.icon_color ]]]\"\n          color_bg: \"[[[ return variables.entity_1.bg_color ]]]\"\n        tap_action:\n          action: \"perform-action\"\n          perform_action: |\n            [[[\n              let domain = variables.entity_1.entity_id.substr(0, variables.entity_1.entity_id.indexOf(\".\"));\n              if (domain == \"automation\") {\n                return \"automation.trigger\"\n              } else {\n                return \"homeassistant.turn_on\"\n              }\n            ]]]\n          target:\n            entity_id: \"[[[ return variables.entity_1.entity_id ]]]\"\n    item2:\n      card:\n        type: \"custom:button-card\"\n        template: \"card_scenes_pill\"\n        entity: \"[[[ return variables.entity_2.entity_id ]]]\"\n        icon: \"[[[ return variables.entity_2.icon ]]]\"\n        name: \"[[[ return variables.entity_2.name ]]]\"\n        variables:\n          color_icon: \"[[[ return variables.entity_2.icon_color ]]]\"\n          color_bg: \"[[[ return variables.entity_2.bg_color ]]]\"\n        tap_action:\n          action: \"perform-action\"\n          perform_action: |\n            [[[\n              let domain = variables.entity_2.entity_id.substr(0, variables.entity_2.entity_id.indexOf(\".\"));\n              if (domain == \"automation\") {\n                return \"automation.trigger\"\n              } else {\n                return \"homeassistant.turn_on\"\n              }\n            ]]]\n          target:\n            entity_id: \"[[[ return variables.entity_2.entity_id ]]]\"\n    item3:\n      card:\n        type: \"custom:button-card\"\n        template: \"card_scenes_pill\"\n        entity: \"[[[ return variables.entity_3.entity_id ]]]\"\n        icon: \"[[[ return variables.entity_3.icon ]]]\"\n        name: \"[[[ return variables.entity_3.name ]]]\"\n        variables:\n          color_icon: \"[[[ return variables.entity_3.icon_color ]]]\"\n          color_bg: \"[[[ return variables.entity_3.bg_color ]]]\"\n        tap_action:\n          action: \"perform-action\"\n          perform_action: |\n            [[[\n              let domain = variables.entity_3.entity_id.substr(0, variables.entity_3.entity_id.indexOf(\".\"));\n              if (domain == \"automation\") {\n                return \"automation.trigger\"\n              } else {\n                return \"homeassistant.turn_on\"\n              }\n            ]]]\n          target:\n            entity_id: \"[[[ return variables.entity_3.entity_id ]]]\"\n    item4:\n      card:\n        type: \"custom:button-card\"\n        template: \"card_scenes_pill\"\n        entity: \"[[[ return variables.entity_4.entity_id ]]]\"\n        icon: \"[[[ return variables.entity_4.icon ]]]\"\n        name: \"[[[ return variables.entity_4.name ]]]\"\n        variables:\n          color_icon: \"[[[ return variables.entity_4.icon_color ]]]\"\n          color_bg: \"[[[ return variables.entity_4.bg_color ]]]\"\n        tap_action:\n          action: \"perform-action\"\n          perform_action: |\n            [[[\n              let domain = variables.entity_4.entity_id.substr(0, variables.entity_4.entity_id.indexOf(\".\"));\n              if (domain == \"automation\") {\n                return \"automation.trigger\"\n              } else {\n                return \"homeassistant.turn_on\"\n              }\n            ]]]\n          target:\n            entity_id: \"[[[ return variables.entity_4.entity_id ]]]\"\n    item5:\n      card:\n        type: \"custom:button-card\"\n        template: \"card_scenes_pill\"\n        entity: \"[[[ return variables.entity_5.entity_id ]]]\"\n        icon: \"[[[ return variables.entity_5.icon ]]]\"\n        name: \"[[[ return variables.entity_5.name ]]]\"\n        variables:\n          color_icon: \"[[[ return variables.entity_5.icon_color ]]]\"\n          color_bg: \"[[[ return variables.entity_5.bg_color ]]]\"\n        tap_action:\n          action: \"perform-action\"\n          perform_action: |\n            [[[\n              let domain = variables.entity_5.entity_id.substr(0, variables.entity_5.entity_id.indexOf(\".\"));\n              if (domain == \"automation\") {\n                return \"automation.trigger\"\n              } else {\n                return \"homeassistant.turn_on\"\n              }\n            ]]]\n          target:\n            entity_id: \"[[[ return variables.entity_5.entity_id ]]]\"\n\ncard_scenes_pill:\n  show_icon: true\n  show_label: false\n  show_name: true\n  variables:\n    color_icon: \"gray\"\n    color_bg: \"gray\"\n  styles:\n    grid:\n      - grid-template-areas: \"'i' 'n'\"\n      - grid-template-columns: \"min-content\"\n      - grid-template-rows: \"1fr 1fr\"\n      - row-gap: \"12px\"\n      - justify-items: \"center\"\n      - column-gap: \"auto\"\n    card:\n      - box-shadow: \"none\"\n      - padding: \"5px\"\n      - box-shadow: &gt;\n          [[[\n            if (hass.themes.darkMode){\n              return \"0px 2px 4px 0px rgba(0,0,0,0.80)\";\n            } else {\n              return \"var(--box-shadow)\";\n            }\n          ]]]\n      - border-radius: \"50px\"\n      - place-self: \"center\"\n      - width: \"52px\"\n      - height: \"84px\"\n    icon:\n      - color: &gt;\n          [[[\n            var color = [variables.color_icon];\n            if (color == \"gray\"){\n              var color = \"rgba(var(--color-theme),0.20)\";\n            } else if(color == \"yellow\"){\n              var color = \"rgba(var(--color-yellow),1)\";\n            } else if(color == \"blue\"){\n              var color = \"rgba(var(--color-blue),1)\";\n            } else if(color == \"purple\"){\n              var color = \"rgba(var(--color-purple),1)\";\n            } else if(color == \"green\"){\n              var color = \"rgba(var(--color-green),1)\";\n            } else if(color == \"red\"){\n              var color = \"rgba(var(--color-red),1)\";\n            }\n            return color;\n          ]]]\n    img_cell:\n      - background-color: &gt;\n          [[[\n            var color = [variables.color_bg];\n            if (color == \"gray\"){\n              var color = \"rgba(var(--color-theme),0.05)\";\n            } else if(color == \"yellow\"){\n              var color = \"rgba(var(--color-yellow),0.20)\";\n            } else if(color == \"blue\"){\n              var color = \"rgba(var(--color-blue),0.20)\";\n            } else if(color == \"purple\"){\n              var color = \"rgba(var(--color-purple),0.20)\";\n            } else if(color == \"green\"){\n              var color = \"rgba(var(--color-green),0.20)\";\n            } else if(color == \"red\"){\n              var color = \"rgba(var(--color-red),0.20)\";\n            }\n            return color;\n          ]]]\n      - border-radius: \"50%\"\n      - width: \"42px\"\n      - height: \"42px\"\n    name:\n      - font-weight: \"bold\"\n      - font-size: \"9.5px\"\n      - width: \"33px\"\n      - padding-bottom: \"7px\"\n    state:\n      - color: \"rgba(var(--color-theme),0.9)\"\n  color: \"var(--google-grey)\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_schumijo_car/","title":"Car Custom-card","text":""},{"location":"usage/custom_cards/custom_card_schumijo_car/#custom-card-car","title":"Custom-card \"Car\"","text":"<p>This is a <code>custom-card</code> to information about your car.</p> <p></p> <p>NB : This card has only been tested with Audi Connect integration but should work with some others.</p>"},{"location":"usage/custom_cards/custom_card_schumijo_car/#credits","title":"Credits","text":"<p>Author: schumijo - 2021 Version: 1.0.0</p>"},{"location":"usage/custom_cards/custom_card_schumijo_car/#changelog","title":"Changelog","text":"1.0.0 Initial release"},{"location":"usage/custom_cards/custom_card_schumijo_car/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: custom_card_schumijo_car\n  variables:\n    ulm_card_schumijo_car_name: \"Audi Q3\"\n    ulm_card_schumijo_car_tracker: device_tracker.audi_q3_position\n    ulm_card_schumijo_car_lock: lock.audi_q3_door_lock\n    ulm_card_schumijo_car_energy_level: sensor.audi_q3_tank_level\n    ulm_card_schumijo_car_range: sensor.audi_q3_range\n</code></pre>"},{"location":"usage/custom_cards/custom_card_schumijo_car/#variables","title":"Variables","text":"Variable Example Required Explanation ulm_card_schumijo_car_name Audi Q3 yes The name of your car ulm_card_schumijo_car_tracker device_tracker.audi_q3_position yes A device_tracker entity of your car ulm_card_schumijo_car_lock lock.audi_q3_door_lock yes A lock entity of your car ulm_card_schumijo_car_energy_level sensor.audi_q3_tank_level yes A sensor entity that represents energy level of your car (can be fuel or electric) ulm_card_schumijo_car_range sensor.audi_q3_range yes A sensor entity that represents range of your car"},{"location":"usage/custom_cards/custom_card_schumijo_car/#template-code","title":"Template code","text":"Template Code custom_card_schumijo_car.yaml<pre><code>---\nwidget_icon_state:\n  tap_action:\n    action: \"none\"\n  layout: \"icon_state\"\n  show_state: true\n  show_units: false\n  styles:\n    grid:\n      - grid-template-areas: \"'i s' 'n n'\"\n      - grid-template-columns: \"45% 55%\"\n    card:\n      - box-shadow: \"none\"\n      - padding: \"0px\"\n      - background-color: \"rgba(var(--color-theme),0.05)\"\n      - border-radius: \"14px\"\n      - place-self: \"center\"\n      - height: \"42px\"\n    name:\n      - font-weight: \"bold\"\n      - font-size: \"10px\"\n      - filter: \"opacity(40%)\"\n      - margin-bottom: \"2px\"\n    state:\n      - justify-self: \"start\"\n      - margin-left: \"5px\"\n      - font-size: \"18px\"\n      - font-weight: 600\n    icon:\n      - color: \"rgba(var(--color-theme),0.9)\"\n    img_cell:\n      - justify-content: \"right\"\n  size: \"20px\"\n  color: \"var(--google-grey)\"\n\ncar:\n  template:\n    - \"icon_info\"\n  tap_action:\n    action: \"more-info\"\n  show_name: true\n  show_last_changed: true\n  name: \"[[[ return variables.ulm_card_schumijo_car_name ]]]\"\n  entity: \"[[[ return entity.entity_id ]]]\"\n  icon: \"mdi:car\"\n  styles:\n    icon:\n      - color: \"rgba(var(--color-theme),0.9)\"\n      - width: \"20px\"\n      - place-self: \"center\"\n    custom_fields:\n      tracker:\n        - border-radius: \"50%\"\n        - position: \"absolute\"\n        - left: \"30px\"\n        - top: \"-2px\"\n        - height: \"16px\"\n        - width: \"16px\"\n        - border: \"2px solid var(--card-background-color)\"\n        - font-size: \"12px\"\n        - line-height: \"14px\"\n        - background-color: &gt;\n            [[[\n              if (states[variables.ulm_card_schumijo_car_tracker].state != 'home'){\n                return \"rgba(var(--color-green),1)\";\n              } else {\n                return \"rgba(var(--color-blue),1)\";\n              }\n            ]]]\n      lock:\n        - border-radius: \"50%\"\n        - position: \"absolute\"\n        - left: \"30px\"\n        - top: \"24px\"\n        - height: \"16px\"\n        - width: \"16px\"\n        - border: \"2px solid var(--card-background-color)\"\n        - font-size: \"12px\"\n        - line-height: \"14px\"\n        - background-color: &gt;\n            [[[\n              if (states[variables.ulm_card_schumijo_car_lock].state != 'locked'){\n                return \"rgba(var(--color-red),1)\";\n              } else {\n                return \"rgba(var(--color-blue),1)\";\n              }\n            ]]]\n  custom_fields:\n    tracker: &gt;\n      [[[\n        if (states[variables.ulm_card_schumijo_car_tracker].state != 'home'){\n          return '&lt;ha-icon icon=\"mdi:road-variant\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;';\n        } else {\n          return '&lt;ha-icon icon=\"mdi:home-variant\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;';\n        }\n      ]]]\n    lock: &gt;\n      [[[\n        if (states[variables.ulm_card_schumijo_car_lock].state != 'locked'){\n          return '&lt;ha-icon icon=\"mdi:lock-open\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;';\n        } else {\n          return '&lt;ha-icon icon=\"mdi:lock\" style=\"width: 10px; height: 10px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;';\n        }\n      ]]]\n\nulm_custom_card_schumijo_ca_popup:\n  tap_action:\n    action: \"fire-dom-event\"\n    browser_mod:\n      service: \"browser_mod.popup\"\n      data:\n        size: &gt;\n          [[[\n            const mediaQuery = window.matchMedia('(max-width: 800px)')\n            if (mediaQuery.matches) {\n              return 'fullscreen'\n            }\n          ]]]\n        title: \"Map\"\n        style:\n          $: &gt;\n            [[[\n              if (hass.themes.theme.includes(\"desktop\")){\n                var dialog = `\n                  .mdc-dialog__surface{\n                    border-radius: var(--border-radius) !important;\n                  }\n                `;\n              } else{\n                var dialog = \"\";\n              }\n              return `\n                *{\n                  --secondary-background-color: none !important;\n                }\n                ${dialog}\n              `;\n            ]]]\n          hui-vertical-stack-card:\n            $: &gt;\n              button-card {\n                align-self: center;\n                padding: 0.2em 0 2.3em 0;\n              }\n              hui-entities-card{\n                padding: 0.8em 1.4em;\n              }\n            $hui-entities-card$: &gt;\n              ha-card{\n                box-shadow: none;\n              }\n            $hui-history-graph-card$: &gt;\n              .content {\n                padding: 0 2.4em !important;\n              }\n              ha-card{\n                box-shadow: none;\n              }\n            $hui-glance-card$: &gt;\n              ha-card{\n                box-shadow: none;\n              }\n            $hui-map-card:\n              $: &gt;\n                ha-icon-button {\n                  color: rgba(var(--color-blue),1);\n                }\n              $ha-map:\n                $: &gt;\n                  .leaflet-control-attribution {\n                    display: none;\n                  }\n                  .leaflet-touch .leaflet-control-layers, .leaflet-touch .leaflet-bar {\n                    border: 2px solid rgba(var(--color-blue),0.4) !important;\n                  }\n                  .leaflet-bar a {\n                    background-color: rgba(var(--color-blue),0.2) !important;\n                    color: rgba(var(--color-blue),1) !important;\n                  }\n                  .leaflet-bar a:first-child {\n                    border-bottom: 2px solid rgba(var(--color-blue),0.4) !important;\n                  }\n                  .leaflet-pane.leaflet-tile-pane {\n                    filter: contrast(95%);\n                  }\n        content:\n          type: \"map\"\n          aspect_ratio: \"12:10\"\n          default_zoom: 16\n          entities: \"[[[ return [variables.ulm_card_schumijo_car_tracker]; ]]]\"\n\ncustom_card_schumijo_car:\n  template:\n    - \"ulm_custom_card_schumijo_car_language_variables\"\n  variables:\n    ulm_card_schumijo_car_name: \"n/a\"\n  show_icon: false\n  show_name: false\n  show_label: false\n  styles:\n    grid:\n      - grid-template-areas: \"'item1' 'item2'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content min-content\"\n      - row-gap: \"12px\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        template:\n          - \"car\"\n          - \"ulm_custom_card_schumijo_ca_popup\"\n        entity: \"[[[ return variables.ulm_card_schumijo_car_tracker ]]]\"\n        variables:\n          ulm_card_schumijo_car_tracker: \"[[[ return variables.ulm_card_schumijo_car_tracker ]]]\"\n          ulm_card_schumijo_car_name: \"[[[ return variables.ulm_card_schumijo_car_name ]]]\"\n          ulm_card_schumijo_car_lock: \"[[[ return variables.ulm_card_schumijo_car_lock ]]]\"\n    item2:\n      card:\n        template: \"list_2_items\"\n        type: \"custom:button-card\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon_state\"\n              entity: \"[[[ return variables.ulm_card_schumijo_car_energy_level ]]]\"\n              state_display: &gt;\n                [[[\n                  return parseFloat(states[variables.ulm_card_schumijo_car_energy_level].state).toFixed(0);\n                ]]]\n              name:\n                \"[[[ return states[variables.ulm_card_schumijo_car_energy_level].attributes.unit_of_measurement + ' ' + variables.ulm_custom_card_schumijo_car_energy_level\\\n                \\ ]]]\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon_state\"\n              entity: \"[[[ return variables.ulm_card_schumijo_car_range ]]]\"\n              state_display: &gt;\n                [[[\n                  return parseFloat(states[variables.ulm_card_schumijo_car_range].state).toFixed(0);\n                ]]]\n              name:\n                \"[[[ return states[variables.ulm_card_schumijo_car_range].attributes.unit_of_measurement + ' ' + variables.ulm_custom_card_schumijo_car_range\\\n                \\ ]]]\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_schumijo_flower/","title":"Flower Custom-card","text":""},{"location":"usage/custom_cards/custom_card_schumijo_flower/#custom-card-flower","title":"Custom-card \"Flower\"","text":"<p>This is a <code>custom-card</code> to display a plant entity. Shows state of the plant and attributes.</p> <p></p>"},{"location":"usage/custom_cards/custom_card_schumijo_flower/#credits","title":"Credits","text":"<ul> <li>Author: schumijo - 2021</li> <li>Update 2.0.0 : Ashino - 2024</li> <li>Version: 2.0.0</li> </ul>"},{"location":"usage/custom_cards/custom_card_schumijo_flower/#changelog","title":"Changelog","text":"1.0.0 Initial release  1.1.0 Fix language files for beta5 Updated README  2.0.0 Add support to lovelace-flower-card from Olen (advanced forked version) Updated README"},{"location":"usage/custom_cards/custom_card_schumijo_flower/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: card_flower\n  variables:\n    ulm_card_flower_entity: plant.bonsai_ficus\n    ulm_card_flower_name: Bonsai Ficus\n    ulm_card_flower_species: \"ficus retusa\"\n    ulm_card_flower_show_bars:\n        - temperature\n        - humidity\n        - moisture\n</code></pre>"},{"location":"usage/custom_cards/custom_card_schumijo_flower/#variables","title":"Variables","text":"Variable Example Required Explanation ulm_card_flower_entity plant.bonsai_ficus yes The entity of your plant ulm_card_flower_name Bonsai Ficus no The name of your plant ulm_card_flower_species \"ficus retusa\" yes The species of your plant ulm_card_flower_show_bars  - temperature  - moisture  - humidity  no The bar you want to display. Any of : <li>illuminance</li> <li>humidity</li> <li>moisture</li> <li>conductivity</li> <li>temperature</li> <li>dli</li>"},{"location":"usage/custom_cards/custom_card_schumijo_flower/#requirements","title":"Requirements","text":"<p>Need lovelace-flower-card</p>"},{"location":"usage/custom_cards/custom_card_schumijo_flower/#template-code","title":"Template code","text":"Template Code custom_card_schumijo_flower.yaml<pre><code>---\nlist_1_item:\n  styles:\n    card:\n      - box-shadow: \"none\"\n      - padding: \"0px\"\n    grid:\n      - grid-template-areas: \"'item1'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content\"\n      - column-gap: \"7px\"\n\nflower:\n  template:\n    - \"ulm_custom_card_schumijo_flower_language_variables\"\n  tap_action:\n    action: \"more-info\"\n  icon: |\n    [[[\n        var icon = 'mdi:flower';\n        if (entity.state == 'problem'){\n          var icon = 'mdi:alert-circle';\n        }\n        return icon ;\n    ]]]\n  label: &gt;-\n    [[[\n        if (entity.state == 'problem'){\n          return variables.ulm_custom_card_schumijo_flower_problem;\n        }else{\n          return variables.ulm_custom_card_schumijo_flower_correct;\n        }\n    ]]]\n  state:\n    - operator: \"template\"\n      value: &gt;\n        [[[\n          return entity.state != 'on';\n        ]]]\n      styles:\n        icon:\n          - color: \"rgba(var(--color-green),1)\"\n        img_cell:\n          - background-color: \"rgba(var(--color-green),0.2)\"\n\ncard_flower:\n  variables:\n    ulm_card_flower_name: \"No name set\"\n  styles:\n    card:\n      - border-radius: \"20px\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n    grid:\n      - grid-template-areas: \"'item1' 'item2'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content  min-content\"\n      - row-gap: \"6px\"\n  custom_fields:\n    item1:\n      card:\n        entity: \"[[[ return variables.ulm_card_flower_entity ]]]\"\n        name: \"[[[ return variables.ulm_card_flower_name ]]]\"\n        tap_action:\n          action: \"more-info\"\n        template:\n          - \"icon_info\"\n          - \"flower\"\n        type: \"custom:button-card\"\n    item2:\n      card:\n        template: \"list_1_item\"\n        type: \"custom:button-card\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:flower-card\"\n              entity: \"[[[ return variables.ulm_card_flower_entity ]]]\"\n              species: \"[[[ return variables.ulm_card_flower_species ]]]\"\n              show_bars: \"[[[ return variables.ulm_card_flower_show_bars ]]]\"\n              card_mod:\n                style: |\n                  ha-card{\n                    margin-top: 0px !important;\n                    box-shadow: none !important;\n                    --mdc-icon-size: 16px !important;\n                  }\n                  .header{\n                    display: none !important;\n                  }\n                  .divider{\n                    display: none !important;\n                  }\n                  .value{\n                    display: none !important;\n                  }\n                  .attributes{\n                    padding: 0px !important;\n                  }\n                  .attribute ha-icon {\n                      margin-right: 0px !important;\n                  }\n</code></pre>"},{"location":"usage/custom_cards/custom_card_sisimomo_printer/","title":"Printer Card Custom-card","text":""},{"location":"usage/custom_cards/custom_card_sisimomo_printer/#custom-card-printer","title":"Custom-card \"Printer\"","text":"<p>This is the <code>custom_card_sisimomo_printer</code>, used to show the state of a printer including, if wanted, ink sensors. The card has support any number of ink sensors under the state of the printer. These can be configured using custom colors and labels.</p>"},{"location":"usage/custom_cards/custom_card_sisimomo_printer/#credits","title":"Credits","text":"<p>Author: Sisimomo (based on hiddevanbrussel pictures) Version: 0.1.0</p> <p>Contributors:</p> <ul> <li>ByteFloater Version 0.2.0</li> </ul>"},{"location":"usage/custom_cards/custom_card_sisimomo_printer/#changelog","title":"Changelog","text":"0.1.0 - Initial Release  - Initial release   0.2.0 - Added additional cases  - Added support for other cartridge types (tricolor) - Added further error checking for previously uncaught states - Added support for the IPP 'unavailable' state - Added CSS for better theming of error screens - Added card string translation files - Changed `text-transform` of label to capitalize - Changed `ulm_unavailable` to `ulm_translation_unavailable` - Removed some unnecessary inline stylings - Fixed the handling of unavailable and idle state styling"},{"location":"usage/custom_cards/custom_card_sisimomo_printer/#card-options","title":"Card options","text":"Options Required Description entity The entity_id for the large card"},{"location":"usage/custom_cards/custom_card_sisimomo_printer/#variables","title":"Variables","text":"Variable Required Description printer_name The chosen display name of the printer.  If not provided, will use the friendly name of the provided entity. cartridges A list of  <code>Cartridge entity</code> objects. (See below)"},{"location":"usage/custom_cards/custom_card_sisimomo_printer/#cartridge-entity","title":"Cartridge entity","text":"Variable Required Description Requirement label The label for the ink sensor. For better aesthetic, keep this string short eg: \"BK\", \"Y\", \"M\", \"C\", \"PB\" entity_id The entity_id of the ink sensor Must be a value between 0-100 (percentage). type The type of cartridge associated with the ink sensor Must be either 'unicolor' or 'tricolor'.  If not provided, 'unicolor' is assumed for backwards compatibility. color The color of the ink bar For unicolor cartridges, must be a single CSS Legal Color Value. For tricolor cartridges, 3 colours are required. (See usage for more info)"},{"location":"usage/custom_cards/custom_card_sisimomo_printer/#usage","title":"Usage","text":""},{"location":"usage/custom_cards/custom_card_sisimomo_printer/#unicolor-printers","title":"Unicolor Printers","text":"<pre><code>- type: \"custom:button-card\"\n  template: \"custom_card_sisimomo_printer\"\n  entity: sensor.hp_printer_status\n  variables:\n    printer_name: HP LaserJet MFP M28w\n    cartridges:\n      - label: \"BK\"\n        entity_id: sensor.printer_black_ink\n        type: unicolor\n        color: \"black\"\n      - label: \"B\"\n        entity_id: sensor.printer_photo_black_ink\n        type: unicolor\n        color: \"black\"\n      - label: \"Y\"\n        entity_id: sensor.printer_yellow_ink\n        type: unicolor\n        color: \"rgba(var(--color-yellow), 1)\"\n      - label: \"M\"\n        entity_id: sensor.printer_magenta_ink\n        type: unicolor\n        color: \"#F84B7A\"\n      - label: \"C\"\n        entity_id: sensor.printer_cyan_ink\n        type: unicolor\n        color: \"#427EDE\"\n      - label: \"PB\"\n        entity_id: sensor.printer_photo_blue_ink\n        type: unicolor\n        color: \"#9272BE\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_sisimomo_printer/#tricolor-printers","title":"Tricolor Printers","text":"<pre><code>- type: \"custom:button-card\"\n  template: custom_card_sisimomo_printer\n  entity: sensor.canon_mg3600_series\n  variables:\n    ulm_card_printer_name: Canon MG3650\n    cartridges:\n      - label: \"Col\"\n        entity_id: sensor.canon_mg3600_series_black\n        type: tricolor\n        color:\n          - cyan\n          - magenta\n          - yellow\n      - label: \"BK\"\n        entity_id: sensor.canon_mg3600_series_black\n        type: unicolor\n        color: black\n</code></pre>"},{"location":"usage/custom_cards/custom_card_sisimomo_printer/#template-code","title":"Template code","text":"Template Code custom_card_sisimomo_printer.yaml<pre><code>---\ncustom_card_sisimomo_printer:\n  template:\n    - \"ulm_translation_engine\"\n    - \"ulm_language_variables\"\n  variables:\n    printer_name: \"[[[ entity.attributes.friendly_name; ]]]\"\n    ulm_idle: \"idle\"\n  show_icon: false\n  show_label: false\n  show_name: false\n  triggers_update: \"all\"\n  tap_action:\n    action: \"\"\n  styles:\n    grid:\n      - grid-template-areas: \"'printer_state' 'cartridges'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n      - \"--mdc-ripple-press-opacity\": 0\n      - cursor: \"default\"\n  custom_fields:\n    printer_state:\n      card:\n        type: \"custom:button-card\"\n        template: |\n          [[[\n            return (\n              entity.state.toLowerCase() != variables.ulm_idle.toLowerCase()\n              &amp;&amp; entity.state.toLowerCase() != variables.ulm_translation_unavailable.toLowerCase()\n              ? [ \"icon_info\", \"blue_no_state\" ] : [ \"icon_info\" ]\n            );\n          ]]]\n        tap_action:\n          action: \"more-info\"\n        label: \"[[[ return entity.state; ]]]\"\n        name: \"[[[ return variables.printer_name; ]]]\"\n        entity: \"[[[ return entity.entity_id; ]]]\"\n        styles:\n          card:\n            - padding: \"0\"\n            - \"--mdc-ripple-press-opacity\": 0.12\n            - cursor: \"pointer\"\n          label:\n            - text-transform: \"capitalize\"\n    cartridges: |\n      [[[\n        // Source: https://stackoverflow.com/a/56266358\n        const isColor = (strColor) =&gt; {\n          const s = new Option().style;\n          s.color = strColor;\n          return s.color !== '';\n        }\n\n        let toner_info_available = true;\n        if (variables.cartridges !== undefined ? Array.isArray(variables.cartridges) &amp;&amp; variables.cartridges.length &gt; 0 : false) {\n          let errorArray = [];\n          variables.cartridges.forEach(cartridge =&gt; {\n            let index = variables.cartridges.indexOf(cartridge);\n            let valid_cartridge_types = ['unicolor', 'tricolor']\n\n            // Confirm that the label is provided.\n            if (cartridge.label === undefined) {\n              errorArray.push(`cartridges.[${index}].label: You must provide a value.`);\n            }\n\n            // Confirm that a valid cartridge type is provided, if not default to 'unicolor'\n            // for backwards compatibility with older configuration files\n            if (cartridge.type === undefined) {\n                cartridge.type = 'unicolor'\n            } else if (!valid_cartridge_types.includes(cartridge.type)) {\n                errorArray.push(`cartridges.[${index}].type: You must provide a valid cartridge type`);\n            }\n\n            // Confirm that the color is provided and is valid color css.\n            if (cartridge.color !== undefined) {\n              if (cartridge.type === 'unicolor') {\n                if (typeof cartridge.color === 'string' || cartridge.color instanceof String ? !isColor(cartridge.color) : false) {\n                  errorArray.push(`cartridges.[${index}].color: You must provide a single valid CSS color value.`);\n                }\n              } else if (Array.isArray(cartridge.color) &amp;&amp; cartridge.color.length === 3 ? cartridge.type === 'tricolor' : false) {\n                cartridge.color.forEach(color =&gt; {\n                  let col_index = cartridge.color.indexOf(color);\n                  if (!isColor(String(color))) {\n                    errorArray.push(`cartridges.[${index}].color.[${col_index}]: You must provide a single valid CSS color value.`);\n                  }\n                });\n              } else {\n                errorArray.push(`cartridges.[${index}].color: Invalid combination of colour and type.`);\n              }\n            } else {\n              errorArray.push(`cartridges.[${index}].color: You must provide a value.`);\n            }\n\n            // Confirm that the entity_id is provided, is a valid entity_id, a integer and a value between 0 and 100 inclusively.\n            if (cartridge.entity_id === undefined) {\n              errorArray.push(`cartridges.[${index}].entity_id: You must provide a value.`);\n            } else if (states[cartridge.entity_id] === undefined) {\n              errorArray.push(`cartridges.[${index}].entity_id: You must provide a existing entity_id.`);\n            } else if (String(states[cartridge.entity_id].state).toLowerCase() === String(variables.ulm_translation_unavailable).toLowerCase()) {\n              toner_info_available = false;\n            } else if (isNaN(states[cartridge.entity_id].state) || typeof states[cartridge.entity_id].state === \"boolean\") {\n              errorArray.push(`cartridges.[${index}].entity_id: You must provide a entity representing an integer.`);\n            } else if (states[cartridge.entity_id].state &lt; 0 || states[cartridge.entity_id].state &gt; 100) {\n              errorArray.push(`cartridges.[${index}].entity_id: You must provide a entity representing an integer between 0 and 100 inclusively.`);\n            }\n          });\n          if (errorArray.length &gt; 0) {\n            return `&lt;div class=\"error-container\"&gt;\n              &lt;b&gt;Configuration Error:&lt;/b&gt;\n              &lt;ul&gt;\n                ${errorArray.map(error =&gt; `&lt;li&gt;${error}&lt;/li&gt;`).join(\"\")}\n              &lt;/ul&gt;\n            &lt;/div&gt;`;\n          }\n\n          if (toner_info_available) {\n            return '&lt;div class=\"wrapper\"&gt;' +\n              variables.cartridges.map(cartridge =&gt; {\n                if (cartridge.type === \"unicolor\") {\n                  cartridge.bar_style = `\n                    background-color: ${cartridge.color};\n                    width: ${states[cartridge.entity_id].state}%;\n                  `;\n                } else if (cartridge.type === \"tricolor\") {\n                  cartridge.bar_style = `\n                    background: linear-gradient(\n                      180deg,\n                      ${cartridge.color[0]},\n                      ${cartridge.color[0]} 33%,\n                      ${cartridge.color[1]} 33%,\n                      ${cartridge.color[1]} 66%,\n                      ${cartridge.color[2]} 66%,\n                      ${cartridge.color[2]}\n                    );\n                    width: ${states[cartridge.entity_id].state}%;\n                  `;\n                }\n\n                // Removes unnecessary whitespace from inline CSS\n                cartridge.bar_style = cartridge.bar_style.replace(/\\s{2,}/g, '')\n                return `\n                  &lt;div class=\"label\"&gt;${cartridge.label}&lt;/div&gt;\n                  &lt;div class=\"container-bar\"&gt;\n                    &lt;div class=\"bar\" style=\"${cartridge.bar_style}\"&gt;&lt;/div&gt;\n                  &lt;/div&gt;\n                  &lt;div class=\"state\"&gt;${states[cartridge.entity_id].state}%&lt;/div&gt;\n                `;\n              }).join(\"\") +\n            '&lt;/div&gt;';\n          } else {\n            return `\n              &lt;div class=\"info-unavailable\"&gt;\n                Toner Information Unavailable\n              &lt;/div&gt;\n            `;\n          }\n        } else {\n\n        }\n      ]]]\n  card_mod:\n    style: |\n      /* Cartridge CSS */\n      div#cartridges .wrapper {\n        display: grid;\n        grid-template-columns: auto 1fr auto;\n        grid-gap: 1rem;\n        padding: 12px 8px 8px 8px;\n      }\n      div#cartridges .wrapper &gt; *:nth-child(3n-2), .wrapper &gt; *:nth-child(3n) {\n        place-self: center start;\n      }\n      div#cartridges .wrapper &gt; .label {\n        filter: opacity(70%);\n        font-size: medium;\n      }\n      div#cartridges .wrapper &gt; .container-bar {\n        position: relative;\n        border-radius: 4px;\n        border: 0.01rem solid rgba(var(--color-theme),.35);\n      }\n      div#cartridges .wrapper &gt; .container-bar .bar {\n        height: 20px;\n        border-radius: 4px;\n      }\n      div#cartridges .wrapper &gt; .state {\n        filter: opacity(40%);\n        font-size: medium;\n      }\n\n      /* Error CSS */\n      div#cartridges .error-container {\n        text-align: left;\n        font-size: 75%;\n        font-family: var(--code-font-family, monospace);\n        padding: 10px;\n        background-color: rgba(219, 68, 55, 0.75);\n        margin-top:10px;\n        border-radius:8px;\n      }\n      div#cartridges .error-container ul {\n        list-style: none;\n        padding: 0;\n        margin: 0;\n        overflow-wrap: break-word;\n        word-wrap: break-word;\n        white-space: normal !important;\n      }\n      div#cartridges .error-container ul li {\n        margin-top: 0.5em;\n      }\n      div#cartridges .info-unavailable {\n        padding: 1em;\n        white-space: normal;\n        margin-top:10px;\n        border-radius:8px;\n        opacity: 60%;\n      }\n</code></pre>"},{"location":"usage/custom_cards/custom_card_tpx01_aircondition/","title":"AirCondition Custom-card","text":""},{"location":"usage/custom_cards/custom_card_tpx01_aircondition/#custom-card-aircondition","title":"Custom-card \"AirCondition\"","text":"<p>The <code>custom_card_tpx01_aircondition</code> shows data from your air condition and gives you the possibility to control it.</p>"},{"location":"usage/custom_cards/custom_card_tpx01_aircondition/#credits","title":"Credits","text":"<p>Author: tpx01 - 2021 Version: 1.0.0</p>"},{"location":"usage/custom_cards/custom_card_tpx01_aircondition/#changelog","title":"Changelog","text":"1.0.0 Initial release"},{"location":"usage/custom_cards/custom_card_tpx01_aircondition/#usage","title":"Usage","text":"<pre><code>- type: custom:button-card\n  template: custom_card_tpx01_aircondition_with_buttons\n  variables:\n    entity: climate.livingroom\n    name: A/C Livingroom\n</code></pre>"},{"location":"usage/custom_cards/custom_card_tpx01_aircondition/#requirements","title":"Requirements","text":"<p>n/a</p>"},{"location":"usage/custom_cards/custom_card_tpx01_aircondition/#variables","title":"Variables","text":"Variable Example Required Explanation entity climate.livingroom yes Your climate entity name A/C Livingroom yes The name to show"},{"location":"usage/custom_cards/custom_card_tpx01_aircondition/#template-code","title":"Template code","text":"Template Code custom_card_tpx01_aircondition.yaml<pre><code>---\ncustom_card_tpx01_aircondition:\n  template:\n    - \"ulm_translation_engine\"\n    - \"custom_card_tpx01_aircondition_language_variables\"\n  tap_action:\n    action: \"more-info\"\n  icon: |\n    [[[\n        if (entity.state =='dry') {\n          return 'mdi:water';\n        } else if (entity.state =='heat') {\n          return 'mdi:radiator';\n        } else if (entity.state =='cool') {\n          return 'mdi:snowflake';\n        } else if (entity.state =='fan_only') {\n          return 'mdi:fan';\n        }\n        return 'mdi:air-conditioner';\n    ]]]\n  label: \"[[[ return variables.ulm_translation_state ]]]\"\n  state:\n    - operator: \"template\"\n      value: &gt;\n        [[[\n          return entity.state != 'off';\n        ]]]\n      styles:\n        icon:\n          - color: \"rgba(var(--color-blue),1)\"\n        img_cell:\n          - background-color: \"rgba(var(--color-blue),0.2)\"\n\ncustom_card_tpx01_aircondition_with_buttons:\n  variables:\n    name:\n  styles:\n    grid:\n      - grid-template-areas: \"item1 item2\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content min-content\"\n      - row-gap: \"12px\"\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n      - padding: \"12px\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        template: \"list_items_favorite\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template:\n                - \"icon_info\"\n                - \"custom_card_tpx01_aircondition\"\n              tap_action:\n                action: \"more-info\"\n              name: &gt;\n                [[[\n                    if (variables.name == null) {\n                      return variables.entity;\n                    }\n                    return variables.name;\n                ]]]\n              entity: \"[[[ return variables.entity ]]]\"\n          item2:\n            card:\n              type: \"horizontal-stack\"\n              cards:\n                - type: \"conditional\"\n                  conditions:\n                    - entity: \"[[[ return variables.entity ]]]\"\n                      state: \"off\"\n                  card:\n                    type: \"custom:button-card\"\n                    template: \"widget_icon\"\n                    tap_action:\n                      action: \"perform-action\"\n                      perform_action: \"climate.set_hvac_mode\"\n                      target:\n                        entity_id: \"[[[ return variables.entity ]]]\"\n                      data:\n                        hvac_mode: \"cool\"\n                    icon: \"mdi:power\"\n                - type: \"conditional\"\n                  conditions:\n                    - entity: \"[[[ return variables.entity ]]]\"\n                      state_not: \"off\"\n                  card:\n                    type: \"custom:button-card\"\n                    template: \"widget_icon\"\n                    tap_action:\n                      action: \"perform-action\"\n                      perform_action: \"climate.set_hvac_mode\"\n                      target:\n                        entity_id: \"[[[ return variables.entity ]]]\"\n                      data:\n                        hvac_mode: \"off\"\n                    icon: \"mdi:power-off\"\n    item2:\n      card:\n        type: \"custom:button-card\"\n        template: \"list_items\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"script.decrease_climate_temperature\"\n                target:\n                  entity_id: \"[[[ return variables.entity ]]]\"\n              icon: \"mdi:minus\"\n          item2:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_temperature\"\n              tap_action:\n                action: \"none\"\n              entity: \"[[[ return variables.entity ]]]\"\n              icon: \"mdi:temperature-celsius\"\n          item3:\n            card:\n              type: \"custom:button-card\"\n              template: \"widget_icon\"\n              tap_action:\n                action: \"perform-action\"\n                perform_action: \"script.increment_climate_temperature\"\n                target:\n                  entity_id: \"[[[ return variables.entity ]]]\"\n              icon: \"mdi:plus\"\n\nlist_items_favorite:\n  styles:\n    grid:\n      - grid-template-areas: \"item1 item1 item2\"\n      - grid-template-columns: \"1fr 1fr 1fr\"\n      - grid-template-rows: \"min-content\"\n      - column-gap: \"7px\"\n    card:\n      - box-shadow: \"none\"\n      - padding: \"0px\"\n\nwidget_temperature:\n  tap_action:\n    action: \"toggle\"\n  color: \"var(--google-grey-500)\"\n  show_icon: false\n  show_name: false\n  show_label: true\n  size: \"20px\"\n  label: |-\n    [[[\n        var temperature = entity.attributes.temperature;\n        if (temperature == null) {\n          var temperature = '-';\n        }\n        return temperature + '\u00b0C'\n    ]]]\n  styles:\n    label:\n      - color: \"rgb(var(--color-theme),0.9)\"\n    grid:\n      - grid-template-areas: \"l\"\n    card:\n      - box-shadow: \"none\"\n      - padding: \"0px\"\n      - background-color: \"rgba(var(--couleur-theme),0)\"\n      - border-radius: \"14px\"\n      - place-self: \"center\"\n      - height: \"42px\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_vncntdev_device_tracer/","title":"Device Tracker Custom-card","text":""},{"location":"usage/custom_cards/custom_card_vncntdev_device_tracer/#custom-card-device-tracker-online-or-offline","title":"Custom-card \"Device Tracker (Online or Offline ?)\"","text":"<p>This card indicated whether a given device is online or offline using the Home Assistant device_tracker or the WoL-integration.</p> <p>  Turn on you device with WoL:  </p>"},{"location":"usage/custom_cards/custom_card_vncntdev_device_tracer/#credits","title":"Credits","text":"<p>Author: vncnt.dev - 2021 Version: 1.0.0</p>"},{"location":"usage/custom_cards/custom_card_vncntdev_device_tracer/#changelog","title":"Changelog","text":"1.1.1 Fix for UI Minimalist v1.0.1.  1.1.0 Support WoL  1.0.0 Initial release"},{"location":"usage/custom_cards/custom_card_vncntdev_device_tracer/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: \"custom_card_vncntdev_device_tracker\"\n  entity: switch.pc\n  variables:\n    custom_card_vncntdev_device_tracker_icon: mdi:desktop-mac\n    custom_card_vncntdev_device_tracker_name: \"PC\"\n    custom_card_vncntdev_device_tracker_status_as_name: true\n\n- type: \"custom:button-card\"\n  template: \"custom_card_vncntdev_device_tracker\"\n  entity: device_tracker.raspberry4\n  variables:\n    custom_card_vncntdev_device_tracker_name: \"Raspberry Pi 4\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_vncntdev_device_tracer/#requirements","title":"Requirements","text":"<p>Setup the device tracker integration</p> <p>if you want to use WoL: Setup WoL integration</p>"},{"location":"usage/custom_cards/custom_card_vncntdev_device_tracer/#variables","title":"Variables","text":"Variable Example Required Explanation entity device_tracker.pc true Icon of the Card custom_card_vncntdev_device_tracker_name \"PC\" false Custom name of devicedefault: friendly name of device tracer custom_card_vncntdev_device_tracker_status_as_name true true swap label and name?default: false default: \"mdi:server\" custom_card_vncntdev_device_tracker_icon mdi:desktop-mac false Icon of the Card default: \"mdi:server\" custom_card_vncntdev_device_tracker_color_online \"var(--google-green)\" false Color of icon if device is online default: \"var(--google-green)\" custom_card_vncntdev_device_tracker_color_offline \"var(--google-red)\" false Color of icon if offline default: \"var(--google-red)\""},{"location":"usage/custom_cards/custom_card_vncntdev_device_tracer/#template-code","title":"Template code","text":"Template Code vncntdev_card_device_tracer.yaml<pre><code>---\ncustom_card_vncntdev_device_tracker:\n  template: \"card_generic\"\n  variables:\n    custom_card_vncntdev_device_tracker_name:\n    custom_card_vncntdev_device_tracker_status_as_name: false\n    custom_card_vncntdev_device_tracker_icon: \"mdi:server\"\n    custom_card_vncntdev_device_tracker_color_online: \"var(--google-green)\"\n    custom_card_vncntdev_device_tracker_color_offline: \"var(--google-red)\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        template:\n          - \"icon_more_info\"\n        custom_fields:\n          item1:\n            card:\n              type: \"custom:button-card\"\n              icon: \"[[[return variables.custom_card_vncntdev_device_tracker_icon]]]\"\n              styles:\n                icon:\n                  - color: &gt;\n                      [[[\n                          return (entity.state == \"not_home\" || entity.state == \"off\") ?\n                          variables.custom_card_vncntdev_device_tracker_color_offline:\n                          variables.custom_card_vncntdev_device_tracker_color_online;\n                      ]]]\n          item2:\n            card:\n              type: \"custom:button-card\"\n              name: |\n                [[[\n                    if (!variables.custom_card_vncntdev_device_tracker_status_as_name) {\n                      return variables.custom_card_vncntdev_device_tracker_name !== null?\n                      variables.custom_card_vncntdev_device_tracker_name:\n                      entity.attributes.friendly_name;\n                    } else {\n                      return (entity.state == \"not_home\" || entity.state == \"off\") ? \"Offline\" : \"Online\";\n                    }\n                ]]]\n              label: |\n                [[[\n                    if (variables.custom_card_vncntdev_device_tracker_status_as_name) {\n                      return variables.custom_card_vncntdev_device_tracker_name !== null?\n                      variables.custom_card_vncntdev_device_tracker_name:\n                      entity.attributes.friendly_name;\n                    } else {\n                      return (entity.state == \"not_home\" || entity.state == \"off\") ? \"Offline\" : \"Online\";\n                    }\n                ]]]\n</code></pre>"},{"location":"usage/custom_cards/custom_card_vncntdev_device_tracer/#note","title":"Note","text":""},{"location":"usage/custom_cards/custom_card_water_heater/","title":"Water Heater Custom-card","text":""},{"location":"usage/custom_cards/custom_card_water_heater/#custom-card-water-heater","title":"Custom-card \"Water heater\"","text":"<p>NOTE This card is under review and is not ready to use!</p>"},{"location":"usage/custom_cards/custom_card_water_heater/#credits","title":"Credits","text":"<p>Author: tben - 2021 Version: 1.0.0</p>"},{"location":"usage/custom_cards/custom_card_water_heater/#changelog","title":"Changelog","text":"1.0.0 Initial release"},{"location":"usage/custom_cards/custom_card_water_heater/#usage","title":"Usage","text":""},{"location":"usage/custom_cards/custom_card_water_heater/#requirements","title":"Requirements","text":"<p>This card needs the following to function correctly:</p> Component / card required Note"},{"location":"usage/custom_cards/custom_card_water_heater/#variables","title":"Variables","text":"Variable Example Required Explanation"},{"location":"usage/custom_cards/custom_card_water_heater/#template-code","title":"Template code","text":"Template Code custom_card_water_heater.yaml<pre><code>---\ncard_water_heater:\n  icon: \"mdi:waves\"\n  tap_action:\n    action: \"more-info\"\n  hold_action:\n    action: \"more-info\"\n  label: &gt;-\n    [[[\n        if (entity.state == 'off'){\n          return 'Arr\u00eat forc\u00e9';\n        }else{\n          if (states[\"sensor.shelly_prise_salon_conso\"].state &gt; 0){\n            var etat = \"Chauffe \u2022 \" + states[\"sensor.shelly_prise_salon_conso\"].state + \"W\";\n          }else{\n            var etat = \"Inactif\";\n          }\n          return etat ;\n        }\n    ]]]\n  state:\n    - operator: \"template\"\n      value: &gt;\n        [[[\n          return (states['sensor.shelly_prise_salon_conso'].state &gt; 0)\n        ]]]\n      styles:\n        icon:\n          - color: \"rgba(var(--color-red),1)\"\n        img_cell:\n          - background-color: \"rgba(var(--color-red),0.2)\"\n        card:\n          - background-color: \"rgba(var(--color-background-red),var(--opacity-bg))\"\n        name:\n          - color: \"rgba(var(--color-red-text),1)\"\n        label:\n          - color: \"rgba(var(--color-red-text),1)\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_water_heater/#homeassistant","title":"HomeAssistant","text":"<p>...</p>"},{"location":"usage/custom_cards/custom_card_water_heater/#example","title":"Example","text":"<p>...</p>"},{"location":"usage/custom_cards/custom_card_water_heater/#note","title":"Note","text":"<p>...</p>"},{"location":"usage/custom_cards/custom_card_wilbiev_subtitle/","title":"Subtitle Custom-card","text":""},{"location":"usage/custom_cards/custom_card_wilbiev_subtitle/#custom-card-subtitle","title":"Custom-card \"Subtitle\"","text":"<p>This is a <code>custom-card</code> to display a subtitle header.</p> <p></p>"},{"location":"usage/custom_cards/custom_card_wilbiev_subtitle/#credits","title":"Credits","text":"<p>Author: wilbiev - 2023 Version: 1.0.0</p>"},{"location":"usage/custom_cards/custom_card_wilbiev_subtitle/#changelog","title":"Changelog","text":"1.0.0 Initial release."},{"location":"usage/custom_cards/custom_card_wilbiev_subtitle/#requirements","title":"Requirements","text":"<p>This card needs the following to function correctly:</p> <p>'Text Divider Row'</p>"},{"location":"usage/custom_cards/custom_card_wilbiev_subtitle/#variables","title":"Variables","text":"Variable Example Required Default Explanation ulm_custom_card_wilbiev_subtitle_name \"Subtitle\" yes The name to display"},{"location":"usage/custom_cards/custom_card_wilbiev_subtitle/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: \"custom_card_wilbiev_subtitle\"\n  variables:\n    ulm_custom_card_wilbiev_subtitle_name: \"Lights\"\n</code></pre> Template Code custom_card_wilbiev_subtitle.yaml<pre><code>---\n### Card SubTitle ###\ncustom_card_wilbiev_subtitle:\n  variables:\n    ulm_custom_card_wilbiev_title_name: \"Subtitle\"\n  tap_action:\n    action: \"none\"\n  show_icon: false\n  show_label: false\n  show_name: false\n  styles:\n    card:\n      - height: \"auto\"\n      - padding: \"0px !important;\"\n    grid:\n      - grid-template-areas: \"'item1'\"\n      - grid-template-columns: \"1fr\"\n      - grid-template-rows: \"min-content\"\n  card_mod:\n    style: |\n      ha-card {\n        background-color: #E8E9EB !important;\n      }\n  custom_fields:\n    item1:\n      card:\n        type: \"entities\"\n        card_mod:\n          style: |\n            ha-card {\n              background-color: #E8E9EB !important;\n            }\n        entities:\n          - type: \"custom:text-divider-row\"\n            text: |\n              [[[ return variables.ulm_custom_card_wilbiev_subtitle_name ]]]\n            card_mod:\n              style: |\n                :host {\n                  --text-divider-font-size: 24px;\n                  --text-divider-color: black\n                }\n                .text-divider span {\n                  background-color: #E8E9EB !important;\n                }\n          - type: \"divider\"\n            style:\n              background-color: \"rgb(210,210,210)\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_wilbiev_title/","title":"Title Custom-card","text":""},{"location":"usage/custom_cards/custom_card_wilbiev_title/#custom-card-title","title":"Custom-card \"Title\"","text":"<p>This is a <code>custom-card</code> to display a title header.</p> <p></p>"},{"location":"usage/custom_cards/custom_card_wilbiev_title/#credits","title":"Credits","text":"<p>Author: wilbiev - 2023 Version: 1.0.0</p>"},{"location":"usage/custom_cards/custom_card_wilbiev_title/#changelog","title":"Changelog","text":"1.0.0 Initial release."},{"location":"usage/custom_cards/custom_card_wilbiev_title/#requirements","title":"Requirements","text":"<p>This card needs the following to function correctly:</p> <p>'Text Divider Row'</p>"},{"location":"usage/custom_cards/custom_card_wilbiev_title/#variables","title":"Variables","text":"Variable Example Required Default Explanation ulm_custom_card_wilbiev_title_name \"Title\" yes The name to display ulm_custom_card_wilbiev_title_nav \"/adaptive-dash/home\" no \"\" \"Navigate to another view. Shows the 'Back'-button when having a value\""},{"location":"usage/custom_cards/custom_card_wilbiev_title/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: \"custom_card_wilbiev_title\"\n  variables:\n    ulm_custom_card_wilbiev_title_name: \"Living room\"\n    ulm_custom_card_wilbiev_title_nav: \"/adaptive-dash/home\" # OPTIONAL\n</code></pre> Template Code custom_card_wilbiev_title.yaml<pre><code>---\n### Card Title ###\ncustom_card_wilbiev_title:\n  variables:\n    ulm_custom_card_wilbiev_title_name: \"Title\"\n    ulm_custom_card_wilbiev_title_nav: \"\"\n  tap_action:\n    action: \"navigate\"\n    navigation_path: \"[[[ return variables.ulm_custom_card_wilbiev_title_nav; ]]]\"\n  show_icon: false\n  show_label: false\n  show_name: false\n  styles:\n    grid:\n      - grid-template-areas: &gt;\n          [[[\n            return \"'\" + [(variables.ulm_custom_card_wilbiev_title_nav ? 'item2' : 'item1'),\n                        (variables.ulm_custom_card_wilbiev_title_nav ? 'item1' : '')].join(' ') + \"'\";\n          ]]]\n      - grid-template-columns: |\n          [[[\n            return [(variables.ulm_custom_card_wilbiev_title_nav ? 'min-content 1fr' : '1fr')].join(' ');\n          ]]]\n      - grid-template-rows: \"min-content\"\n    card:\n      - height: \"auto\"\n      - padding: \"5px !important;\"\n    custom_fields:\n      item2:\n        - display: &gt;\n            [[[\n              if(variables.ulm_custom_card_wilbiev_title_nav == \"\"){\n                return \"none\";\n              } else {\n                return \"block\";\n              }\n            ]]]\n  card_mod:\n    style: |\n      ha-card {\n        border: 2px black outset !important;\n        background-color: lightgray !important;\n      }\n  custom_fields:\n    item1:\n      card:\n        type: \"entities\"\n        card_mod:\n          style: |\n            ha-card {\n              --primary-text-color: black;\n              background-color: lightgray !important;\n              box-shadow: none;\n            }\n        entities:\n          - type: \"custom:text-divider-row\"\n            text: |\n              [[[ return variables.ulm_custom_card_wilbiev_title_name ]]]\n            card_mod:\n              style: |\n                :host {\n                  --text-divider-color: black;\n                  --text-divider-font-size: 36px;\n                  --text-divider-line-size: 3px;\n                  --text-divider-margin: 0px;\n                }\n                .text-divider span {\n                  background-color: lightgray !important;\n                }\n    item2:\n      card:\n        type: \"custom:mushroom-chips-card\"\n        chips:\n          - type: \"action\"\n            tap_action:\n              action: \"navigate\"\n              navigation_path: \"[[[ return variables.ulm_custom_card_wilbiev_title_nav; ]]]\"\n            icon: \"mdi:arrow-left\"\n            card_mod:\n              style: |\n                ha-card {\n                  --primary-text-color: black;\n                  --chip-background: #E8E9EB;\n                  --chip-height: 48px;\n                  --chip-border-radius: 50%;\n                  --chip-icon-size: 24px;\n                }\n</code></pre>"},{"location":"usage/custom_cards/custom_card_wsly_pollen/","title":"Tomorrow.io Pollen card","text":""},{"location":"usage/custom_cards/custom_card_wsly_pollen/#custom-card-tomorrowio-pollen-card","title":"Custom-card \"Tomorrow.io Pollen card\"","text":"<p>This is a <code>custom-card</code> to display the pollen index of the Tomorrow.io index</p> <p> </p>"},{"location":"usage/custom_cards/custom_card_wsly_pollen/#credits","title":"Credits","text":"<p>Author: wsly - 05/2022 Version: 1.0.1</p>"},{"location":"usage/custom_cards/custom_card_wsly_pollen/#changelog","title":"Changelog","text":"1.0.0 Initial release.  1.0.1 Allow customizing the name and icon of each pollen index, with localized defaults. (`*_name`, `*_icon` variables)"},{"location":"usage/custom_cards/custom_card_wsly_pollen/#requirements","title":"Requirements","text":"<p>This card uses the following integration:</p> <p>Tomorrow.io</p>"},{"location":"usage/custom_cards/custom_card_wsly_pollen/#usage","title":"Usage","text":"<pre><code>- type: 'custom:button-card'\n  template: custom_card_wsly_pollen\n  variables:\n    custom_card_wsly_pollen_tree: sensor.tomorrow_io_home_tree_pollen_index\n    custom_card_wsly_pollen_grass: sensor.tomorrow_io_home_grass_pollen_index\n    custom_card_wsly_pollen_weed: sensor.tomorrow_io_home_weed_pollen_index\n</code></pre>"},{"location":"usage/custom_cards/custom_card_wsly_pollen/#variables","title":"Variables","text":"Variable Example Required Default Explanation custom_card_wsly_pollen_tree \"sensor.tomorrow_io_home_tree_pollen_index\" Yes The entity for the tree pollen index custom_card_wsly_pollen_grass \"sensor.tomorrow_io_home_grass_pollen_index\" Yes The entity for the grass pollen index custom_card_wsly_pollen_weed \"sensor.tomorrow_io_home_weed_pollen_index\" Yes The entity for the weed pollen index custom_card_wsly_pollen_tree_name \"Trees\" No \"Trees\" (localized) The name to display for the tree pollen index, or `false` to use the `custom_card_wsly_pollen_tree` entity's friendly name. custom_card_wsly_pollen_tree_icon \"mdi:tree\" No \"mdi:tree\" The icon to display for the tree pollen index, or `false` to use the `custom_card_wsly_pollen_tree` entity's icon. custom_card_wsly_pollen_grass_name \"Grass\" No \"Grass\" (localized) The name to display for the grass pollen index, or `false` to use the `custom_card_wsly_pollen_grass` entity's friendly name. custom_card_wsly_pollen_grass_icon \"mdi:grass\" No \"mdi:grass\" The icon to display for the grass pollen index, or `false` to use the `custom_card_wsly_pollen_grass` entity's icon. custom_card_wsly_pollen_weed_name \"Weeds\" No \"Weeds\" (localized) The name to display for the weed pollen index, or `false` to use the `custom_card_wsly_pollen_weed` entity's friendly name. custom_card_wsly_pollen_weed_icon \"mdi:flower-pollen\" No \"mdi:flower-pollen\" The icon to display for the weed pollen index, or `false` to use the `custom_card_wsly_pollen_weed` entity's icon."},{"location":"usage/custom_cards/custom_card_wsly_pollen/#template-code","title":"Template code","text":"Template Code custom_card_wsly_pollen.yaml<pre><code>---\n### Custom card Pollen ###\ncustom_card_wsly_pollen:\n  type: \"custom:button-card\"\n  template:\n    - \"custom_card_wsly_pollen_language_variables\"\n    - \"list_3_items\"\n  triggers_update: \"all\"\n  styles:\n    card:\n      - border-radius: \"var(--border-radius)\"\n      - box-shadow: \"var(--box-shadow)\"\n  custom_fields:\n    item1:\n      card:\n        type: \"custom:button-card\"\n        template: \"custom_card_wsly_pollen_item\"\n        entity: \"[[[ return variables.custom_card_wsly_pollen_tree ]]]\"\n        name: \"[[[ return variables.custom_card_wsly_pollen_tree_name || states[variables.custom_card_wsly_pollen_tree].attributes.friendly_name ]]]\"\n        icon: \"[[[ return variables.custom_card_wsly_pollen_tree_icon || states[variables.custom_card_wsly_pollen_tree].attributes.icon ]]]\"\n    item2:\n      card:\n        type: \"custom:button-card\"\n        template: \"custom_card_wsly_pollen_item\"\n        entity: \"[[[ return variables.custom_card_wsly_pollen_grass ]]]\"\n        name: \"[[[ return variables.custom_card_wsly_pollen_grass_name || states[variables.custom_card_wsly_pollen_grass].attributes.friendly_name ]]]\"\n        icon: \"[[[ return variables.custom_card_wsly_pollen_grass_icon || states[variables.custom_card_wsly_pollen_grass].attributes.icon ]]]\"\n    item3:\n      card:\n        type: \"custom:button-card\"\n        template: \"custom_card_wsly_pollen_item\"\n        entity: \"[[[ return variables.custom_card_wsly_pollen_weed ]]]\"\n        name: \"[[[ return variables.custom_card_wsly_pollen_weed_name || states[variables.custom_card_wsly_pollen_weed].attributes.friendly_name ]]]\"\n        icon: \"[[[ return variables.custom_card_wsly_pollen_weed_icon || states[variables.custom_card_wsly_pollen_weed].attributes.icon ]]]\"\n\ncustom_card_wsly_pollen_item:\n  type: \"custom:button-card\"\n  template:\n    - \"custom_card_wsly_pollen_language_variables\"\n    - \"vertical_buttons\"\n  label: &gt;\n    [[[\n      let pollen_state_label = variables.custom_card_wsly_pollen_none;\n      if (entity.state == \"very_low\") pollen_state_label = variables.custom_card_wsly_pollen_very_low;\n      else if (entity.state == \"low\") pollen_state_label = variables.custom_card_wsly_pollen_low;\n      else if (entity.state == \"medium\") pollen_state_label = variables.custom_card_wsly_pollen_medium;\n      else if (entity.state == \"high\") pollen_state_label = variables.custom_card_wsly_pollen_high;\n      else if (entity.state == \"very_high\") pollen_state_label = variables.custom_card_wsly_pollen_very_high;\n      return pollen_state_label;\n    ]]]\n  state:\n    - value: \"none\"\n      styles:\n        icon:\n          - color: \"rgba(var(--color-grey), 1)\"\n        img_cell:\n          - background-color: \"rgba(var(--color-grey), 0.2)\"\n    - value: \"very_low\"\n      styles:\n        icon:\n          - color: \"rgba(var(--color-green), 1)\"\n        img_cell:\n          - background-color: \"rgba(var(--color-green), 0.2)\"\n    - value: \"low\"\n      styles:\n        icon:\n          - color: \"rgba(241, 196, 15, 1)\"\n        img_cell:\n          - background-color: \"rgba(241, 196, 15, 0.2)\"\n    - value: \"medium\"\n      styles:\n        icon:\n          - color: \"rgba(243, 156, 18, 1)\"\n        img_cell:\n          - background-color: \"rgba(243, 156, 18, 0.2)\"\n    - value: \"high\"\n      styles:\n        icon:\n          - color: \"rgba(231, 76, 60, 1)\"\n        img_cell:\n          - background-color: \"rgba(231, 76, 60, 0.2)\"\n    - value: \"very_high\"\n      styles:\n        icon:\n          - color: \"rgba(var(--color-pink), 1)\"\n        img_cell:\n          - background-color: \"rgba(var(--color-pink), 0.2)\"\n  styles:\n    card:\n      - box-shadow: \"none\"\n      - border-radius: \"var(--border-radius)\"\n    custom_fields:\n      extreme:\n        - border-radius: \"50%\"\n        - position: \"absolute\"\n        - margin-left: \"auto\"\n        - margin-right: \"auto\"\n        - left: \"38px\"\n        - right: \"0\"\n        - top: \"8px\"\n        - height: \"16px\"\n        - width: \"16px\"\n        - border: \"2px solid var(--card-background-color)\"\n        - font-size: \"12px\"\n        - line-height: \"14px\"\n        - background-color: \"rgba(var(--color-red),1)\"\n        - color: \"white\"\n  custom_fields:\n    extreme: &gt;\n      [[[\n        if (entity.state == \"very_high\"){\n          return `&lt;ha-icon icon=\"mdi:exclamation-thick\" style=\"width: 12px; height: 12px; color: var(--primary-background-color);\"&gt;&lt;/ha-icon&gt;`\n        }\n      ]]]\n</code></pre>"},{"location":"usage/custom_cards/custom_card_yagrasdemonde_lights_count/","title":"Counter Lights/Covers Card Custom-card","text":""},{"location":"usage/custom_cards/custom_card_yagrasdemonde_lights_count/#custom-card-counter-lightscover-card","title":"Custom-card \"Counter Lights/Cover Card\"","text":"<p>This is a <code>custom-card</code> to display number of lights on or covers open.</p> <p> </p>"},{"location":"usage/custom_cards/custom_card_yagrasdemonde_lights_count/#credits","title":"Credits","text":"<p>Author: yagrasdemonde - 04/2022</p> <p>Version: 1.0.0</p>"},{"location":"usage/custom_cards/custom_card_yagrasdemonde_lights_count/#changelog","title":"Changelog","text":"1.0.0 Initial release."},{"location":"usage/custom_cards/custom_card_yagrasdemonde_lights_count/#requirements","title":"Requirements","text":"<p>This card needs sensor counting lights/covers you want:</p> <pre><code>template:\n  - sensor:\n      - name: \"lights on\"\n        unique_id: lights_on\n        icon: mdi:lightbulb-on-outline\n        state: &gt;\n          {% set lights = [\n              states.light.living_room,\n              states.light.bedroom,\n              states.light.bathroom,\n              states.switch.kitchen,\n              ] %}\n          {{ lights | selectattr('state','eq','on') | list | count }}\n      - name: \"covers open\"\n        unique_id: covers_open\n        icon: mdi:window-shutter-open\n        state: &gt;\n          {% set covers = [\n              states.cover.bedroom,\n              states.cover.livingroom1,\n              states.cover.livingroom2,\n              ] %}\n          {{ covers | selectattr('state','eq','open') | list | count }}\n</code></pre>"},{"location":"usage/custom_cards/custom_card_yagrasdemonde_lights_count/#usage","title":"Usage","text":"<p>For lights</p> <pre><code>- type: \"custom:button-card\"\n  template: custom_card_yagrasdemonde_lights_count\n  entity: sensor.lights_on\n</code></pre> <p>For covers</p> <pre><code>- type: \"custom:button-card\"\n  template: custom_card_yagrasdemonde_lights_count\n  entity: sensor.covers_open\n  variables:\n    ulm_custom_card_yagrasdemonde_lights_count_type: \"cover\"\n    ulm_custom_card_yagrasdemonde_lights_count_icon_off: \"mdi:window-shutter\"\n    ulm_custom_card_yagrasdemonde_lights_count_color: \"blue\"\n</code></pre>"},{"location":"usage/custom_cards/custom_card_yagrasdemonde_lights_count/#variables","title":"Variables","text":"Variable Example Required Default Explanation ulm_custom_card_yagrasdemonde_lights_count_type \"cover\" No \"light\" The entity type used for translationsValues available : cover, light ulm_custom_card_yagrasdemonde_lights_count_icon_on \"mdi:lightbulb-on-outline\" No Sensor Icon Overwrites the sensor icon used for on/open state ulm_custom_card_yagrasdemonde_lights_count_icon_off \"mdi:lightbulb-outline\" No \"mdi:lightbulb-outline\" Icon for state off/closed ulm_custom_card_yagrasdemonde_lights_count_color \"red\" No \"yellow\" Style the color of icon, name and card (if applicable)Values available : blue, green, grey, pink, purple, red, yellow ulm_custom_card_yagrasdemonde_lights_count_force_background_color true No false Force background card color even in light mode Template Code custom_card_yagrasdemonde_lights_count.yaml<pre><code>---\n### Custom Card Lights (or covers) Counter ###\ncustom_card_yagrasdemonde_lights_count:\n  show_name: true\n  template:\n    - \"ulm_custom_card_yagrasdemonde_lights_count_language_variables\"\n    - \"icon_only\"\n    - \"ulm_translation_engine\"\n  variables:\n    ulm_custom_card_yagrasdemonde_lights_count_icon_on: \"[[[ return entity.attributes.icon ]]]\"\n    ulm_custom_card_yagrasdemonde_lights_count_icon_off: \"mdi:lightbulb-outline\"\n    ulm_custom_card_yagrasdemonde_lights_count_color: \"yellow\"\n    ulm_custom_card_yagrasdemonde_lights_count_force_background_color: false\n  tap_action:\n    action: \"none\"\n  name: &gt;-\n      [[[\n        var entity_count_O = '';\n        var entity_count_1 = '';\n        var entity_count_many = '';\n        if(variables.ulm_custom_card_yagrasdemonde_lights_count_type == \"cover\") {\n          entity_count_O = variables.ulm_custom_card_yagrasdemonde_lights_count_cover_0;\n          entity_count_1 = variables.ulm_custom_card_yagrasdemonde_lights_count_cover_1;\n          entity_count_many = variables.ulm_custom_card_yagrasdemonde_lights_count_cover_many;\n        }\n        else {\n          entity_count_O = variables.ulm_custom_card_yagrasdemonde_lights_count_light_0;\n          entity_count_1 = variables.ulm_custom_card_yagrasdemonde_lights_count_light_1;\n          entity_count_many = variables.ulm_custom_card_yagrasdemonde_lights_count_light_many;\n        }\n        if (entity.state != \"unavailable\") {\n          if (entity.state == 0) {\n            return entity_count_O;\n          } else if (entity.state == 1) {\n            return entity_count_1;\n          } else {\n            return entity.state + \" \" + entity_count_many;\n          }\n        } else {\n          return variables.ulm_translation_state;\n        }\n      ]]]\n  icon: &gt;\n      [[[\n          if (entity.state == 0) {\n            return variables.ulm_custom_card_yagrasdemonde_lights_count_icon_off;\n          }\n          else {\n            return variables.ulm_custom_card_yagrasdemonde_lights_count_icon_on;\n          }\n      ]]]\n  styles:\n    icon:\n      - color: &gt;\n          [[[\n              if (entity.state == 0) {\n                return 'rgba(var(--color-theme),0.2)';\n              }\n              else {\n                return 'rgba(var(--color-' + variables.ulm_custom_card_yagrasdemonde_lights_count_color + '),1)';\n              }\n          ]]]\n    name:\n      - align-self: \"center\"\n      - justify-self: \"start\"\n      - font-weight: \"bold\"\n      - font-size: \"14px\"\n      - margin-left: \"12px\"\n      - filter: \"opacity(100%)\"\n    img_cell:\n      - background-color: &gt;\n          [[[\n              if (entity.state == 0) {\n                return 'rgba(var(--color-theme),0.05)';\n              }\n              else {\n                return 'rgba(var(--color-' + variables.ulm_custom_card_yagrasdemonde_lights_count_color + '),0.2)';\n              }\n          ]]]\n    grid:\n      - grid-template-areas: \"'i n'\"\n      - grid-template-columns: \"min-content min-content\"\n      - grid-template-rows: \"min-content\"\n  state:\n    - value: 1\n      operator: \"&gt;=\"\n      styles:\n        card:\n          - background-color: &gt;-\n              [[[\n                  if (variables.ulm_custom_card_yagrasdemonde_lights_count_force_background_color == true || hass.themes.darkMode){\n                    return 'rgba(var(--color-' + variables.ulm_custom_card_yagrasdemonde_lights_count_color + '-text),0.1)';\n                  }\n                  else {\n                    return 'rgba(var(--color-background-' + variables.ulm_custom_card_yagrasdemonde_lights_count_color + '),var(--opacity-bg))';\n                  }\n              ]]]\n        name:\n          - color: \"[[[ return 'rgba(var(--color-' + variables.ulm_custom_card_yagrasdemonde_lights_count_color + '-text),1)' ]]]\"\n</code></pre>"},{"location":"usage/custom_cards/custom_chip_group_counter/","title":"Custom Chip Group Counter","text":""},{"location":"usage/custom_cards/custom_chip_group_counter/#custom-card-group-counter","title":"Custom Card \"Group Counter\"","text":""},{"location":"usage/custom_cards/custom_chip_group_counter/#credits","title":"Credits","text":"<ul> <li>Author: Albin M\u00e9doc - 2023     Version: 1.0.0</li> </ul>"},{"location":"usage/custom_cards/custom_chip_group_counter/#changelog","title":"Changelog","text":"1.0.0   Initial release"},{"location":"usage/custom_cards/custom_chip_group_counter/#description","title":"Description","text":"<p>This cards show a chip with custom text representing how many entities in a group have a specific state. Pressing on the chip will toggle the entity group, eg turn on/off all lights.</p>"},{"location":"usage/custom_cards/custom_chip_group_counter/#variables","title":"Variables","text":"Variable Default Required Notes entity Yes Hide chip if no entities are active. ulm_custom_chip_group_counter_hide_if_zero false No Hide chip if no entities are active. ulm_custom_chip_group_counter_type light No Specify the type of entities, used for translation ulm_custom_chip_group_counter_count_state on No States that should be counted ulm_custom_chip_group_counter_color yellow Yes Color of the icon  Can choose between: <code>blue</code>, <code>red</code>, <code>green</code>, <code>yellow</code>, <code>pink</code>, <code>purple</code> ulm_custom_chip_group_counter_icon_zero mdi:lightbulb-outline No Icon when no entity's state is satisfied ulm_custom_chip_group_counter_icon_one mdi:lightbulb-on-outline No Icon when one entity's state is satisfied ulm_custom_chip_group_counter_icon_multiple mdi:lightbulb-on-outline No Icon when multiple entities state is satisfied"},{"location":"usage/custom_cards/custom_chip_group_counter/#usage","title":"Usage","text":""},{"location":"usage/custom_cards/custom_chip_group_counter/#minimal-config-1","title":"Minimal config 1","text":"<p>The entities active within the group will only go one level down. If you have a group with a group the subgroup will only be treated as a single entity.</p> <pre><code>- type: 'custom:button-card'\n  template: 'custom_chip_group_counter'\n  entity: 'lights.living_room'\n</code></pre>"},{"location":"usage/custom_cards/custom_chip_group_counter/#minimal-config-2","title":"Minimal config 2","text":"<p>This configuration can be used if you have a sensor that should represent the state. This can be good if you have groups within groups and the calculation is happening outside this card. The entity must still be set and should represent all the entities that should be toggled on press.</p> <pre><code>- type: 'custom:button-card'\n  template: 'custom_chip_group_counter'\n  entity: 'light.all'\n  variables:\n      ulm_custom_chip_group_counter_entities_active: 'sensor.lights_on'\n</code></pre>"},{"location":"usage/custom_cards/custom_chip_group_counter/#full-config-2","title":"Full config 2","text":"<pre><code>- type: 'custom:button-card'\n  template: 'custom_chip_group_counter'\n  entity: 'light.all'\n  variables:\n      ulm_custom_chip_group_counter_hide_if_zero: true\n      ulm_custom_chip_group_counter_type: speaker\n      ulm_custom_chip_group_counter_count_state:\n          - 'playing'\n          - 'buffering'\n      ulm_custom_chip_group_counter_color: green\n      ulm_custom_chip_group_counter_icon_zero: 'mdi:speaker'\n      ulm_custom_chip_group_counter_icon_one: 'mdi:speaker'\n      ulm_custom_chip_group_counter_icon_multiple: 'mdi:speaker-multiple'\n</code></pre>"},{"location":"usage/custom_cards/custom_chip_group_counter/#template-code","title":"Template code","text":"Template Code custom_chip_group_counter.yaml<pre><code>---\n### Custom Chip Group Counter ###\ncustom_chip_group_counter:\n  template:\n    - \"chips\"\n    - \"custom_chip_group_counter_language_variables\"\n  variables:\n    ulm_custom_chip_group_counter_icon_zero: \"mdi:lightbulb-outline\"\n    ulm_custom_chip_group_counter_icon_one: \"mdi:lightbulb-on-outline\"\n    ulm_custom_chip_group_counter_icon_multiple: \"mdi:lightbulb-on-outline\"\n    ulm_custom_chip_group_counter_color: \"yellow\"\n    ulm_custom_chip_group_counter_count_state: \"on\"\n    ulm_custom_chip_group_counter_type: \"light\"\n    ulm_custom_chip_group_counter_hide_if_zero: false\n  tap_action:\n    action: \"toggle\"\n  triggers_update: \"all\"\n  show_icon: true\n  icon: |\n    [[[\n      let entities_active = 0;\n      if(variables.ulm_custom_chip_group_counter_entities_active) {\n        entities_active = states[variables.ulm_custom_chip_group_counter_entities_active].state;\n      } else {\n        entities_active = states[\n          entity.entity_id\n        ].attributes.entity_id.filter((child_entity_id) =&gt; {\n          return variables.ulm_custom_chip_group_counter_count_state.includes(states[child_entity_id]?.state);\n        }).length;\n      }\n\n      if (entities_active == 0) {\n        return variables.ulm_custom_chip_group_counter_icon_zero;\n      } else if (entities_active == 1) {\n        return variables.ulm_custom_chip_group_counter_icon_one;\n      } else {\n        return variables.ulm_custom_chip_group_counter_icon_multiple;\n      }\n    ]]]\n  label: |\n    [[[\n      let entities_active = 0;\n      if(variables.ulm_custom_chip_group_counter_entities_active) {\n        entities_active = states[variables.ulm_custom_chip_group_counter_entities_active].state;\n      } else {\n        entities_active = states[\n          entity.entity_id\n        ].attributes.entity_id.filter((child_entity_id) =&gt; {\n          return variables.ulm_custom_chip_group_counter_count_state.includes(states[child_entity_id]?.state);\n        }).length;\n      }\n\n      const type = variables.ulm_custom_chip_group_counter_type;\n      const plural_typ = entities_active == 0 ? \"zero\" : entities_active == 1 ? \"one\" : \"multiple\";\n      const translation_path = `custom_chip_group_counter_${type}_${plural_typ}`\n      return variables[translation_path].replace('{count}', entities_active);\n    ]]]\n  styles:\n    card:\n      - display: |\n          [[[\n            let entities_active = 0;\n            if(variables.ulm_custom_chip_group_counter_entities_active) {\n              entities_active = states[variables.ulm_custom_chip_group_counter_entities_active].state;\n            } else {\n              entities_active = states[\n                entity.entity_id\n              ].attributes.entity_id.filter((child_entity_id) =&gt; {\n                return variables.ulm_custom_chip_group_counter_count_state.includes(states[child_entity_id]?.state);\n              }).length;\n            }\n\n            if(variables.ulm_custom_chip_group_counter_hide_if_zero &amp;&amp; entities_active == 0){\n              return \"none\";\n            }\n            return \"block\";\n          ]]]\n    grid:\n      - grid-template-areas: \"'i l'\"\n    icon:\n      - color: |\n          [[[\n            let entities_active = 0;\n            if(variables.ulm_custom_chip_group_counter_entities_active) {\n              entities_active = states[variables.ulm_custom_chip_group_counter_entities_active].state;\n            } else {\n              entities_active = states[\n                entity.entity_id\n              ].attributes.entity_id.filter((child_entity_id) =&gt; {\n                return variables.ulm_custom_chip_group_counter_count_state.includes(states[child_entity_id]?.state);\n              }).length;\n            }\n\n            if (entities_active == 0) {\n              return 'rgba(var(--color-theme),0.2)';\n            }\n            else {\n              return 'rgba(var(--color-' + variables.ulm_custom_chip_group_counter_color + '),1)';\n            }\n          ]]]\n</code></pre>"},{"location":"usage/custom_cards/custom_chip_moon/","title":"Custom-Chip \"Moon\"","text":""},{"location":"usage/custom_cards/custom_chip_moon/#custom-chip-moon","title":"Custom-Chip \"Moon\"","text":""},{"location":"usage/custom_cards/custom_chip_moon/#credits","title":"Credits","text":"<p>Author: JStaegerino - 2025 Version 1.0.0</p>"},{"location":"usage/custom_cards/custom_chip_moon/#changelog","title":"Changelog","text":"1.0.0 Initial release"},{"location":"usage/custom_cards/custom_chip_moon/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: custom_chip_moon\n  entity: sensor.moon_phasee\n</code></pre>"},{"location":"usage/custom_cards/custom_chip_moon/#requirements","title":"Requirements","text":"<p>Add the official Moon integration from Home Assistant</p>"},{"location":"usage/custom_cards/custom_chip_moon/#variables","title":"Variables","text":"Variable Default Required Notes entity Your moon phase sensor"},{"location":"usage/custom_cards/custom_chip_moon/#template-code","title":"Template code","text":"Template Code custom_chip_moon.yaml<pre><code>---\ncustom_chip_moon:\n  template: \"chips\"\n  tap_action:\n    action: \"more-info\"\n  show_icon: true\n  icon: |\n    [[[\n      var state = entity.state;\n      var icon = {\n        \"new_moon\": \"mdi:moon-new\",\n        \"waxing_crescent\": \"mdi:moon-waxing-crescent\",\n        \"first_quarter\": \"mdi:moon-first-quarter\",\n        \"waxing_gibbous\": \"mdi:moon-waxing-gibbous\",\n        \"full_moon\": \"mdi:moon-full\",\n        \"waning_gibbous\": \"mdi:moon-waning-gibbous\",\n        \"last_quarter\": \"mdi:moon-last-quarter\",\n        \"waning_crescent\": \"mdi:moon-waning-crescent\"\n        }\n      return (icon[state] || icon[\"default\"]);\n    ]]]\n  styles:\n    grid:\n      - grid-template-areas: \"'i'\"\n</code></pre>"},{"location":"usage/custom_cards/custom_chip_myenedis/","title":"My Enedis Chip Custom-card","text":""},{"location":"usage/custom_cards/custom_chip_myenedis/#custom-chip-my-enedis","title":"Custom-chip \"My Enedis\"","text":"<p>The <code>myenedis</code> you can control a input_number entity</p> <p></p> <p></p>"},{"location":"usage/custom_cards/custom_chip_myenedis/#credits","title":"Credits","text":"<p>Author: acesyde - 2021 Version: 1.0.0</p>"},{"location":"usage/custom_cards/custom_chip_myenedis/#changelog","title":"Changelog","text":"1.0.0 Initial release"},{"location":"usage/custom_cards/custom_chip_myenedis/#why-not-the-default-chip_power_consumption","title":"Why not the default <code>chip_power_consumption</code>","text":"<ul> <li>The my enedis integration doesn't split the cost and the consumption in a specific sensor</li> <li>All values are in the main sensor under the <code>attributes</code> item</li> <li>Split <code>Heures Creuses (HC)</code> and <code>Heures pleines (HP)</code></li> </ul>"},{"location":"usage/custom_cards/custom_chip_myenedis/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: custom_chip_myenedis\n  entity: sensor.myenedis_123456789\n  variables:\n    ulm_chip_separate_hp_hc: true\n</code></pre>"},{"location":"usage/custom_cards/custom_chip_myenedis/#requirements","title":"Requirements","text":"<p>My Enedis integration</p>"},{"location":"usage/custom_cards/custom_chip_myenedis/#variables","title":"Variables","text":"Variable Default Required Notes entity Your MyEnedis Sensor ulm_chip_separate_hp_hc false Separate HC/HC in the chip"},{"location":"usage/custom_cards/custom_chip_myenedis/#template-code","title":"Template code","text":"Template Code custom_chip_myenedis.yaml<pre><code>---\n### Chip Power Consumption ###\ncustom_chip_myenedis:\n  template:\n    - \"chips\"\n  variables:\n    ulm_chip_separate_hp_hc: false\n    ulm_chip_unit_of_measurement: \"[[[ return entity.attributes.unit_of_measurement ]]]\"\n  triggers_update: \"all\"\n  label: |\n    [[[\n      var result = \"\ud83d\udcb0 \" +  parseFloat(entity.attributes.daily_cost).toFixed(1) + \" \u20ac\";\n\n      if(variables.ulm_chip_separate_hp_hc) {\n        result += \" \u2600\ufe0f \" + parseFloat(entity.attributes.yesterday_HP).toFixed(1) + \" \" +  variables.ulm_chip_unit_of_measurement;\n        result += \" \ud83c\udf11 \" + parseFloat(entity.attributes.yesterday_HC).toFixed(1) + \" \" +  variables.ulm_chip_unit_of_measurement;\n      } else {\n        result += \" \u26a1 \" + parseFloat(entity.attributes.yesterday_HCHP).toFixed(1) + \" \" +  variables.ulm_chip_unit_of_measurement;\n      }\n\n      return result;\n    ]]]\n</code></pre>"},{"location":"usage/custom_cards/custom_chip_simple_temp/","title":"Custom-Chip \"Simple Temp\"","text":""},{"location":"usage/custom_cards/custom_chip_simple_temp/#custom-chip-simple-temp","title":"Custom-Chip \"Simple Temp\"","text":""},{"location":"usage/custom_cards/custom_chip_simple_temp/#credits","title":"Credits","text":"<p>Author: JStaegerino - 2025 Version 1.0.0</p>"},{"location":"usage/custom_cards/custom_chip_simple_temp/#changelog","title":"Changelog","text":"1.0.0 Initial release"},{"location":"usage/custom_cards/custom_chip_simple_temp/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: custom_chip_simple_temp\n  entity: sensor.temperature\n</code></pre>"},{"location":"usage/custom_cards/custom_chip_simple_temp/#requirements","title":"Requirements","text":"<p>Add an temperature sensor</p>"},{"location":"usage/custom_cards/custom_chip_simple_temp/#variables","title":"Variables","text":"Variable Default Required Notes entity Your temperature sensor"},{"location":"usage/custom_cards/custom_chip_simple_temp/#template-code","title":"Template code","text":"Template Code custom_chip_simple_temp.yaml<pre><code>---\ncustom_chip_simple_temp:\n  template:\n    - \"chips\"\n  entity: \"[[[ return entity.state]]]\"\n  variables:\n    ulm_language: &gt;\n      [[[\n        return hass[\"language\"];\n      ]]]\n  triggers_update: \"all\"\n  tap_action:\n    action: \"more-info\"\n  label: |\n    [[[\n      function convertTemperature(temp) {\n        if (parseFloat(temp) == temp &amp;&amp; Math.floor(temp) != temp) {\n            return parseFloat(temp).toFixed(1);\n        }\n        return temp;\n      }\n      var outside_temp = entity.state;\n      var label =  convertTemperature(outside_temp) + \"\u00b0\";\n      label = label\n      return label;\n    ]]]\n</code></pre>"},{"location":"usage/custom_cards/custom_chip_tesla_temperature/","title":"Custom-chip <code>Tesla Temperature</code>","text":""},{"location":"usage/custom_cards/custom_chip_tesla_temperature/#information","title":"Information","text":"<p>Custom-chip <code>Tesla Temperature</code> is a chip showing the status of set temperature and current inside temperature.</p>"},{"location":"usage/custom_cards/custom_chip_tesla_temperature/#changelog","title":"Changelog","text":"1.0.0 Initial release"},{"location":"usage/custom_cards/custom_chip_tesla_temperature/#usage","title":"Usage","text":"<pre><code>- type: \"custom:button-card\"\n  template: custom_chip_tesla_temperature\n  variables:\n      ulm_chip_hvac: climate.tesla_hvac_climate_system\n</code></pre>"},{"location":"usage/custom_cards/custom_chip_tesla_temperature/#requirements","title":"Requirements","text":"<p>UI Lovelace Minimalist</p> <p>Tesla Custom Integration</p>"},{"location":"usage/custom_cards/custom_chip_tesla_temperature/#variables","title":"Variables","text":"Variable Default Required Explanation ulm_chip_hvac Yes Tesla hvac entity"},{"location":"usage/custom_cards/custom_chip_tesla_temperature/#template-code","title":"Template code","text":"<pre><code>---\ncustom_chip_tesla_temperature:\n  template:\n    - \"chip_icon_label\"\n    - \"ulm_translation_engine\"\n  variables:\n  ulm_card_enable_popup: false\n  triggers_update: \"all\"\n  label: |\n    [[[\n      function convertTemperature(temp) {\n        if (parseFloat(temp) == temp &amp;&amp; Math.floor(temp) != temp) {\n          return parseFloat(temp).toFixed(1);\n        }\n        return temp;\n      }\n      var set_temp = states[variables.ulm_chip_hvac].attributes.temperature;\n      var inside_temp = states[variables.ulm_chip_hvac].attributes.current_temperature;\n      var label = \"Set \" + convertTemperature(set_temp) + \"\u00b0\" + \" / Current \" + convertTemperature(inside_temp) + \"\u00b0\";\n      return label;\n    ]]]\n  icon: |\n    [[[\n      var preset = states[variables.ulm_chip_hvac].attributes.preset_mode.toLowerCase();\n      var icon = {\n        \"normal\": \"mdi:thermometer\",\n        \"defrost\": \"mdi:snowflake-melt\",\n        \"keep on\": \"mdi:heat-wave\",\n        \"dog mode\": \"mdi:dog-side\",\n        \"camp mode\": \"mdi:campfire\",\n        \"default\": \"mdi:thermometer\"\n      }\n      return (icon[preset] || icon[\"default\"]);\n    ]]]\n</code></pre>"},{"location":"usage/custom_cards/custom_chip_update/","title":"Custom-chip \"Update\"","text":""},{"location":"usage/custom_cards/custom_chip_update/#information","title":"Information","text":"<p>Chip that shows you if an update for Home Assistant is available.</p>"},{"location":"usage/custom_cards/custom_chip_update/#changelog","title":"Changelog","text":"1.0.0 Initial release"},{"location":"usage/custom_cards/custom_chip_update/#usage","title":"Usage","text":"<pre><code>- type: custom:button-card\n  template: chip_update\n  entity: group.updates\n  variables:\n    ulm_chip_update_path: '/ui-lovelace-minimalist/system'\n</code></pre>"},{"location":"usage/custom_cards/custom_chip_update/#variables","title":"Variables","text":"Variable Example Required Explanation entity group.updates yes update entity ulm_chip_update_path /ui-lovelace-minimalist/system yes path to navigate"},{"location":"usage/custom_cards/custom_chip_update/#template-code","title":"Template code","text":"<pre><code>---\n### Chip Update ###\nchip_update:\n  template:\n    - \"ulm_language_variables\"\n    - \"chips\"\n  tap_action:\n    action: navigate\n    navigation_path: \"[[[ return variables.ulm_chip_update_path; ]]]\"\n    haptic: light\n  show_icon: true\n  state:\n  - operator: default\n    color: red\n    icon: mdi:shield-alert\n    label: \"[[[ return variables.ulm_updates_available  ]]]\"\n  - value: 'off'\n    color: green\n    icon: mdi:shield-check\n    label: \"[[[ return variables.ulm_no_updates_available  ]]]\"\n  styles:\n    grid:\n      - grid-template-areas: \"'i l'\"\n</code></pre>"},{"location":"usage/custom_cards/custom_chip_update/#requirements","title":"Requirements","text":"<p>If you don't have an update sensor follow that instruction to create one.</p>"},{"location":"usage/custom_cards/custom_chip_update/#credits","title":"Credits","text":"<ul> <li>Author: JeffConrad18 - 2022</li> <li>Version: 1.0</li> </ul>"},{"location":"usage/custom_cards/custom_chip_vlape_garage/","title":"Garage Chip Custom-card","text":""},{"location":"usage/custom_cards/custom_chip_vlape_garage/#custom-chip-garage","title":"Custom-chip <code>Garage</code>","text":"<p>Custom-chip <code>Garage</code> is a chip showing the status of a garage door.</p> <p>INSERT IMAGES</p>"},{"location":"usage/custom_cards/custom_chip_vlape_garage/#credits","title":"Credits","text":"<p>Author: Vincent Lape - 2023 Credits: THe basis of this chip was derived from built-in Alarm chip Version: 1.0.0</p>"},{"location":"usage/custom_cards/custom_chip_vlape_garage/#changelog","title":"Changelog","text":"1.0.0 Initial release"},{"location":"usage/custom_cards/custom_chip_vlape_garage/#usage","title":"Usage","text":"<pre><code>  - type: 'custom:button-card'\n    template: chip_garage\n    entity: cover.garage_door\n</code></pre>"},{"location":"usage/custom_cards/custom_chip_vlape_garage/#requirements","title":"Requirements","text":"<p>UI Lovelace Minimalist</p>"},{"location":"usage/custom_cards/custom_chip_vlape_garage/#variables","title":"Variables","text":"Variable Default Required Notes entity Yes Garage door entity"},{"location":"usage/custom_cards/custom_chip_vlape_garage/#template-code","title":"Template code","text":"Template Code custom_chip_vlape_garage.yaml<pre><code>---\n### custom_chip_vlape_garage ###\nchip_garage:\n  template:\n    - \"chip_icon_label\"\n    - \"ulm_translation_engine\"\n  label: \"[[[ return variables.ulm_translation_state ]]]\"\n  icon: |\n    [[[\n      var state = entity.state.toLowerCase();\n      var garage_icon = {\n        \"default\": \"mdi:garage\",\n        \"closed\": \"mdi:garage\",\n        \"open\": \"mdi:garage-open\"\n      }\n      return (garage_icon[state] || garage_icon[\"default\"]);\n    ]]]\n  styles:\n    icon:\n      - color: |\n          [[[\n            var state = entity.state.toLowerCase();\n            var garage_color = {\n              \"default\": \"var(--google-green)\",\n              \"closed\": \"var(--google-green)\",\n              \"open\": \"var(--google-red)\"\n            }\n            return (garage_color[state] || garage_color[\"default\"]);\n          ]]]\n</code></pre>"},{"location":"usage/custom_cards/custom_template_shogun160_battery_info/","title":"Custom Template Battery Info","text":""},{"location":"usage/custom_cards/custom_template_shogun160_battery_info/#custom-template-battery-info","title":"Custom Template \"Battery Info\"","text":""},{"location":"usage/custom_cards/custom_template_shogun160_battery_info/#credits","title":"Credits","text":"<ul> <li>Full credit to user basbruss, who created the design and base of it in his person card</li> </ul>"},{"location":"usage/custom_cards/custom_template_shogun160_battery_info/#changelog","title":"Changelog","text":"1.0.0 Initial release"},{"location":"usage/custom_cards/custom_template_shogun160_battery_info/#description","title":"Description","text":"<p>This is an template to add the battery level to every ui minimalist card</p>"},{"location":"usage/custom_cards/custom_template_shogun160_battery_info/#variables","title":"Variables","text":"Variable Default Required Notes ulm_battery_entity No The entity to represent the battery_level"},{"location":"usage/custom_cards/custom_template_shogun160_battery_info/#usage-with-battery-or-battery_level-attribute-from-entity","title":"Usage with battery or battery_level attribute from entity","text":"<pre><code>- type: 'custom:button-card'\n    template:\n      - card_binary_sensor\n      - battery_info\n    entity: binary_sensor.badezimmer_tuer_contact\n    variables:\n      ulm_show_last_changed: false\n</code></pre>"},{"location":"usage/custom_cards/custom_template_shogun160_battery_info/#usage-with-variable-ulm_battery_entity","title":"Usage with variable ulm_battery_entity","text":"<pre><code>- type: 'custom:button-card'\n    template:\n      - card_binary_sensor\n      - battery_info\n    entity: binary_sensor.badezimmer_tuer_contact\n    variables:\n      ulm_show_last_changed: false\n      ulm_battery_entity: sensor.badezimmer_tuer_battery_level\n</code></pre>"},{"location":"usage/layout/","title":"Layout Formatting","text":""},{"location":"usage/layout/#aligning-cards","title":"Aligning cards","text":"<p>If you want to alight cards to the center, right. Or only 1 card on the right it can be done using a <code>blank-card</code>.</p> Center <p></p> <pre><code># Card in the Center\n- type: horizontal-stack\n  cards:\n    - type: \"custom:button-card\"\n      color_type: blank-card\n\n    - type: custom:button-card\n      template: chip_icon_label\n      label: Your Card Here\n\n    - type: \"custom:button-card\"\n      color_type: blank-card\n</code></pre> Right <p></p> <pre><code># Card on the Right\n- type: horizontal-stack\n  cards:\n    - type: \"custom:button-card\"\n      color_type: blank-card\n\n    - type: custom:button-card\n      template: chip_icon_label\n      label: Your Card Here\n</code></pre> Left &amp; Right <p></p> <pre><code># Card on the Right and Left\n- type: horizontal-stack\n  cards:\n    - type: custom:button-card\n      template: chip_icon_label\n      label: Your left card here\n\n    - type: \"custom:button-card\"\n      color_type: blank-card\n\n    - type: custom:button-card\n      template: chip_icon_label\n      label: Your right card here\n</code></pre>"},{"location":"usage/popups/popup_cover/","title":"Cover Popup","text":""},{"location":"usage/popups/popup_cover/#cover-popup","title":"Cover popup","text":""},{"location":"usage/popups/popup_cover/#card-compatibility","title":"Card compatibility","text":"<p>This popup is displayed using <code>popup</code> and it is compatible with the following cards/chips :</p> <ul> <li>card_cover</li> </ul>"},{"location":"usage/popups/popup_cover/#how-to-use","title":"How to use","text":"<p>To enable this popup, add the variable <code>ulm_card_cover_enable_popup</code> and set to <code>true</code>.</p> <p>Warning</p> <p>This is a different approach as the other <code>popup_cards</code> use.</p> <p>For example :</p> <pre><code>- type: \"custom:button-card\"\n  template: card_cover\n  entity: cover.garage\n  variables:\n    ulm_card_cover_enable_popup: true\n</code></pre>"},{"location":"usage/popups/popup_cover/#credits","title":"Credits","text":"<ul> <li>Designed by AndyVRD</li> </ul>"},{"location":"usage/popups/popup_light/","title":"Light Popup","text":""},{"location":"usage/popups/popup_light/#light-popup","title":"Light popup","text":""},{"location":"usage/popups/popup_light/#requirements","title":"Requirements","text":"<ul> <li>My Cards Bundle aka slider-card (download for HACS)</li> <li>Light Entity Card (download for HACS)</li> </ul>"},{"location":"usage/popups/popup_light/#card-compatibility","title":"Card compatibility","text":"<p>This popup is displayed using <code>hold_action</code> and it is compatible with the following cards/chips :</p> <ul> <li>card_light</li> </ul>"},{"location":"usage/popups/popup_light/#how-to-use","title":"How to use","text":""},{"location":"usage/popups/popup_light/#variables","title":"Variables","text":"Variable/Entity Default Required Notes Requirement ulm_card_light_color_palette Add <code>select</code> entity to control color palette <p>To enable this popup, add the variable <code>ulm_card_light_enable_popup</code> and set to <code>true</code>.</p> <p>Warning</p> <p>This is a different approach as the other <code>popup_cards</code> use.</p> <p>For example :</p> <pre><code>- type: \"custom:button-card\"\n  template:\n    - card_light\n  entity: light.cuisine\n  variables:\n    ulm_card_light_enable_popup: true\n    ulm_card_light_color_palette: select.wled_color_palette\n</code></pre>"},{"location":"usage/popups/popup_light/#credits","title":"Credits","text":"<ul> <li>Designed by schumijo and bavo (special thanks to him for his help on this development)).</li> </ul>"},{"location":"usage/popups/popup_media_player/","title":"Media_player Popup","text":""},{"location":"usage/popups/popup_media_player/#media-player-popup","title":"Media Player popup","text":""},{"location":"usage/popups/popup_media_player/#card-compatibility","title":"Card compatibility","text":"<p>This popup is displayed using <code>hold_action</code> and it is compatible with the following cards/chips :</p> <ul> <li>card_media_player</li> </ul>"},{"location":"usage/popups/popup_media_player/#how-to-use","title":"How to use","text":"<p>To enable this popup, add the variable <code>ulm_card_media_player_enable_popup</code> and set to <code>true</code>.</p> <p>!!! warning This is a different approach as the other popup_cards use.</p> <p>For example :</p> <pre><code>- type: \"custom:button-card\"\n  template:\n    - card_media_player\n  entity: media_player.lounge_room\n  variables:\n    ulm_card_media_player_enable_popup: true\n</code></pre>"},{"location":"usage/popups/popup_media_player/#credits","title":"Credits","text":"<ul> <li>Designed by schumijo and bavo (special thanks to him for his help on this development)).</li> </ul>"},{"location":"usage/popups/popup_power_outlet/","title":"Power Outlet Popup","text":""},{"location":"usage/popups/popup_power_outlet/#power-outlet-popup","title":"Power outlet popup","text":""},{"location":"usage/popups/popup_power_outlet/#requirements","title":"Requirements","text":"<ul> <li>mini-graph-card (download for HACS)</li> </ul>"},{"location":"usage/popups/popup_power_outlet/#card-compatibility","title":"Card compatibility","text":"<p>This popup is displayed using <code>custom_actions</code> and it is compatible with the following cards/chips :</p> <ul> <li>card_generic</li> <li>card_generic_swap</li> <li>card_binary_sensor</li> <li>card_binary_sensor_alert</li> <li>card_power_outlet</li> <li>card_input_boolean</li> <li>card_battery</li> </ul>"},{"location":"usage/popups/popup_power_outlet/#variables","title":"Variables","text":"Variable Example Required Explanation ulm_popup_power_outlet_sensor1 sensor.metered_power yes Sensor entity displayed on top left button ulm_popup_power_outlet_sensor2 sensor.metered_electric_consumed yes Sensor entity displayed on top right button ulm_popup_power_outlet_graph_sensor sensor.metered_power yes Sensor entity displayed on graph"},{"location":"usage/popups/popup_power_outlet/#how-to-use","title":"How to use","text":"<p>Breaking Change from version <code>V1.1.2</code></p> <p>This popup can now be triggered with the custom action \"popup\". The popup template can be deleted and use instead the variable <code>ulm_outlet_power_enable_popup: true</code> to enable the use of the popup.</p> <p>For example :</p> <pre><code>- type: \"custom:button-card\"\n  template:\n    - card_power_outlet\n  variables:\n    ulm_card_power_outlet_consumption_sensor: sensor.metered_wall_plug_switch_power_3\n    ulm_popup_power_outlet_sensor1: sensor.metered_wall_plug_switch_power_3\n    ulm_popup_power_outlet_sensor2: sensor.metered_wall_plug_switch_electric_consumed_kwh_2\n    ulm_popup_power_outlet_graph_sensor: sensor.metered_wall_plug_switch_power_3\n    ulm_outlet_power_enable_popup: true\n  entity: switch.metered_wall_plug_switch_2\n</code></pre>"},{"location":"usage/popups/popup_power_outlet/#credits","title":"Credits","text":"<ul> <li>Designed by schumijo and bavo (special thanks to him for his help on this development)).</li> </ul>"},{"location":"usage/popups/popup_thermostat/","title":"Thermostat Popup","text":""},{"location":"usage/popups/popup_thermostat/#thermostat-popup","title":"Thermostat popup","text":""},{"location":"usage/popups/popup_thermostat/#card-compatibility","title":"Card compatibility","text":"<p>This popup is displayed using <code>hold_action</code> and it is compatible with the following cards/chips :</p> <ul> <li>card_thermostat</li> </ul>"},{"location":"usage/popups/popup_thermostat/#variables","title":"Variables","text":"Variable Example Required Explanation ulm_card_thermostat_preset_mode true no Switch to Preset Mode"},{"location":"usage/popups/popup_thermostat/#how-to-use","title":"How to use","text":"<p>To enable this popup, add the variable <code>ulm_card_thermostat_enable_popup</code> and set to <code>true</code>.</p> <p>Warning</p> <p>This is a different approach as the other <code>popup_cards</code> use.</p> <p>For example :</p> <pre><code>- type: \"custom:button-card\"\n  template: card_thermostat\n  entity: climate.thermostat\n  variables:\n    ulm_card_thermostat_enable_popup: true\n    ulm_card_thermostat_preset_mode: true\n</code></pre>"},{"location":"usage/popups/popup_thermostat/#credits","title":"Credits","text":"<ul> <li>Designed by schumijo</li> </ul>"},{"location":"usage/popups/popup_vacuum/","title":"Vacuum Popup","text":""},{"location":"usage/popups/popup_vacuum/#vacuum-popup","title":"Vacuum popup","text":""},{"location":"usage/popups/popup_vacuum/#requirements","title":"Requirements","text":"<p>This popup does not work without the following card from HACS:</p> <ul> <li>Vacuum Card (download from HACS)</li> </ul>"},{"location":"usage/popups/popup_vacuum/#card-compatibility","title":"Card compatibility","text":"<p>This popup is displayed using <code>popup</code> and it is compatible with the following cards/chips :</p> <ul> <li>card_vacuum</li> </ul>"},{"location":"usage/popups/popup_vacuum/#how-to-use","title":"How to use","text":"<p>To enable this popup, add the variable <code>ulm_card_vacuum_enable_popup</code> and set to <code>true</code>.</p> <p>Warning</p> <p>This is a different approach as the other <code>popup_cards</code> use.</p> <p>For example :</p> <pre><code>- type: \"custom:button-card\"\n  template: card_vacuum\n  entity: vacuum.garage\n  variables:\n    ulm_card_vacuum_enable_popup: true\n    uml_card_vacuum_camera: camera.vacuum\n</code></pre>"},{"location":"usage/popups/popup_vacuum/#credits","title":"Credits","text":"<ul> <li>Designed by Basbruss</li> </ul>"},{"location":"usage/popups/popup_weather/","title":"Weather Popup","text":""},{"location":"usage/popups/popup_weather/#weather-popup","title":"Weather popup","text":""},{"location":"usage/popups/popup_weather/#requirements","title":"Requirements","text":"<ul> <li>weather-radar-card (download for HACS)</li> </ul>"},{"location":"usage/popups/popup_weather/#how-to-use","title":"How to use","text":"<p>To enable this popup, add the following code to your card:</p> <pre><code>  ulm_custom_popup:\n      template: \"popup_weather_forecast\"\n      entity: weather.xxx\n      popup_variables:\n          ulm_weather_popup_surpress_first_forecast: false\n</code></pre>"},{"location":"usage/popups/popup_weather/#variables","title":"Variables","text":"Variable Default Required Notes entity ulm_weather_popup_surpress_first_forecast false Suppress first forecast entry"},{"location":"usage/popups/popup_weather/#credits","title":"Credits","text":"<ul> <li>Designed by schumijo</li> </ul>"}]}